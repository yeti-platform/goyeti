openapi: 3.1.0
info:
  title: FastAPI
  version: 0.1.0
servers:
- url: /
paths:
  /api/v2/auth/token:
    post:
      operationId: login_api_v2_auth_token_post
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Body_login_api_v2_auth_token_post'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Login
      tags:
      - auth
  /api/v2/auth/api-token:
    post:
      operationId: login_api_api_v2_auth_api_token_post
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - APIKeyHeader: []
      summary: Login Api
      tags:
      - auth
  /api/v2/auth/me:
    get:
      operationId: me_api_v2_auth_me_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Successful Response
      security:
      - OAuth2PasswordBearer: []
      - APIKeyCookie: []
      summary: Me
      tags:
      - auth
  /api/v2/auth/logout:
    post:
      operationId: logout_api_v2_auth_logout_post
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      summary: Logout
      tags:
      - auth
  /api/v2/observables/:
    get:
      operationId: observables_root_api_v2_observables__get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Observable'
                type: array
          description: Successful Response
      security:
      - OAuth2PasswordBearer: []
      - APIKeyCookie: []
      summary: Observables Root
      tags:
      - observables
    post:
      description: |-
        Creates a new observable in the database.

        Raises:
            HTTPException(400) if observable already exists.
      operationId: new_api_v2_observables__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewObservableRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response_New_Api_V2_Observables__Post'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      - APIKeyCookie: []
      summary: New
      tags:
      - observables
  /api/v2/observables/extended:
    post:
      description: |-
        Creates a new observable in the database with extended properties.

        Raises:
            HTTPException(400) if observable already exists.
      operationId: new_extended_api_v2_observables_extended_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewExtendedObservableRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response_New_Extended_Api_V2_Observables_Extended_Post'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      - APIKeyCookie: []
      summary: New Extended
      tags:
      - observables
  /api/v2/observables/{observable_id}:
    delete:
      description: Deletes an observable.
      operationId: delete_api_v2_observables__observable_id__delete
      parameters:
      - explode: false
        in: path
        name: observable_id
        required: true
        schema:
          title: Observable Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      - APIKeyCookie: []
      summary: Delete
      tags:
      - observables
    get:
      description: Returns details about an observable.
      operationId: details_api_v2_observables__observable_id__get
      parameters:
      - explode: false
        in: path
        name: observable_id
        required: true
        schema: {}
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response_Details_Api_V2_Observables__Observable_Id__Get'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      - APIKeyCookie: []
      summary: Details
      tags:
      - observables
    patch:
      description: Modifies observable in the database.
      operationId: patch_api_v2_observables__observable_id__patch
      parameters:
      - explode: false
        in: path
        name: observable_id
        required: true
        schema: {}
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchObservableRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response_Patch_Api_V2_Observables__Observable_Id__Patch'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      - APIKeyCookie: []
      summary: Patch
      tags:
      - observables
  /api/v2/observables/bulk:
    post:
      description: Bulk-creates new observables in the database.
      operationId: bulk_add_api_v2_observables_bulk_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewBulkObservableAddRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkObservableAddResponse'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      - APIKeyCookie: []
      summary: Bulk Add
      tags:
      - observables
  /api/v2/observables/{observable_id}/context:
    post:
      description: Adds context to an observable.
      operationId: add_context_api_v2_observables__observable_id__context_post
      parameters:
      - explode: false
        in: path
        name: observable_id
        required: true
        schema: {}
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddContextRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response_Add_Context_Api_V2_Observables__Observable_Id__Context_Post'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      - APIKeyCookie: []
      summary: Add Context
      tags:
      - observables
  /api/v2/observables/{observable_id}/context/delete:
    post:
      description: Removes context to an observable.
      operationId: delete_context_api_v2_observables__observable_id__context_delete_post
      parameters:
      - explode: false
        in: path
        name: observable_id
        required: true
        schema: {}
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteContextRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response_Delete_Context_Api_V2_Observables__Observable_Id__Context_Delete_Post'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      - APIKeyCookie: []
      summary: Delete Context
      tags:
      - observables
  /api/v2/observables/search:
    post:
      description: Searches for observables.
      operationId: search_api_v2_observables_search_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObservableSearchRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObservableSearchResponse'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      - APIKeyCookie: []
      summary: Search
      tags:
      - observables
  /api/v2/observables/add_text:
    post:
      description: |-
        Adds and returns an observable for a given string, attempting to guess
        its type.
      operationId: add_text_api_v2_observables_add_text_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddTextRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response_Add_Text_Api_V2_Observables_Add_Text_Post'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      - APIKeyCookie: []
      summary: Add Text
      tags:
      - observables
  /api/v2/observables/tag:
    post:
      description: "Tags a set of observables, individually or in bulk."
      operationId: tag_observable_api_v2_observables_tag_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObservableTagRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObservableTagResponse'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      - APIKeyCookie: []
      summary: Tag Observable
      tags:
      - observables
  /api/v2/entities/:
    post:
      description: Creates a new entity in the database.
      operationId: new_api_v2_entities__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewEntityRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response_New_Api_V2_Entities__Post'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      - APIKeyCookie: []
      summary: New
      tags:
      - entities
  /api/v2/entities/{entity_id}:
    delete:
      description: Deletes an Entity.
      operationId: delete_api_v2_entities__entity_id__delete
      parameters:
      - explode: false
        in: path
        name: entity_id
        required: true
        schema:
          title: Entity Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      - APIKeyCookie: []
      summary: Delete
      tags:
      - entities
    get:
      description: Returns details about an observable.
      operationId: details_api_v2_entities__entity_id__get
      parameters:
      - explode: false
        in: path
        name: entity_id
        required: true
        schema: {}
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response_Details_Api_V2_Entities__Entity_Id__Get'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      - APIKeyCookie: []
      summary: Details
      tags:
      - entities
    patch:
      description: Modifies entity in the database.
      operationId: patch_api_v2_entities__entity_id__patch
      parameters:
      - explode: false
        in: path
        name: entity_id
        required: true
        schema: {}
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchEntityRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response_Patch_Api_V2_Entities__Entity_Id__Patch'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      - APIKeyCookie: []
      summary: Patch
      tags:
      - entities
  /api/v2/entities/search:
    post:
      description: Searches for observables.
      operationId: search_api_v2_entities_search_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntitySearchRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitySearchResponse'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      - APIKeyCookie: []
      summary: Search
      tags:
      - entities
  /api/v2/entities/tag:
    post:
      description: Tags entities.
      operationId: tag_api_v2_entities_tag_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntityTagRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityTagResponse'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      - APIKeyCookie: []
      summary: Tag
      tags:
      - entities
  /api/v2/indicators/:
    post:
      description: Creates a new indicator in the database.
      operationId: new_api_v2_indicators__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewIndicatorRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response_New_Api_V2_Indicators__Post'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      - APIKeyCookie: []
      summary: New
      tags:
      - indicators
  /api/v2/indicators/{indicator_id}:
    delete:
      description: Deletes an indicator.
      operationId: delete_api_v2_indicators__indicator_id__delete
      parameters:
      - explode: false
        in: path
        name: indicator_id
        required: true
        schema:
          title: Indicator Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      - APIKeyCookie: []
      summary: Delete
      tags:
      - indicators
    get:
      description: Returns details about an indicator.
      operationId: details_api_v2_indicators__indicator_id__get
      parameters:
      - explode: false
        in: path
        name: indicator_id
        required: true
        schema: {}
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response_Details_Api_V2_Indicators__Indicator_Id__Get'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      - APIKeyCookie: []
      summary: Details
      tags:
      - indicators
    patch:
      description: Modifies an indicator in the database.
      operationId: patch_api_v2_indicators__indicator_id__patch
      parameters:
      - explode: false
        in: path
        name: indicator_id
        required: true
        schema: {}
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchIndicatorRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response_Patch_Api_V2_Indicators__Indicator_Id__Patch'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      - APIKeyCookie: []
      summary: Patch
      tags:
      - indicators
  /api/v2/indicators/search:
    post:
      description: Searches for indicators.
      operationId: search_api_v2_indicators_search_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndicatorSearchRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndicatorSearchResponse'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      - APIKeyCookie: []
      summary: Search
      tags:
      - indicators
  /api/v2/indicators/tag:
    post:
      description: Tags entities.
      operationId: tag_api_v2_indicators_tag_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndicatorTagRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndicatorTagResponse'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      - APIKeyCookie: []
      summary: Tag
      tags:
      - indicators
  /api/v2/tags/:
    post:
      description: Creates a new observable in the database.
      operationId: new_api_v2_tags__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      - APIKeyCookie: []
      summary: New
      tags:
      - tags
  /api/v2/tags/{tag_id}:
    delete:
      description: Deletes a Tag.
      operationId: delete_api_v2_tags__tag_id__delete
      parameters:
      - explode: false
        in: path
        name: tag_id
        required: true
        schema:
          title: Tag Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      - APIKeyCookie: []
      summary: Delete
      tags:
      - tags
    get:
      description: Returns details about a Tag.
      operationId: details_api_v2_tags__tag_id__get
      parameters:
      - explode: false
        in: path
        name: tag_id
        required: true
        schema:
          title: Tag Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      - APIKeyCookie: []
      summary: Details
      tags:
      - tags
    put:
      description: Updates an observable.
      operationId: update_api_v2_tags__tag_id__put
      parameters:
      - explode: false
        in: path
        name: tag_id
        required: true
        schema:
          title: Tag Id
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      - APIKeyCookie: []
      summary: Update
      tags:
      - tags
  /api/v2/tags/search:
    post:
      description: Searches for Tags.
      operationId: search_api_v2_tags_search_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagSearchRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagSearchResponse'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      - APIKeyCookie: []
      summary: Search
      tags:
      - tags
  /api/v2/tags/merge:
    post:
      operationId: merge_api_v2_tags_merge_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MergeTagRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MergeTagResult'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      - APIKeyCookie: []
      summary: Merge
      tags:
      - tags
  /api/v2/dfiq/config:
    get:
      operationId: config_api_v2_dfiq_config_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DFIQConfigResponse'
          description: Successful Response
      security:
      - OAuth2PasswordBearer: []
      - APIKeyCookie: []
      summary: Config
      tags:
      - dfiq
  /api/v2/dfiq/from_archive:
    post:
      description: Uncompresses a ZIP archive and processes the DFIQ content inside
        it.
      operationId: from_archive_api_v2_dfiq_from_archive_post
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_from_archive_api_v2_dfiq_from_archive_post'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: integer
                title: Response From Archive Api V2 Dfiq From Archive Post
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      - APIKeyCookie: []
      summary: From Archive
      tags:
      - dfiq
  /api/v2/dfiq/from_yaml:
    post:
      description: Creates a new DFIQ object in the database.
      operationId: new_from_yaml_api_v2_dfiq_from_yaml_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewDFIQRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response_New_From_Yaml_Api_V2_Dfiq_From_Yaml_Post'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      - APIKeyCookie: []
      summary: New From Yaml
      tags:
      - dfiq
  /api/v2/dfiq/to_archive:
    post:
      description: |-
        Compresses DFIQ objects into a ZIP archive.

        The structure of the archive is as follows:
        - {public, internal}/
          - type/
            - dfiq_id.yaml
      operationId: to_archive_api_v2_dfiq_to_archive_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DFIQSearchRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      - APIKeyCookie: []
      summary: To Archive
      tags:
      - dfiq
  /api/v2/dfiq/validate:
    post:
      description: Validates a DFIQ YAML string.
      operationId: validate_dfiq_yaml_api_v2_dfiq_validate_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DFIQValidateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DFIQValidateResponse'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      - APIKeyCookie: []
      summary: Validate Dfiq Yaml
      tags:
      - dfiq
  /api/v2/dfiq/{dfiq_id}:
    delete:
      description: Deletes a DFIQ object.
      operationId: delete_api_v2_dfiq__dfiq_id__delete
      parameters:
      - explode: false
        in: path
        name: dfiq_id
        required: true
        schema:
          title: Dfiq Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      - APIKeyCookie: []
      summary: Delete
      tags:
      - dfiq
    get:
      description: Returns details about a DFIQ object.
      operationId: details_api_v2_dfiq__dfiq_id__get
      parameters:
      - explode: false
        in: path
        name: dfiq_id
        required: true
        schema: {}
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response_Details_Api_V2_Dfiq__Dfiq_Id__Get'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      - APIKeyCookie: []
      summary: Details
      tags:
      - dfiq
    patch:
      description: Modifies an DFIQ object in the database.
      operationId: patch_api_v2_dfiq__dfiq_id__patch
      parameters:
      - explode: false
        in: path
        name: dfiq_id
        required: true
        schema: {}
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchDFIQRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response_Patch_Api_V2_Dfiq__Dfiq_Id__Patch'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      - APIKeyCookie: []
      summary: Patch
      tags:
      - dfiq
  /api/v2/dfiq/search:
    post:
      description: Searches for DFIQ objects.
      operationId: search_api_v2_dfiq_search_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DFIQSearchRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DFIQSearchResponse'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      - APIKeyCookie: []
      summary: Search
      tags:
      - dfiq
  /api/v2/tasks/{task_name}/run:
    post:
      description: Runs a task asynchronously.
      operationId: run_api_v2_tasks__task_name__run_post
      parameters:
      - explode: false
        in: path
        name: task_name
        required: true
        schema: {}
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskParams'
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Run Api V2 Tasks  Task Name  Run Post
                type: object
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      - APIKeyCookie: []
      summary: Run
      tags:
      - tasks
  /api/v2/tasks/{task_name}/toggle:
    post:
      description: Toggles the enabled status on a task.
      operationId: toggle_api_v2_tasks__task_name__toggle_post
      parameters:
      - explode: false
        in: path
        name: task_name
        required: true
        schema: {}
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response_Toggle_Api_V2_Tasks__Task_Name__Toggle_Post'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      - APIKeyCookie: []
      summary: Toggle
      tags:
      - tasks
  /api/v2/tasks/search:
    post:
      description: Searches for tasks.
      operationId: search_api_v2_tasks_search_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskSearchRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskSearchResponse'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      - APIKeyCookie: []
      summary: Search
      tags:
      - tasks
  /api/v2/tasks/export/new:
    post:
      description: Creates a new ExportTask in the database.
      operationId: new_export_api_v2_tasks_export_new_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewExportRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportTask-Output'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      - APIKeyCookie: []
      summary: New Export
      tags:
      - tasks
  /api/v2/tasks/export/{export_name}:
    delete:
      description: Deletes an ExportTask.
      operationId: delete_export_api_v2_tasks_export__export_name__delete
      parameters:
      - explode: false
        in: path
        name: export_name
        required: true
        schema:
          title: Export Name
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      - APIKeyCookie: []
      summary: Delete Export
      tags:
      - tasks
    patch:
      description: Pathes an existing ExportTask in the database.
      operationId: patch_export_api_v2_tasks_export__export_name__patch
      parameters:
      - explode: false
        in: path
        name: export_name
        required: true
        schema:
          title: Export Name
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchExportRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportTask-Output'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      - APIKeyCookie: []
      summary: Patch Export
      tags:
      - tasks
  /api/v2/tasks/export/{export_id}/content:
    get:
      description: Downloads the latest contents of a given ExportTask.
      operationId: export_content_api_v2_tasks_export__export_id__content_get
      parameters:
      - explode: false
        in: path
        name: export_id
        required: true
        schema:
          title: Export Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      - APIKeyCookie: []
      summary: Export Content
      tags:
      - tasks
  /api/v2/graph/search:
    post:
      description: Fetches neighbros for a given Yeti Object.
      operationId: search_api_v2_graph_search_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GraphSearchRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphSearchResponse'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      - APIKeyCookie: []
      summary: Search
      tags:
      - graph
  /api/v2/graph/add:
    post:
      description: Adds a link to the graph.
      operationId: add_api_v2_graph_add_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GraphAddRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Relationship'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      - APIKeyCookie: []
      summary: Add
      tags:
      - graph
  /api/v2/graph/{relationship_id}:
    delete:
      description: Deletes a link from the graph.
      operationId: delete_api_v2_graph__relationship_id__delete
      parameters:
      - explode: false
        in: path
        name: relationship_id
        required: true
        schema:
          title: Relationship Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      - APIKeyCookie: []
      summary: Delete
      tags:
      - graph
    patch:
      description: Edits a Relationship in the graph.
      operationId: edit_api_v2_graph__relationship_id__patch
      parameters:
      - explode: false
        in: path
        name: relationship_id
        required: true
        schema:
          title: Relationship Id
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GraphPatchRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Relationship'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      - APIKeyCookie: []
      summary: Edit
      tags:
      - graph
  /api/v2/graph/{relationship_id}/swap:
    post:
      description: Swaps the source and target of a relationship.
      operationId: swap_api_v2_graph__relationship_id__swap_post
      parameters:
      - explode: false
        in: path
        name: relationship_id
        required: true
        schema:
          title: Relationship Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Relationship'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      - APIKeyCookie: []
      summary: Swap
      tags:
      - graph
  /api/v2/graph/match:
    post:
      description: Fetches neighbors for a given Yeti Object.
      operationId: match_api_v2_graph_match_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnalysisRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisResponse'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      - APIKeyCookie: []
      summary: Match
      tags:
      - graph
  /api/v2/templates/search:
    post:
      description: Searches for observables.
      operationId: search_api_v2_templates_search_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateSearchRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateSearchResponse'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      - APIKeyCookie: []
      summary: Search
      tags:
      - templates
  /api/v2/templates/render:
    post:
      description: Renders a template.
      operationId: render_api_v2_templates_render_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RenderTemplateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      - APIKeyCookie: []
      summary: Render
      tags:
      - templates
  /api/v2/users/{user_id}:
    delete:
      description: Deletes a user from the database.
      operationId: delete_api_v2_users__user_id__delete
      parameters:
      - explode: false
        in: path
        name: user_id
        required: true
        schema:
          title: User Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      - APIKeyCookie: []
      summary: Delete
      tags:
      - users
    get:
      description: Gets a user by ID.
      operationId: get_api_v2_users__user_id__get
      parameters:
      - explode: false
        in: path
        name: user_id
        required: true
        schema:
          title: User Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      - APIKeyCookie: []
      summary: Get
      tags:
      - users
  /api/v2/users/search:
    post:
      description: Searches for users.
      operationId: search_api_v2_users_search_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchUserRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchUserResponse'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      - APIKeyCookie: []
      summary: Search
      tags:
      - users
  /api/v2/users/toggle:
    post:
      description: Toggles a user's enabled or admin state.
      operationId: toggle_api_v2_users_toggle_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ToggleUserRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      - APIKeyCookie: []
      summary: Toggle
      tags:
      - users
  /api/v2/users/reset-api-key:
    post:
      description: Resets a user's API key.
      operationId: reset_api_key_api_v2_users_reset_api_key_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetApiKeyRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      - APIKeyCookie: []
      summary: Reset Api Key
      tags:
      - users
  /api/v2/users/reset-password:
    post:
      description: Resets a user's password.
      operationId: reset_password_api_v2_users_reset_password_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      - APIKeyCookie: []
      summary: Reset Password
      tags:
      - users
  /api/v2/users/:
    post:
      description: Creates a new user.
      operationId: create_api_v2_users__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUserRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      - APIKeyCookie: []
      summary: Create
      tags:
      - users
  /api/v2/system/config:
    get:
      description: Gets the system config.
      operationId: get_config_api_v2_system_config_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemConfigResponse'
          description: Successful Response
      summary: Get Config
      tags:
      - system
  /api/v2/system/workers:
    get:
      operationId: get_worker_status_api_v2_system_workers_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkerStatusResponse'
          description: Successful Response
      security:
      - OAuth2PasswordBearer: []
      - APIKeyCookie: []
      summary: Get Worker Status
      tags:
      - system
  /api/v2/system/restartworker/{worker_name}:
    post:
      description: Restarts a single or all Celery workers.
      operationId: restart_worker_api_v2_system_restartworker__worker_name__post
      parameters:
      - explode: false
        in: path
        name: worker_name
        required: true
        schema:
          title: Worker Name
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkerRestartResponse'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      - APIKeyCookie: []
      summary: Restart Worker
      tags:
      - system
  /api/v2/import_data/import_misp_json:
    post:
      operationId: import_misp_json_api_v2_import_data_import_misp_json_post
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_import_misp_json_api_v2_import_data_import_misp_json_post'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      - APIKeyCookie: []
      summary: Import Misp Json
      tags:
      - import_data
      - import_misp_json
components:
  schemas:
    ASN-Input:
      properties:
        value:
          minLength: 1
          title: Value
          type: string
        type:
          default: asn
          enum:
          - asn
          title: Type
          type: string
        created:
          format: date-time
          title: Created
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        last_analysis:
          additionalProperties:
            format: date-time
            type: string
          default: {}
          title: Last Analysis
        country:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
      required:
      - value
      title: ASN
    ASN-Output:
      properties:
        value:
          minLength: 1
          title: Value
          type: string
        type:
          default: asn
          enum:
          - asn
          title: Type
          type: string
        created:
          format: date-time
          title: Created
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        last_analysis:
          additionalProperties:
            format: date-time
            type: string
          default: {}
          title: Last Analysis
        country:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        id:
          readOnly: true
          title: Id
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagRelationship-Output'
          readOnly: true
          title: Tags
        root_type:
          enum:
          - observable
          readOnly: true
          title: Root Type
          type: string
      required:
      - id
      - root_type
      - tags
      - value
      title: ASN
    AddContextRequest:
      additionalProperties: {}
      example:
        context: "{}"
        source: source
        skip_compare:
        - ""
        - ""
      properties:
        source:
          title: Source
        context:
          title: Context
        skip_compare:
          default: []
          items: {}
          title: Skip Compare
          uniqueItems: true
      required:
      - context
      - source
      title: AddContextRequest
    AddTextRequest:
      additionalProperties: {}
      example:
        text: text
        tags:
        - tags
        - tags
        - tags
        - tags
        - tags
      properties:
        tags:
          default: []
          items: {}
          maxItems: 50
          title: Tags
        text:
          title: Text
      required:
      - text
      title: AddTextRequest
    AnalysisRequest:
      example:
        add_tags:
        - add_tags
        - add_tags
        - add_tags
        - add_tags
        - add_tags
        observables:
        - observables
        - observables
        add_unknown: false
        regex_match: false
        fetch_neighbors: true
        add_type: cidr
      properties:
        observables:
          items:
            type: string
          type: array
        add_tags:
          default: []
          items:
            type: string
          maxItems: 50
          type: array
        regex_match:
          default: false
          title: Regex Match
          type: boolean
        add_type:
          $ref: '#/components/schemas/ObservableType-Input'
        fetch_neighbors:
          default: true
          title: Fetch Neighbors
          type: boolean
        add_unknown:
          default: false
          title: Add Unknown
          type: boolean
      required:
      - observables
      title: AnalysisRequest
    AnalysisResponse:
      example:
        observables:
        - - ""
          - ""
        - - ""
          - ""
        known:
        - root_type: observable
          created: 2000-01-23T04:56:07.000+00:00
          context:
          - "{}"
          - "{}"
          last_analysis:
            key: 2000-01-23T04:56:07.000+00:00
          id: id
          type: type
          value: value
          tags:
            key:
              expires: 2000-01-23T04:56:07.000+00:00
              last_seen: 2000-01-23T04:56:07.000+00:00
              source: source
              id: id
              fresh: true
              target: target
        - root_type: observable
          created: 2000-01-23T04:56:07.000+00:00
          context:
          - "{}"
          - "{}"
          last_analysis:
            key: 2000-01-23T04:56:07.000+00:00
          id: id
          type: type
          value: value
          tags:
            key:
              expires: 2000-01-23T04:56:07.000+00:00
              last_seen: 2000-01-23T04:56:07.000+00:00
              source: source
              id: id
              fresh: true
              target: target
        entities:
        - - ""
          - ""
        - - ""
          - ""
        matches:
        - - ""
          - ""
        - - ""
          - ""
        unknown:
        - unknown
        - unknown
      properties:
        entities:
          items:
            items: {}
            maxItems: 2
            minItems: 2
            type: array
          type: array
        observables:
          items:
            items: {}
            maxItems: 2
            minItems: 2
            type: array
          type: array
        known:
          items:
            $ref: '#/components/schemas/Observable'
          type: array
        matches:
          items:
            items: {}
            maxItems: 2
            minItems: 2
            type: array
          type: array
        unknown:
          items:
            type: string
          type: array
          uniqueItems: true
      required:
      - entities
      - known
      - matches
      - observables
      - unknown
      title: AnalysisResponse
    AnalyticsTask:
      properties:
        name:
          title: Name
          type: string
        enabled:
          default: false
          title: Enabled
          type: boolean
        description:
          default: ""
          title: Description
          type: string
        status:
          $ref: '#/components/schemas/TaskStatus'
        status_message:
          default: ""
          title: Status Message
          type: string
        last_run:
          format: date-time
          nullable: true
          type: string
        frequency:
          format: duration
          nullable: true
          type: string
        acts_on:
          default: []
          items:
            type: string
          type: array
        type:
          default: analytics
          enum:
          - analytics
          title: Type
          type: string
        id:
          readOnly: true
          title: Id
          type: string
      required:
      - id
      - name
      title: AnalyticsTask
    AttackPattern-Input:
      properties:
        type:
          default: attack-pattern
          enum:
          - attack-pattern
          title: Type
          type: string
        name:
          minLength: 1
          title: Name
          type: string
        description:
          default: ""
          title: Description
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        created:
          format: date-time
          title: Created
          type: string
        modified:
          format: date-time
          title: Modified
          type: string
        aliases:
          default: []
          items:
            type: string
          type: array
        kill_chain_phases:
          default: []
          items:
            type: string
          type: array
      required:
      - name
      title: AttackPattern
    AttackPattern-Output:
      properties:
        type:
          default: attack-pattern
          enum:
          - attack-pattern
          title: Type
          type: string
        name:
          minLength: 1
          title: Name
          type: string
        description:
          default: ""
          title: Description
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        created:
          format: date-time
          title: Created
          type: string
        modified:
          format: date-time
          title: Modified
          type: string
        aliases:
          default: []
          items:
            type: string
          type: array
        kill_chain_phases:
          default: []
          items:
            type: string
          type: array
        id:
          readOnly: true
          title: Id
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagRelationship-Output'
          readOnly: true
          title: Tags
        root_type:
          enum:
          - entity
          readOnly: true
          title: Root Type
          type: string
        related_observables_count:
          readOnly: true
          title: Related Observables Count
          type: integer
      required:
      - id
      - name
      - related_observables_count
      - root_type
      - tags
      title: AttackPattern
    BIC-Input:
      properties:
        value:
          minLength: 1
          title: Value
          type: string
        type:
          default: bic
          enum:
          - bic
          title: Type
          type: string
        created:
          format: date-time
          title: Created
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        last_analysis:
          additionalProperties:
            format: date-time
            type: string
          default: {}
          title: Last Analysis
      required:
      - value
      title: BIC
    BIC-Output:
      properties:
        value:
          minLength: 1
          title: Value
          type: string
        type:
          default: bic
          enum:
          - bic
          title: Type
          type: string
        created:
          format: date-time
          title: Created
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        last_analysis:
          additionalProperties:
            format: date-time
            type: string
          default: {}
          title: Last Analysis
        id:
          readOnly: true
          title: Id
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagRelationship-Output'
          readOnly: true
          title: Tags
        root_type:
          enum:
          - observable
          readOnly: true
          title: Root Type
          type: string
      required:
      - id
      - root_type
      - tags
      - value
      title: BIC
    Body_from_archive_api_v2_dfiq_from_archive_post:
      properties:
        archive:
          format: binary
          title: Archive
          type: string
      required:
      - archive
      title: Body_from_archive_api_v2_dfiq_from_archive_post
    Body_import_misp_json_api_v2_import_data_import_misp_json_post:
      properties:
        misp_file_json:
          format: binary
          title: Misp File Json
          type: string
      required:
      - misp_file_json
      title: Body_import_misp_json_api_v2_import_data_import_misp_json_post
    Body_login_api_v2_auth_token_post:
      properties:
        grant_type:
          nullable: true
          pattern: password
          type: string
        username:
          title: Username
          type: string
        password:
          title: Password
          type: string
        scope:
          default: ""
          title: Scope
          type: string
        client_id:
          nullable: true
          type: string
        client_secret:
          nullable: true
          type: string
      required:
      - password
      - username
      title: Body_login_api_v2_auth_token_post
    BulkObservableAddResponse:
      additionalProperties: {}
      example:
        added:
        - root_type: observable
          created: 2000-01-23T04:56:07.000+00:00
          context:
          - "{}"
          - "{}"
          last_analysis:
            key: 2000-01-23T04:56:07.000+00:00
          id: id
          type: cidr
          value: value
          tags:
            key:
              expires: 2000-01-23T04:56:07.000+00:00
              last_seen: 2000-01-23T04:56:07.000+00:00
              source: source
              id: id
              fresh: true
              target: target
        - root_type: observable
          created: 2000-01-23T04:56:07.000+00:00
          context:
          - "{}"
          - "{}"
          last_analysis:
            key: 2000-01-23T04:56:07.000+00:00
          id: id
          type: cidr
          value: value
          tags:
            key:
              expires: 2000-01-23T04:56:07.000+00:00
              last_seen: 2000-01-23T04:56:07.000+00:00
              source: source
              id: id
              fresh: true
              target: target
        failed:
        - failed
        - failed
      properties:
        added:
          default: []
          items:
            $ref: '#/components/schemas/Added_inner'
          title: Added
        failed:
          default: []
          items: {}
          title: Failed
      title: BulkObservableAddResponse
    CIDR-Input:
      example:
        created: 2000-01-23T04:56:07.000+00:00
        context:
        - "{}"
        - "{}"
        last_analysis:
          key: 2000-01-23T04:56:07.000+00:00
        type: cidr
        value: value
      properties:
        value:
          minLength: 1
          title: Value
          type: string
        type:
          default: cidr
          enum:
          - cidr
          title: Type
          type: string
        created:
          format: date-time
          title: Created
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        last_analysis:
          additionalProperties:
            format: date-time
            type: string
          default: {}
          title: Last Analysis
      required:
      - value
      title: CIDR
    CIDR-Output:
      example:
        root_type: observable
        created: 2000-01-23T04:56:07.000+00:00
        context:
        - "{}"
        - "{}"
        last_analysis:
          key: 2000-01-23T04:56:07.000+00:00
        id: id
        type: cidr
        value: value
        tags:
          key:
            expires: 2000-01-23T04:56:07.000+00:00
            last_seen: 2000-01-23T04:56:07.000+00:00
            source: source
            id: id
            fresh: true
            target: target
      properties:
        value:
          minLength: 1
          title: Value
          type: string
        type:
          default: cidr
          enum:
          - cidr
          title: Type
          type: string
        created:
          format: date-time
          title: Created
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        last_analysis:
          additionalProperties:
            format: date-time
            type: string
          default: {}
          title: Last Analysis
        id:
          readOnly: true
          title: Id
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagRelationship-Output'
          readOnly: true
          title: Tags
        root_type:
          enum:
          - observable
          readOnly: true
          title: Root Type
          type: string
      required:
      - id
      - root_type
      - tags
      - value
      title: CIDR
    Campaign-Input:
      properties:
        type:
          default: campaign
          enum:
          - campaign
          title: Type
          type: string
        name:
          minLength: 1
          title: Name
          type: string
        description:
          default: ""
          title: Description
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        created:
          format: date-time
          title: Created
          type: string
        modified:
          format: date-time
          title: Modified
          type: string
        aliases:
          default: []
          items:
            type: string
          type: array
        first_seen:
          format: date-time
          title: First Seen
          type: string
        last_seen:
          format: date-time
          title: Last Seen
          type: string
      required:
      - name
      title: Campaign
    Campaign-Output:
      properties:
        type:
          default: campaign
          enum:
          - campaign
          title: Type
          type: string
        name:
          minLength: 1
          title: Name
          type: string
        description:
          default: ""
          title: Description
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        created:
          format: date-time
          title: Created
          type: string
        modified:
          format: date-time
          title: Modified
          type: string
        aliases:
          default: []
          items:
            type: string
          type: array
        first_seen:
          format: date-time
          title: First Seen
          type: string
        last_seen:
          format: date-time
          title: Last Seen
          type: string
        id:
          readOnly: true
          title: Id
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagRelationship-Output'
          readOnly: true
          title: Tags
        root_type:
          enum:
          - entity
          readOnly: true
          title: Root Type
          type: string
        related_observables_count:
          readOnly: true
          title: Related Observables Count
          type: integer
      required:
      - id
      - name
      - related_observables_count
      - root_type
      - tags
      title: Campaign
    Certificate-Input:
      description: |-
        This is the schema for the Certificate observable type.

        Attributes:
            last_seen: the last time the certificate was seen.
            first_seen: the first time the certificate was seen.
            issuer: the issuer of the certificate.
            subject: the certificate subject.
            serial_number: the certificate serial.
            after: the date after which the certificate is valid.
            before: the date before which the certificate is valid.
            fingerprint: the certificate fingerprint.
      properties:
        value:
          minLength: 1
          title: Value
          type: string
        type:
          default: certificate
          enum:
          - certificate
          title: Type
          type: string
        created:
          format: date-time
          title: Created
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        last_analysis:
          additionalProperties:
            format: date-time
            type: string
          default: {}
          title: Last Analysis
        last_seen:
          format: date-time
          title: Last Seen
          type: string
        first_seen:
          format: date-time
          title: First Seen
          type: string
        issuer:
          nullable: true
          type: string
        subject:
          nullable: true
          type: string
        serial_number:
          nullable: true
          type: string
        after:
          format: date-time
          nullable: true
          type: string
        before:
          format: date-time
          nullable: true
          type: string
        fingerprint:
          nullable: true
          type: string
      required:
      - value
      title: Certificate
    Certificate-Output:
      description: |-
        This is the schema for the Certificate observable type.

        Attributes:
            last_seen: the last time the certificate was seen.
            first_seen: the first time the certificate was seen.
            issuer: the issuer of the certificate.
            subject: the certificate subject.
            serial_number: the certificate serial.
            after: the date after which the certificate is valid.
            before: the date before which the certificate is valid.
            fingerprint: the certificate fingerprint.
      properties:
        value:
          minLength: 1
          title: Value
          type: string
        type:
          default: certificate
          enum:
          - certificate
          title: Type
          type: string
        created:
          format: date-time
          title: Created
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        last_analysis:
          additionalProperties:
            format: date-time
            type: string
          default: {}
          title: Last Analysis
        last_seen:
          format: date-time
          title: Last Seen
          type: string
        first_seen:
          format: date-time
          title: First Seen
          type: string
        issuer:
          nullable: true
          type: string
        subject:
          nullable: true
          type: string
        serial_number:
          nullable: true
          type: string
        after:
          format: date-time
          nullable: true
          type: string
        before:
          format: date-time
          nullable: true
          type: string
        fingerprint:
          nullable: true
          type: string
        id:
          readOnly: true
          title: Id
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagRelationship-Output'
          readOnly: true
          title: Tags
        root_type:
          enum:
          - observable
          readOnly: true
          title: Root Type
          type: string
      required:
      - id
      - root_type
      - tags
      - value
      title: Certificate
    CommandLine-Input:
      properties:
        value:
          minLength: 1
          title: Value
          type: string
        type:
          default: command_line
          enum:
          - command_line
          title: Type
          type: string
        created:
          format: date-time
          title: Created
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        last_analysis:
          additionalProperties:
            format: date-time
            type: string
          default: {}
          title: Last Analysis
      required:
      - value
      title: CommandLine
    CommandLine-Output:
      properties:
        value:
          minLength: 1
          title: Value
          type: string
        type:
          default: command_line
          enum:
          - command_line
          title: Type
          type: string
        created:
          format: date-time
          title: Created
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        last_analysis:
          additionalProperties:
            format: date-time
            type: string
          default: {}
          title: Last Analysis
        id:
          readOnly: true
          title: Id
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagRelationship-Output'
          readOnly: true
          title: Tags
        root_type:
          enum:
          - observable
          readOnly: true
          title: Root Type
          type: string
      required:
      - id
      - root_type
      - tags
      - value
      title: CommandLine
    Company-Input:
      properties:
        type:
          default: company
          enum:
          - company
          title: Type
          type: string
        name:
          minLength: 1
          title: Name
          type: string
        description:
          default: ""
          title: Description
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        created:
          format: date-time
          title: Created
          type: string
        modified:
          format: date-time
          title: Modified
          type: string
      required:
      - name
      title: Company
    Company-Output:
      properties:
        type:
          default: company
          enum:
          - company
          title: Type
          type: string
        name:
          minLength: 1
          title: Name
          type: string
        description:
          default: ""
          title: Description
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        created:
          format: date-time
          title: Created
          type: string
        modified:
          format: date-time
          title: Modified
          type: string
        id:
          readOnly: true
          title: Id
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagRelationship-Output'
          readOnly: true
          title: Tags
        root_type:
          enum:
          - entity
          readOnly: true
          title: Root Type
          type: string
        related_observables_count:
          readOnly: true
          title: Related Observables Count
          type: integer
      required:
      - id
      - name
      - related_observables_count
      - root_type
      - tags
      title: Company
    CourseOfAction-Input:
      properties:
        type:
          default: course-of-action
          enum:
          - course-of-action
          title: Type
          type: string
        name:
          minLength: 1
          title: Name
          type: string
        description:
          default: ""
          title: Description
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        created:
          format: date-time
          title: Created
          type: string
        modified:
          format: date-time
          title: Modified
          type: string
      required:
      - name
      title: CourseOfAction
    CourseOfAction-Output:
      properties:
        type:
          default: course-of-action
          enum:
          - course-of-action
          title: Type
          type: string
        name:
          minLength: 1
          title: Name
          type: string
        description:
          default: ""
          title: Description
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        created:
          format: date-time
          title: Created
          type: string
        modified:
          format: date-time
          title: Modified
          type: string
        id:
          readOnly: true
          title: Id
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagRelationship-Output'
          readOnly: true
          title: Tags
        root_type:
          enum:
          - entity
          readOnly: true
          title: Root Type
          type: string
        related_observables_count:
          readOnly: true
          title: Related Observables Count
          type: integer
      required:
      - id
      - name
      - related_observables_count
      - root_type
      - tags
      title: CourseOfAction
    DFIQApproach:
      properties:
        name:
          minLength: 1
          title: Name
          type: string
        description:
          title: Description
          type: string
        tags:
          default: []
          items:
            type: string
          type: array
        references:
          default: []
          items:
            type: string
          type: array
        notes:
          $ref: '#/components/schemas/DFIQApproachNotes'
        steps:
          default: []
          items:
            $ref: '#/components/schemas/DFIQApproachStep'
          type: array
      required:
      - description
      - name
      title: DFIQApproach
    DFIQApproachNotes:
      properties:
        covered:
          default: []
          items:
            type: string
          type: array
        not_covered:
          default: []
          items:
            type: string
          type: array
      title: DFIQApproachNotes
    DFIQApproachStep:
      properties:
        name:
          minLength: 1
          title: Name
          type: string
        description:
          nullable: true
          type: string
        stage:
          minLength: 1
          title: Stage
          type: string
        type:
          nullable: true
          type: string
        value:
          nullable: true
          type: string
      required:
      - name
      - stage
      title: DFIQApproachStep
    DFIQConfigResponse:
      additionalProperties: {}
      example:
        step_types:
        - step_types
        - step_types
        stage_types:
        - stage_types
        - stage_types
      properties:
        stage_types:
          items: {}
          title: Stage Types
        step_types:
          items: {}
          title: Step Types
      required:
      - stage_types
      - step_types
      title: DFIQConfigResponse
    DFIQFacet:
      properties:
        name:
          minLength: 1
          title: Name
          type: string
        uuid:
          nullable: true
          type: string
        dfiq_id:
          nullable: true
          type: string
        dfiq_version:
          minLength: 1
          title: Dfiq Version
          type: string
        dfiq_tags:
          items:
            type: string
          nullable: true
          type: array
        contributors:
          items:
            type: string
          nullable: true
          type: array
        dfiq_yaml:
          minLength: 1
          title: Dfiq Yaml
          type: string
        created:
          format: date-time
          title: Created
          type: string
        modified:
          format: date-time
          title: Modified
          type: string
        description:
          nullable: true
          type: string
        parent_ids:
          items:
            type: string
          type: array
        type:
          default: facet
          enum:
          - facet
          title: Type
          type: string
        id:
          readOnly: true
          title: Id
          type: string
        root_type:
          enum:
          - root_type
          readOnly: true
          title: Root Type
          type: string
      required:
      - description
      - dfiq_version
      - dfiq_yaml
      - id
      - name
      - parent_ids
      - root_type
      title: DFIQFacet
    DFIQQuestion:
      properties:
        name:
          minLength: 1
          title: Name
          type: string
        uuid:
          nullable: true
          type: string
        dfiq_id:
          nullable: true
          type: string
        dfiq_version:
          minLength: 1
          title: Dfiq Version
          type: string
        dfiq_tags:
          items:
            type: string
          nullable: true
          type: array
        contributors:
          items:
            type: string
          nullable: true
          type: array
        dfiq_yaml:
          minLength: 1
          title: Dfiq Yaml
          type: string
        created:
          format: date-time
          title: Created
          type: string
        modified:
          format: date-time
          title: Modified
          type: string
        description:
          nullable: true
          type: string
        parent_ids:
          items:
            type: string
          type: array
        type:
          default: question
          enum:
          - question
          title: Type
          type: string
        approaches:
          default: []
          items:
            $ref: '#/components/schemas/DFIQApproach'
          type: array
        id:
          readOnly: true
          title: Id
          type: string
        root_type:
          enum:
          - root_type
          readOnly: true
          title: Root Type
          type: string
      required:
      - description
      - dfiq_version
      - dfiq_yaml
      - id
      - name
      - parent_ids
      - root_type
      title: DFIQQuestion
    DFIQScenario:
      example:
        root_type: root_type
        created: 2000-01-23T04:56:07.000+00:00
        dfiq_tags:
        - dfiq_tags
        - dfiq_tags
        dfiq_id: dfiq_id
        description: description
        type: scenario
        uuid: uuid
        dfiq_yaml: dfiq_yaml
        name: name
        modified: 2000-01-23T04:56:07.000+00:00
        contributors:
        - contributors
        - contributors
        id: id
        dfiq_version: dfiq_version
      properties:
        name:
          minLength: 1
          title: Name
          type: string
        uuid:
          nullable: true
          type: string
        dfiq_id:
          nullable: true
          type: string
        dfiq_version:
          minLength: 1
          title: Dfiq Version
          type: string
        dfiq_tags:
          items:
            type: string
          nullable: true
          type: array
        contributors:
          items:
            type: string
          nullable: true
          type: array
        dfiq_yaml:
          minLength: 1
          title: Dfiq Yaml
          type: string
        created:
          format: date-time
          title: Created
          type: string
        modified:
          format: date-time
          title: Modified
          type: string
        description:
          title: Description
          type: string
        type:
          default: scenario
          enum:
          - scenario
          title: Type
          type: string
        id:
          readOnly: true
          title: Id
          type: string
        root_type:
          enum:
          - root_type
          readOnly: true
          title: Root Type
          type: string
      required:
      - description
      - dfiq_version
      - dfiq_yaml
      - id
      - name
      - root_type
      title: DFIQScenario
    DFIQSearchRequest:
      additionalProperties: {}
      example:
        query:
          key: Query_value
        sorting:
        - - ""
          - ""
        - - ""
          - ""
        count: 0
        filter_aliases:
        - - ""
          - ""
        - - ""
          - ""
        page: 6
        type: scenario
      properties:
        query:
          additionalProperties:
            $ref: '#/components/schemas/Query_value'
          default: {}
          title: Query
        type:
          $ref: '#/components/schemas/DFIQSearchRequest_type'
        sorting:
          default: []
          items:
            items: {}
            maxItems: 2
            minItems: 2
          title: Sorting
        filter_aliases:
          default: []
          items:
            items: {}
            maxItems: 2
            minItems: 2
          title: Filter Aliases
        count:
          default: 50
          title: Count
        page:
          default: 0
          title: Page
      title: DFIQSearchRequest
    DFIQSearchResponse:
      additionalProperties: {}
      example:
        total: 0
        dfiq:
        - root_type: root_type
          created: 2000-01-23T04:56:07.000+00:00
          dfiq_tags:
          - dfiq_tags
          - dfiq_tags
          dfiq_id: dfiq_id
          description: description
          type: scenario
          uuid: uuid
          dfiq_yaml: dfiq_yaml
          name: name
          modified: 2000-01-23T04:56:07.000+00:00
          contributors:
          - contributors
          - contributors
          id: id
          dfiq_version: dfiq_version
        - root_type: root_type
          created: 2000-01-23T04:56:07.000+00:00
          dfiq_tags:
          - dfiq_tags
          - dfiq_tags
          dfiq_id: dfiq_id
          description: description
          type: scenario
          uuid: uuid
          dfiq_yaml: dfiq_yaml
          name: name
          modified: 2000-01-23T04:56:07.000+00:00
          contributors:
          - contributors
          - contributors
          id: id
          dfiq_version: dfiq_version
      properties:
        dfiq:
          items:
            $ref: '#/components/schemas/Dfiq_inner'
          title: Dfiq
        total:
          title: Total
      required:
      - dfiq
      - total
      title: DFIQSearchResponse
    DFIQType:
      enum:
      - scenario
      - facet
      - question
      title: DFIQType
      type: string
    DFIQValidateRequest:
      additionalProperties: {}
      example:
        dfiq_yaml: dfiq_yaml
        update_indicators: false
        dfiq_type: scenario
        check_id: false
      properties:
        dfiq_yaml:
          title: Dfiq Yaml
        dfiq_type:
          $ref: '#/components/schemas/DFIQType'
        update_indicators:
          default: false
          title: Update Indicators
        check_id:
          default: false
          title: Check Id
      required:
      - dfiq_type
      - dfiq_yaml
      title: DFIQValidateRequest
    DFIQValidateResponse:
      additionalProperties: {}
      example:
        valid: true
        error_type: message
        error: Error
      properties:
        valid:
          title: Valid
        error:
          $ref: '#/components/schemas/Error'
        error_type:
          default: message
          title: Error Type
      required:
      - valid
      title: DFIQValidateResponse
    DeleteContextRequest:
      additionalProperties: {}
      example:
        context: "{}"
        source: source
        skip_compare:
        - ""
        - ""
      properties:
        source:
          title: Source
        context:
          title: Context
        skip_compare:
          default: []
          items: {}
          title: Skip Compare
          uniqueItems: true
      required:
      - context
      - source
      title: DeleteContextRequest
    DiamondModel:
      enum:
      - adversary
      - capability
      - infrastructure
      - victim
      title: DiamondModel
      type: string
    DockerImage-Input:
      properties:
        value:
          minLength: 1
          title: Value
          type: string
        type:
          default: docker_image
          enum:
          - docker_image
          title: Type
          type: string
        created:
          format: date-time
          title: Created
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        last_analysis:
          additionalProperties:
            format: date-time
            type: string
          default: {}
          title: Last Analysis
      required:
      - value
      title: DockerImage
    DockerImage-Output:
      properties:
        value:
          minLength: 1
          title: Value
          type: string
        type:
          default: docker_image
          enum:
          - docker_image
          title: Type
          type: string
        created:
          format: date-time
          title: Created
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        last_analysis:
          additionalProperties:
            format: date-time
            type: string
          default: {}
          title: Last Analysis
        id:
          readOnly: true
          title: Id
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagRelationship-Output'
          readOnly: true
          title: Tags
        root_type:
          enum:
          - observable
          readOnly: true
          title: Root Type
          type: string
      required:
      - id
      - root_type
      - tags
      - value
      title: DockerImage
    Email-Input:
      properties:
        value:
          minLength: 1
          title: Value
          type: string
        type:
          default: email
          enum:
          - email
          title: Type
          type: string
        created:
          format: date-time
          title: Created
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        last_analysis:
          additionalProperties:
            format: date-time
            type: string
          default: {}
          title: Last Analysis
      required:
      - value
      title: Email
    Email-Output:
      properties:
        value:
          minLength: 1
          title: Value
          type: string
        type:
          default: email
          enum:
          - email
          title: Type
          type: string
        created:
          format: date-time
          title: Created
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        last_analysis:
          additionalProperties:
            format: date-time
            type: string
          default: {}
          title: Last Analysis
        id:
          readOnly: true
          title: Id
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagRelationship-Output'
          readOnly: true
          title: Tags
        root_type:
          enum:
          - observable
          readOnly: true
          title: Root Type
          type: string
      required:
      - id
      - root_type
      - tags
      - value
      title: Email
    Entity:
      properties:
        type:
          title: Type
          type: string
        name:
          minLength: 1
          title: Name
          type: string
        description:
          default: ""
          title: Description
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        created:
          format: date-time
          title: Created
          type: string
        modified:
          format: date-time
          title: Modified
          type: string
        id:
          readOnly: true
          title: Id
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagRelationship-Output'
          readOnly: true
          title: Tags
        root_type:
          enum:
          - entity
          readOnly: true
          title: Root Type
          type: string
        related_observables_count:
          readOnly: true
          title: Related Observables Count
          type: integer
      required:
      - id
      - name
      - related_observables_count
      - root_type
      - tags
      - type
      title: Entity
    EntitySearchRequest:
      additionalProperties: {}
      example:
        query:
          key: Query_value
        sorting:
        - - ""
          - ""
        - - ""
          - ""
        count: 0
        filter_aliases:
        - - ""
          - ""
        - - ""
          - ""
        page: 6
        type: investigation
      properties:
        query:
          additionalProperties:
            $ref: '#/components/schemas/Query_value'
          default: {}
          title: Query
        type:
          $ref: '#/components/schemas/EntitySearchRequest_type'
        sorting:
          default: []
          items:
            items: {}
            maxItems: 2
            minItems: 2
          title: Sorting
        filter_aliases:
          default: []
          items:
            items: {}
            maxItems: 2
            minItems: 2
          title: Filter Aliases
        count:
          default: 50
          title: Count
        page:
          default: 0
          title: Page
      title: EntitySearchRequest
    EntitySearchResponse:
      additionalProperties: {}
      example:
        total: 6
        entities:
        - reference: ""
          root_type: entity
          created: 2000-01-23T04:56:07.000+00:00
          name: name
          context:
          - "{}"
          - "{}"
          description: ""
          modified: 2000-01-23T04:56:07.000+00:00
          id: id
          related_observables_count: 0
          type: investigation
          tags:
            key:
              expires: 2000-01-23T04:56:07.000+00:00
              last_seen: 2000-01-23T04:56:07.000+00:00
              source: source
              id: id
              fresh: true
              target: target
        - reference: ""
          root_type: entity
          created: 2000-01-23T04:56:07.000+00:00
          name: name
          context:
          - "{}"
          - "{}"
          description: ""
          modified: 2000-01-23T04:56:07.000+00:00
          id: id
          related_observables_count: 0
          type: investigation
          tags:
            key:
              expires: 2000-01-23T04:56:07.000+00:00
              last_seen: 2000-01-23T04:56:07.000+00:00
              source: source
              id: id
              fresh: true
              target: target
      properties:
        entities:
          items:
            $ref: '#/components/schemas/Entities_inner'
          title: Entities
        total:
          title: Total
      required:
      - entities
      - total
      title: EntitySearchResponse
    EntityTagRequest:
      additionalProperties: {}
      example:
        ids:
        - ids
        - ids
        strict: false
        tags:
        - tags
        - tags
        - tags
        - tags
        - tags
      properties:
        ids:
          items: {}
          title: Ids
        tags:
          default: []
          items: {}
          maxItems: 50
          title: Tags
        strict:
          default: false
          title: Strict
      required:
      - ids
      title: EntityTagRequest
    EntityTagResponse:
      additionalProperties: {}
      example:
        tagged: 0
        tags:
          key:
            key:
              expires: 2000-01-23T04:56:07.000+00:00
              last_seen: 2000-01-23T04:56:07.000+00:00
              source: source
              id: id
              fresh: true
              target: target
      properties:
        tagged:
          title: Tagged
        tags:
          additionalProperties:
            additionalProperties:
              $ref: '#/components/schemas/TagRelationship-Output'
          title: Tags
      required:
      - tagged
      - tags
      title: EntityTagResponse
    EntityType:
      enum:
      - investigation
      - course-of-action
      - identity
      - intrusion-set
      - tool
      - threat-actor
      - campaign
      - company
      - malware
      - phone
      - note
      - attack-pattern
      - vulnerability
      - honeypot
      - threat-finding
      title: EntityType
      type: string
    ExportTask-Input:
      example:
        status_message: ""
        fresh_tags: true
        sha256: sha256
        description: ""
        last_run: 2000-01-23T04:56:07.000+00:00
        type: export
        exclude_tags:
        - exclude_tags
        - exclude_tags
        enabled: false
        frequency: frequency
        ignore_tags:
        - ignore_tags
        - ignore_tags
        template_name: template_name
        name: name
        acts_on:
        - cidr
        - cidr
        include_tags:
        - include_tags
        - include_tags
        status: idle
      properties:
        name:
          title: Name
          type: string
        enabled:
          default: false
          title: Enabled
          type: boolean
        description:
          default: ""
          title: Description
          type: string
        status:
          $ref: '#/components/schemas/TaskStatus'
        status_message:
          default: ""
          title: Status Message
          type: string
        last_run:
          format: date-time
          nullable: true
          type: string
        frequency:
          format: duration
          nullable: true
          type: string
        type:
          default: export
          enum:
          - export
          title: Type
          type: string
        include_tags:
          default: []
          items:
            type: string
          type: array
        exclude_tags:
          default: []
          items:
            type: string
          type: array
        ignore_tags:
          default: []
          items:
            type: string
          type: array
        fresh_tags:
          default: true
          title: Fresh Tags
          type: boolean
        acts_on:
          default: []
          items:
            $ref: '#/components/schemas/ObservableType-Input'
          type: array
        template_name:
          title: Template Name
          type: string
        sha256:
          nullable: true
          type: string
      required:
      - name
      - template_name
      title: ExportTask
    ExportTask-Output:
      example:
        status_message: ""
        fresh_tags: true
        sha256: sha256
        description: ""
        last_run: 2000-01-23T04:56:07.000+00:00
        type: export
        exclude_tags:
        - exclude_tags
        - exclude_tags
        enabled: false
        frequency: frequency
        ignore_tags:
        - ignore_tags
        - ignore_tags
        template_name: template_name
        name: name
        acts_on:
        - null
        - null
        include_tags:
        - include_tags
        - include_tags
        id: id
        status: idle
      properties:
        name:
          title: Name
          type: string
        enabled:
          default: false
          title: Enabled
          type: boolean
        description:
          default: ""
          title: Description
          type: string
        status:
          $ref: '#/components/schemas/TaskStatus'
        status_message:
          default: ""
          title: Status Message
          type: string
        last_run:
          format: date-time
          nullable: true
          type: string
        frequency:
          format: duration
          nullable: true
          type: string
        type:
          default: export
          enum:
          - export
          title: Type
          type: string
        include_tags:
          default: []
          items:
            type: string
          type: array
        exclude_tags:
          default: []
          items:
            type: string
          type: array
        ignore_tags:
          default: []
          items:
            type: string
          type: array
        fresh_tags:
          default: true
          title: Fresh Tags
          type: boolean
        acts_on:
          default: []
          items:
            $ref: '#/components/schemas/ObservableType-Output'
          type: array
        template_name:
          title: Template Name
          type: string
        sha256:
          nullable: true
          type: string
        id:
          readOnly: true
          title: Id
          type: string
      required:
      - id
      - name
      - template_name
      title: ExportTask
    FeedTask:
      example:
        status_message: ""
        name: name
        description: ""
        last_run: 2000-01-23T04:56:07.000+00:00
        id: id
        type: feed
        enabled: false
        status: idle
        frequency: frequency
      properties:
        name:
          title: Name
          type: string
        enabled:
          default: false
          title: Enabled
          type: boolean
        description:
          default: ""
          title: Description
          type: string
        status:
          $ref: '#/components/schemas/TaskStatus'
        status_message:
          default: ""
          title: Status Message
          type: string
        last_run:
          format: date-time
          nullable: true
          type: string
        frequency:
          format: duration
          nullable: true
          type: string
        type:
          default: feed
          enum:
          - feed
          title: Type
          type: string
        id:
          readOnly: true
          title: Id
          type: string
      required:
      - id
      - name
      title: FeedTask
    File-Input:
      description: |-
        Represents a file.

        One of sha256, md5, or sha1 should be provided.
        Value should to be in the form FILE:<HASH>.
      properties:
        value:
          minLength: 1
          title: Value
          type: string
        type:
          default: file
          enum:
          - file
          title: Type
          type: string
        created:
          format: date-time
          title: Created
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        last_analysis:
          additionalProperties:
            format: date-time
            type: string
          default: {}
          title: Last Analysis
        name:
          nullable: true
          type: string
        size:
          nullable: true
          type: integer
        sha256:
          nullable: true
          type: string
        md5:
          nullable: true
          type: string
        sha1:
          nullable: true
          type: string
        mime_type:
          nullable: true
          type: string
      required:
      - value
      title: File
    File-Output:
      description: |-
        Represents a file.

        One of sha256, md5, or sha1 should be provided.
        Value should to be in the form FILE:<HASH>.
      properties:
        value:
          minLength: 1
          title: Value
          type: string
        type:
          default: file
          enum:
          - file
          title: Type
          type: string
        created:
          format: date-time
          title: Created
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        last_analysis:
          additionalProperties:
            format: date-time
            type: string
          default: {}
          title: Last Analysis
        name:
          nullable: true
          type: string
        size:
          nullable: true
          type: integer
        sha256:
          nullable: true
          type: string
        md5:
          nullable: true
          type: string
        sha1:
          nullable: true
          type: string
        mime_type:
          nullable: true
          type: string
        id:
          readOnly: true
          title: Id
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagRelationship-Output'
          readOnly: true
          title: Tags
        root_type:
          enum:
          - observable
          readOnly: true
          title: Root Type
          type: string
      required:
      - id
      - root_type
      - tags
      - value
      title: File
    ForensicArtifact-Input:
      description: |-
        Represents a Forensic Artifact

        As defined in https://github.com/ForensicArtifacts/artifacts
      properties:
        name:
          title: Name
          type: string
        type:
          default: forensicartifact
          enum:
          - forensicartifact
          title: Type
          type: string
        description:
          default: ""
          title: Description
          type: string
        created:
          format: date-time
          title: Created
          type: string
        modified:
          format: date-time
          title: Modified
          type: string
        valid_from:
          format: date-time
          title: Valid From
          type: string
        valid_until:
          format: date-time
          title: Valid Until
          type: string
        pattern:
          minLength: 1
          title: Pattern
          type: string
        location:
          default: ""
          title: Location
          type: string
        diamond:
          $ref: '#/components/schemas/DiamondModel'
        kill_chain_phases:
          default: []
          items:
            type: string
          type: array
        relevant_tags:
          default: []
          items:
            type: string
          type: array
        sources:
          default: []
          items:
            type: object
          type: array
        aliases:
          default: []
          items:
            type: string
          type: array
        supported_os:
          default: []
          items:
            type: string
          type: array
      required:
      - diamond
      - name
      - pattern
      title: ForensicArtifact
    ForensicArtifact-Output:
      description: |-
        Represents a Forensic Artifact

        As defined in https://github.com/ForensicArtifacts/artifacts
      properties:
        name:
          title: Name
          type: string
        type:
          default: forensicartifact
          enum:
          - forensicartifact
          title: Type
          type: string
        description:
          default: ""
          title: Description
          type: string
        created:
          format: date-time
          title: Created
          type: string
        modified:
          format: date-time
          title: Modified
          type: string
        valid_from:
          format: date-time
          title: Valid From
          type: string
        valid_until:
          format: date-time
          title: Valid Until
          type: string
        pattern:
          minLength: 1
          title: Pattern
          type: string
        location:
          default: ""
          title: Location
          type: string
        diamond:
          $ref: '#/components/schemas/DiamondModel'
        kill_chain_phases:
          default: []
          items:
            type: string
          type: array
        relevant_tags:
          default: []
          items:
            type: string
          type: array
        sources:
          default: []
          items:
            type: object
          type: array
        aliases:
          default: []
          items:
            type: string
          type: array
        supported_os:
          default: []
          items:
            type: string
          type: array
        id:
          readOnly: true
          title: Id
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagRelationship-Output'
          readOnly: true
          title: Tags
        root_type:
          enum:
          - indicator
          readOnly: true
          title: Root Type
          type: string
      required:
      - diamond
      - id
      - name
      - pattern
      - root_type
      - tags
      title: ForensicArtifact
    Generic-Input:
      description: Use this type of Observable for any type of observable that doesn't
        fit into any other category.
      properties:
        value:
          minLength: 1
          title: Value
          type: string
        type:
          default: generic
          enum:
          - generic
          title: Type
          type: string
        created:
          format: date-time
          title: Created
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        last_analysis:
          additionalProperties:
            format: date-time
            type: string
          default: {}
          title: Last Analysis
      required:
      - value
      title: Generic
    Generic-Output:
      description: Use this type of Observable for any type of observable that doesn't
        fit into any other category.
      properties:
        value:
          minLength: 1
          title: Value
          type: string
        type:
          default: generic
          enum:
          - generic
          title: Type
          type: string
        created:
          format: date-time
          title: Created
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        last_analysis:
          additionalProperties:
            format: date-time
            type: string
          default: {}
          title: Last Analysis
        id:
          readOnly: true
          title: Id
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagRelationship-Output'
          readOnly: true
          title: Tags
        root_type:
          enum:
          - observable
          readOnly: true
          title: Root Type
          type: string
      required:
      - id
      - root_type
      - tags
      - value
      title: Generic
    GraphAddRequest:
      additionalProperties: {}
      example:
        link_type: link_type
        description: description
        source: source
        target: target
      properties:
        source:
          title: Source
        target:
          title: Target
        link_type:
          title: Link Type
        description:
          title: Description
      required:
      - description
      - link_type
      - source
      - target
      title: GraphAddRequest
    GraphDirection:
      enum:
      - outbound
      - inbound
      - any
      title: GraphDirection
      type: string
    GraphFilter:
      example:
        value: value
        key: key
        operator: operator
      properties:
        key:
          title: Key
          type: string
        value:
          title: Value
          type: string
        operator:
          title: Operator
          type: string
      required:
      - key
      - operator
      - value
      title: GraphFilter
    GraphPatchRequest:
      example:
        link_type: link_type
        description: description
      properties:
        link_type:
          title: Link Type
          type: string
        description:
          title: Description
          type: string
      required:
      - description
      - link_type
      title: GraphPatchRequest
    GraphSearchRequest:
      additionalProperties: {}
      example:
        max_hops: 1
        count: 5
        source: source
        graph: graph
        target_types:
        - target_types
        - target_types
        filter:
        - value: value
          key: key
          operator: operator
        - value: value
          key: key
          operator: operator
        link_types:
        - link_types
        - link_types
        include_original: true
        sorting:
        - - ""
          - ""
        - - ""
          - ""
        min_hops: 6
        hops: 0
        page: 5
        direction: outbound
      properties:
        source:
          title: Source
        link_types:
          default: []
          items: {}
          title: Link Types
        target_types:
          default: []
          items: {}
          title: Target Types
        hops:
          $ref: '#/components/schemas/Hops'
        min_hops:
          $ref: '#/components/schemas/Min_Hops'
        max_hops:
          $ref: '#/components/schemas/Max_Hops'
        graph:
          title: Graph
        direction:
          $ref: '#/components/schemas/GraphDirection'
        filter:
          default: []
          items:
            $ref: '#/components/schemas/GraphFilter'
          title: Filter
        include_original:
          title: Include Original
        count:
          default: 50
          title: Count
        page:
          default: 0
          title: Page
        sorting:
          default: []
          items:
            items: {}
            maxItems: 2
            minItems: 2
          title: Sorting
      required:
      - direction
      - graph
      - include_original
      - source
      title: GraphSearchRequest
    GraphSearchResponse:
      additionalProperties: {}
      example:
        total: 6
        vertices:
          key:
            root_type: observable
            created: 2000-01-23T04:56:07.000+00:00
            context:
            - "{}"
            - "{}"
            last_analysis:
              key: 2000-01-23T04:56:07.000+00:00
            id: id
            type: type
            value: value
            tags:
              key:
                expires: 2000-01-23T04:56:07.000+00:00
                last_seen: 2000-01-23T04:56:07.000+00:00
                source: source
                id: id
                fresh: true
                target: target
        paths:
        - - created: 2000-01-23T04:56:07.000+00:00
            count: 0
            description: description
            modified: 2000-01-23T04:56:07.000+00:00
            source: source
            id: id
            type: type
            target: target
          - created: 2000-01-23T04:56:07.000+00:00
            count: 0
            description: description
            modified: 2000-01-23T04:56:07.000+00:00
            source: source
            id: id
            type: type
            target: target
        - - created: 2000-01-23T04:56:07.000+00:00
            count: 0
            description: description
            modified: 2000-01-23T04:56:07.000+00:00
            source: source
            id: id
            type: type
            target: target
          - created: 2000-01-23T04:56:07.000+00:00
            count: 0
            description: description
            modified: 2000-01-23T04:56:07.000+00:00
            source: source
            id: id
            type: type
            target: target
      properties:
        vertices:
          additionalProperties:
            $ref: '#/components/schemas/Vertices_value'
          title: Vertices
        paths:
          items:
            items:
              $ref: '#/components/schemas/Paths_inner_inner'
          title: Paths
        total:
          title: Total
      required:
      - paths
      - total
      - vertices
      title: GraphSearchResponse
    HTTPValidationError:
      example:
        detail:
        - msg: msg
          loc:
          - ValidationError_loc_inner
          - ValidationError_loc_inner
          type: type
        - msg: msg
          loc:
          - ValidationError_loc_inner
          - ValidationError_loc_inner
          type: type
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
      title: HTTPValidationError
    Hostname-Input:
      properties:
        value:
          minLength: 1
          title: Value
          type: string
        type:
          default: hostname
          enum:
          - hostname
          title: Type
          type: string
        created:
          format: date-time
          title: Created
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        last_analysis:
          additionalProperties:
            format: date-time
            type: string
          default: {}
          title: Last Analysis
      required:
      - value
      title: Hostname
    Hostname-Output:
      properties:
        value:
          minLength: 1
          title: Value
          type: string
        type:
          default: hostname
          enum:
          - hostname
          title: Type
          type: string
        created:
          format: date-time
          title: Created
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        last_analysis:
          additionalProperties:
            format: date-time
            type: string
          default: {}
          title: Last Analysis
        id:
          readOnly: true
          title: Id
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagRelationship-Output'
          readOnly: true
          title: Tags
        root_type:
          enum:
          - observable
          readOnly: true
          title: Root Type
          type: string
      required:
      - id
      - root_type
      - tags
      - value
      title: Hostname
    IBAN-Input:
      properties:
        value:
          minLength: 1
          title: Value
          type: string
        type:
          default: iban
          enum:
          - iban
          title: Type
          type: string
        created:
          format: date-time
          title: Created
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        last_analysis:
          additionalProperties:
            format: date-time
            type: string
          default: {}
          title: Last Analysis
      required:
      - value
      title: IBAN
    IBAN-Output:
      properties:
        value:
          minLength: 1
          title: Value
          type: string
        type:
          default: iban
          enum:
          - iban
          title: Type
          type: string
        created:
          format: date-time
          title: Created
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        last_analysis:
          additionalProperties:
            format: date-time
            type: string
          default: {}
          title: Last Analysis
        id:
          readOnly: true
          title: Id
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagRelationship-Output'
          readOnly: true
          title: Tags
        root_type:
          enum:
          - observable
          readOnly: true
          title: Root Type
          type: string
      required:
      - id
      - root_type
      - tags
      - value
      title: IBAN
    IPv4-Input:
      properties:
        value:
          minLength: 1
          title: Value
          type: string
        type:
          default: ipv4
          enum:
          - ipv4
          title: Type
          type: string
        created:
          format: date-time
          title: Created
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        last_analysis:
          additionalProperties:
            format: date-time
            type: string
          default: {}
          title: Last Analysis
      required:
      - value
      title: IPv4
    IPv4-Output:
      properties:
        value:
          minLength: 1
          title: Value
          type: string
        type:
          default: ipv4
          enum:
          - ipv4
          title: Type
          type: string
        created:
          format: date-time
          title: Created
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        last_analysis:
          additionalProperties:
            format: date-time
            type: string
          default: {}
          title: Last Analysis
        id:
          readOnly: true
          title: Id
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagRelationship-Output'
          readOnly: true
          title: Tags
        root_type:
          enum:
          - observable
          readOnly: true
          title: Root Type
          type: string
      required:
      - id
      - root_type
      - tags
      - value
      title: IPv4
    IPv6-Input:
      properties:
        value:
          minLength: 1
          title: Value
          type: string
        type:
          default: ipv6
          enum:
          - ipv6
          title: Type
          type: string
        created:
          format: date-time
          title: Created
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        last_analysis:
          additionalProperties:
            format: date-time
            type: string
          default: {}
          title: Last Analysis
      required:
      - value
      title: IPv6
    IPv6-Output:
      properties:
        value:
          minLength: 1
          title: Value
          type: string
        type:
          default: ipv6
          enum:
          - ipv6
          title: Type
          type: string
        created:
          format: date-time
          title: Created
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        last_analysis:
          additionalProperties:
            format: date-time
            type: string
          default: {}
          title: Last Analysis
        id:
          readOnly: true
          title: Id
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagRelationship-Output'
          readOnly: true
          title: Tags
        root_type:
          enum:
          - observable
          readOnly: true
          title: Root Type
          type: string
      required:
      - id
      - root_type
      - tags
      - value
      title: IPv6
    Identity-Input:
      properties:
        type:
          default: identity
          enum:
          - identity
          title: Type
          type: string
        name:
          minLength: 1
          title: Name
          type: string
        description:
          default: ""
          title: Description
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        created:
          format: date-time
          title: Created
          type: string
        modified:
          format: date-time
          title: Modified
          type: string
        identity_class:
          default: ""
          title: Identity Class
          type: string
        sectors:
          default: []
          items:
            type: string
          type: array
        contact_information:
          default: ""
          title: Contact Information
          type: string
      required:
      - name
      title: Identity
    Identity-Output:
      properties:
        type:
          default: identity
          enum:
          - identity
          title: Type
          type: string
        name:
          minLength: 1
          title: Name
          type: string
        description:
          default: ""
          title: Description
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        created:
          format: date-time
          title: Created
          type: string
        modified:
          format: date-time
          title: Modified
          type: string
        identity_class:
          default: ""
          title: Identity Class
          type: string
        sectors:
          default: []
          items:
            type: string
          type: array
        contact_information:
          default: ""
          title: Contact Information
          type: string
        id:
          readOnly: true
          title: Id
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagRelationship-Output'
          readOnly: true
          title: Tags
        root_type:
          enum:
          - entity
          readOnly: true
          title: Root Type
          type: string
        related_observables_count:
          readOnly: true
          title: Related Observables Count
          type: integer
      required:
      - id
      - name
      - related_observables_count
      - root_type
      - tags
      title: Identity
    Imphash-Input:
      properties:
        value:
          minLength: 1
          title: Value
          type: string
        type:
          default: imphash
          enum:
          - imphash
          title: Type
          type: string
        created:
          format: date-time
          title: Created
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        last_analysis:
          additionalProperties:
            format: date-time
            type: string
          default: {}
          title: Last Analysis
      required:
      - value
      title: Imphash
    Imphash-Output:
      properties:
        value:
          minLength: 1
          title: Value
          type: string
        type:
          default: imphash
          enum:
          - imphash
          title: Type
          type: string
        created:
          format: date-time
          title: Created
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        last_analysis:
          additionalProperties:
            format: date-time
            type: string
          default: {}
          title: Last Analysis
        id:
          readOnly: true
          title: Id
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagRelationship-Output'
          readOnly: true
          title: Tags
        root_type:
          enum:
          - observable
          readOnly: true
          title: Root Type
          type: string
      required:
      - id
      - root_type
      - tags
      - value
      title: Imphash
    Indicator:
      properties:
        name:
          title: Name
          type: string
        type:
          title: Type
          type: string
        description:
          default: ""
          title: Description
          type: string
        created:
          format: date-time
          title: Created
          type: string
        modified:
          format: date-time
          title: Modified
          type: string
        valid_from:
          format: date-time
          title: Valid From
          type: string
        valid_until:
          format: date-time
          title: Valid Until
          type: string
        pattern:
          minLength: 1
          title: Pattern
          type: string
        location:
          default: ""
          title: Location
          type: string
        diamond:
          $ref: '#/components/schemas/DiamondModel'
        kill_chain_phases:
          default: []
          items:
            type: string
          type: array
        relevant_tags:
          default: []
          items:
            type: string
          type: array
        id:
          readOnly: true
          title: Id
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagRelationship-Output'
          readOnly: true
          title: Tags
        root_type:
          enum:
          - indicator
          readOnly: true
          title: Root Type
          type: string
      required:
      - diamond
      - id
      - name
      - pattern
      - root_type
      - tags
      - type
      title: Indicator
    IndicatorSearchRequest:
      additionalProperties: {}
      example:
        query:
          key: Query_value
        sorting:
        - - ""
          - ""
        - - ""
          - ""
        count: 0
        filter_aliases:
        - - ""
          - ""
        - - ""
          - ""
        page: 6
        type: query
      properties:
        query:
          additionalProperties:
            $ref: '#/components/schemas/Query_value'
          default: {}
          title: Query
        type:
          $ref: '#/components/schemas/IndicatorSearchRequest_type'
        sorting:
          default: []
          items:
            items: {}
            maxItems: 2
            minItems: 2
          title: Sorting
        filter_aliases:
          default: []
          items:
            items: {}
            maxItems: 2
            minItems: 2
          title: Filter Aliases
        count:
          default: 50
          title: Count
        page:
          default: 0
          title: Page
      title: IndicatorSearchRequest
    IndicatorSearchResponse:
      additionalProperties: {}
      example:
        total: 0
        indicators:
        - root_type: indicator
          created: 2000-01-23T04:56:07.000+00:00
          pattern: pattern
          description: ""
          valid_from: 2000-01-23T04:56:07.000+00:00
          relevant_tags:
          - relevant_tags
          - relevant_tags
          query_type: query_type
          type: query
          tags:
            key:
              expires: 2000-01-23T04:56:07.000+00:00
              last_seen: 2000-01-23T04:56:07.000+00:00
              source: source
              id: id
              fresh: true
              target: target
          diamond: adversary
          valid_until: 2000-01-23T04:56:07.000+00:00
          target_systems:
          - target_systems
          - target_systems
          name: name
          modified: 2000-01-23T04:56:07.000+00:00
          location: ""
          kill_chain_phases:
          - kill_chain_phases
          - kill_chain_phases
          id: id
        - root_type: indicator
          created: 2000-01-23T04:56:07.000+00:00
          pattern: pattern
          description: ""
          valid_from: 2000-01-23T04:56:07.000+00:00
          relevant_tags:
          - relevant_tags
          - relevant_tags
          query_type: query_type
          type: query
          tags:
            key:
              expires: 2000-01-23T04:56:07.000+00:00
              last_seen: 2000-01-23T04:56:07.000+00:00
              source: source
              id: id
              fresh: true
              target: target
          diamond: adversary
          valid_until: 2000-01-23T04:56:07.000+00:00
          target_systems:
          - target_systems
          - target_systems
          name: name
          modified: 2000-01-23T04:56:07.000+00:00
          location: ""
          kill_chain_phases:
          - kill_chain_phases
          - kill_chain_phases
          id: id
      properties:
        indicators:
          items:
            $ref: '#/components/schemas/Indicators_inner'
          title: Indicators
        total:
          title: Total
      required:
      - indicators
      - total
      title: IndicatorSearchResponse
    IndicatorTagRequest:
      additionalProperties: {}
      example:
        ids:
        - ids
        - ids
        strict: false
        tags:
        - tags
        - tags
        - tags
        - tags
        - tags
      properties:
        ids:
          items: {}
          title: Ids
        tags:
          default: []
          items: {}
          maxItems: 50
          title: Tags
        strict:
          default: false
          title: Strict
      required:
      - ids
      title: IndicatorTagRequest
    IndicatorTagResponse:
      additionalProperties: {}
      example:
        tagged: 0
        tags:
          key:
            key:
              expires: 2000-01-23T04:56:07.000+00:00
              last_seen: 2000-01-23T04:56:07.000+00:00
              source: source
              id: id
              fresh: true
              target: target
      properties:
        tagged:
          title: Tagged
        tags:
          additionalProperties:
            additionalProperties:
              $ref: '#/components/schemas/TagRelationship-Output'
          title: Tags
      required:
      - tagged
      - tags
      title: IndicatorTagResponse
    IndicatorType:
      enum:
      - query
      - sigma
      - regex
      - forensicartifact
      - suricata
      - yara
      title: IndicatorType
      type: string
    IntrusionSet-Input:
      properties:
        type:
          default: intrusion-set
          enum:
          - intrusion-set
          title: Type
          type: string
        name:
          minLength: 1
          title: Name
          type: string
        description:
          default: ""
          title: Description
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        created:
          format: date-time
          title: Created
          type: string
        modified:
          format: date-time
          title: Modified
          type: string
        aliases:
          default: []
          items:
            type: string
          type: array
        first_seen:
          format: date-time
          title: First Seen
          type: string
        last_seen:
          format: date-time
          title: Last Seen
          type: string
      required:
      - name
      title: IntrusionSet
    IntrusionSet-Output:
      properties:
        type:
          default: intrusion-set
          enum:
          - intrusion-set
          title: Type
          type: string
        name:
          minLength: 1
          title: Name
          type: string
        description:
          default: ""
          title: Description
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        created:
          format: date-time
          title: Created
          type: string
        modified:
          format: date-time
          title: Modified
          type: string
        aliases:
          default: []
          items:
            type: string
          type: array
        first_seen:
          format: date-time
          title: First Seen
          type: string
        last_seen:
          format: date-time
          title: Last Seen
          type: string
        id:
          readOnly: true
          title: Id
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagRelationship-Output'
          readOnly: true
          title: Tags
        root_type:
          enum:
          - entity
          readOnly: true
          title: Root Type
          type: string
        related_observables_count:
          readOnly: true
          title: Related Observables Count
          type: integer
      required:
      - id
      - name
      - related_observables_count
      - root_type
      - tags
      title: IntrusionSet
    Investigation-Input:
      example:
        reference: ""
        created: 2000-01-23T04:56:07.000+00:00
        name: name
        context:
        - "{}"
        - "{}"
        description: ""
        modified: 2000-01-23T04:56:07.000+00:00
        type: investigation
      properties:
        type:
          default: investigation
          enum:
          - investigation
          title: Type
          type: string
        name:
          minLength: 1
          title: Name
          type: string
        description:
          default: ""
          title: Description
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        created:
          format: date-time
          title: Created
          type: string
        modified:
          format: date-time
          title: Modified
          type: string
        reference:
          default: ""
          title: Reference
          type: string
      required:
      - name
      title: Investigation
    Investigation-Output:
      example:
        reference: ""
        root_type: entity
        created: 2000-01-23T04:56:07.000+00:00
        name: name
        context:
        - "{}"
        - "{}"
        description: ""
        modified: 2000-01-23T04:56:07.000+00:00
        id: id
        related_observables_count: 0
        type: investigation
        tags:
          key:
            expires: 2000-01-23T04:56:07.000+00:00
            last_seen: 2000-01-23T04:56:07.000+00:00
            source: source
            id: id
            fresh: true
            target: target
      properties:
        type:
          default: investigation
          enum:
          - investigation
          title: Type
          type: string
        name:
          minLength: 1
          title: Name
          type: string
        description:
          default: ""
          title: Description
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        created:
          format: date-time
          title: Created
          type: string
        modified:
          format: date-time
          title: Modified
          type: string
        reference:
          default: ""
          title: Reference
          type: string
        id:
          readOnly: true
          title: Id
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagRelationship-Output'
          readOnly: true
          title: Tags
        root_type:
          enum:
          - entity
          readOnly: true
          title: Root Type
          type: string
        related_observables_count:
          readOnly: true
          title: Related Observables Count
          type: integer
      required:
      - id
      - name
      - related_observables_count
      - root_type
      - tags
      title: Investigation
    JA3-Input:
      properties:
        value:
          minLength: 1
          title: Value
          type: string
        type:
          default: ja3
          enum:
          - ja3
          title: Type
          type: string
        created:
          format: date-time
          title: Created
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        last_analysis:
          additionalProperties:
            format: date-time
            type: string
          default: {}
          title: Last Analysis
      required:
      - value
      title: JA3
    JA3-Output:
      properties:
        value:
          minLength: 1
          title: Value
          type: string
        type:
          default: ja3
          enum:
          - ja3
          title: Type
          type: string
        created:
          format: date-time
          title: Created
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        last_analysis:
          additionalProperties:
            format: date-time
            type: string
          default: {}
          title: Last Analysis
        id:
          readOnly: true
          title: Id
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagRelationship-Output'
          readOnly: true
          title: Tags
        root_type:
          enum:
          - observable
          readOnly: true
          title: Root Type
          type: string
      required:
      - id
      - root_type
      - tags
      - value
      title: JA3
    JARM-Input:
      properties:
        value:
          minLength: 1
          title: Value
          type: string
        type:
          default: jarm
          enum:
          - jarm
          title: Type
          type: string
        created:
          format: date-time
          title: Created
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        last_analysis:
          additionalProperties:
            format: date-time
            type: string
          default: {}
          title: Last Analysis
      required:
      - value
      title: JARM
    JARM-Output:
      properties:
        value:
          minLength: 1
          title: Value
          type: string
        type:
          default: jarm
          enum:
          - jarm
          title: Type
          type: string
        created:
          format: date-time
          title: Created
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        last_analysis:
          additionalProperties:
            format: date-time
            type: string
          default: {}
          title: Last Analysis
        id:
          readOnly: true
          title: Id
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagRelationship-Output'
          readOnly: true
          title: Tags
        root_type:
          enum:
          - observable
          readOnly: true
          title: Root Type
          type: string
      required:
      - id
      - root_type
      - tags
      - value
      title: JARM
    MD5-Input:
      properties:
        value:
          minLength: 1
          title: Value
          type: string
        type:
          default: md5
          enum:
          - md5
          title: Type
          type: string
        created:
          format: date-time
          title: Created
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        last_analysis:
          additionalProperties:
            format: date-time
            type: string
          default: {}
          title: Last Analysis
      required:
      - value
      title: MD5
    MD5-Output:
      properties:
        value:
          minLength: 1
          title: Value
          type: string
        type:
          default: md5
          enum:
          - md5
          title: Type
          type: string
        created:
          format: date-time
          title: Created
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        last_analysis:
          additionalProperties:
            format: date-time
            type: string
          default: {}
          title: Last Analysis
        id:
          readOnly: true
          title: Id
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagRelationship-Output'
          readOnly: true
          title: Tags
        root_type:
          enum:
          - observable
          readOnly: true
          title: Root Type
          type: string
      required:
      - id
      - root_type
      - tags
      - value
      title: MD5
    MacAddress-Input:
      properties:
        value:
          minLength: 1
          title: Value
          type: string
        type:
          default: mac_address
          enum:
          - mac_address
          title: Type
          type: string
        created:
          format: date-time
          title: Created
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        last_analysis:
          additionalProperties:
            format: date-time
            type: string
          default: {}
          title: Last Analysis
      required:
      - value
      title: MacAddress
    MacAddress-Output:
      properties:
        value:
          minLength: 1
          title: Value
          type: string
        type:
          default: mac_address
          enum:
          - mac_address
          title: Type
          type: string
        created:
          format: date-time
          title: Created
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        last_analysis:
          additionalProperties:
            format: date-time
            type: string
          default: {}
          title: Last Analysis
        id:
          readOnly: true
          title: Id
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagRelationship-Output'
          readOnly: true
          title: Tags
        root_type:
          enum:
          - observable
          readOnly: true
          title: Root Type
          type: string
      required:
      - id
      - root_type
      - tags
      - value
      title: MacAddress
    Malware-Input:
      properties:
        type:
          default: malware
          enum:
          - malware
          title: Type
          type: string
        name:
          minLength: 1
          title: Name
          type: string
        description:
          default: ""
          title: Description
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        created:
          format: date-time
          title: Created
          type: string
        modified:
          format: date-time
          title: Modified
          type: string
        kill_chain_phases:
          default: []
          items:
            type: string
          type: array
        aliases:
          default: []
          items:
            type: string
          type: array
        family:
          default: ""
          title: Family
          type: string
      required:
      - name
      title: Malware
    Malware-Output:
      properties:
        type:
          default: malware
          enum:
          - malware
          title: Type
          type: string
        name:
          minLength: 1
          title: Name
          type: string
        description:
          default: ""
          title: Description
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        created:
          format: date-time
          title: Created
          type: string
        modified:
          format: date-time
          title: Modified
          type: string
        kill_chain_phases:
          default: []
          items:
            type: string
          type: array
        aliases:
          default: []
          items:
            type: string
          type: array
        family:
          default: ""
          title: Family
          type: string
        id:
          readOnly: true
          title: Id
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagRelationship-Output'
          readOnly: true
          title: Tags
        root_type:
          enum:
          - entity
          readOnly: true
          title: Root Type
          type: string
        related_observables_count:
          readOnly: true
          title: Related Observables Count
          type: integer
      required:
      - id
      - name
      - related_observables_count
      - root_type
      - tags
      title: Malware
    MergeTagRequest:
      additionalProperties: {}
      example:
        merge_into: merge_into
        permanent: false
        merge:
        - merge
        - merge
      properties:
        merge:
          items: {}
          title: Merge
        merge_into:
          title: Merge Into
        permanent:
          default: false
          title: Permanent
      required:
      - merge
      - merge_into
      title: MergeTagRequest
    MergeTagResult:
      additionalProperties: {}
      example:
        into:
          default_expiration: P90D
          created: 2000-01-23T04:56:07.000+00:00
          replaces:
          - replaces
          - replaces
          name: name
          count: 0
          produces:
          - produces
          - produces
          id: id
        merged: 0
      properties:
        merged:
          title: Merged
        into:
          $ref: '#/components/schemas/Tag'
      required:
      - into
      - merged
      title: MergeTagResult
    Mutex-Input:
      properties:
        value:
          minLength: 1
          title: Value
          type: string
        type:
          default: mutex
          enum:
          - mutex
          title: Type
          type: string
        created:
          format: date-time
          title: Created
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        last_analysis:
          additionalProperties:
            format: date-time
            type: string
          default: {}
          title: Last Analysis
      required:
      - value
      title: Mutex
    Mutex-Output:
      properties:
        value:
          minLength: 1
          title: Value
          type: string
        type:
          default: mutex
          enum:
          - mutex
          title: Type
          type: string
        created:
          format: date-time
          title: Created
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        last_analysis:
          additionalProperties:
            format: date-time
            type: string
          default: {}
          title: Last Analysis
        id:
          readOnly: true
          title: Id
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagRelationship-Output'
          readOnly: true
          title: Tags
        root_type:
          enum:
          - observable
          readOnly: true
          title: Root Type
          type: string
      required:
      - id
      - root_type
      - tags
      - value
      title: Mutex
    NamedPipe-Input:
      properties:
        value:
          minLength: 1
          title: Value
          type: string
        type:
          default: named_pipe
          enum:
          - named_pipe
          title: Type
          type: string
        created:
          format: date-time
          title: Created
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        last_analysis:
          additionalProperties:
            format: date-time
            type: string
          default: {}
          title: Last Analysis
      required:
      - value
      title: NamedPipe
    NamedPipe-Output:
      properties:
        value:
          minLength: 1
          title: Value
          type: string
        type:
          default: named_pipe
          enum:
          - named_pipe
          title: Type
          type: string
        created:
          format: date-time
          title: Created
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        last_analysis:
          additionalProperties:
            format: date-time
            type: string
          default: {}
          title: Last Analysis
        id:
          readOnly: true
          title: Id
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagRelationship-Output'
          readOnly: true
          title: Tags
        root_type:
          enum:
          - observable
          readOnly: true
          title: Root Type
          type: string
      required:
      - id
      - root_type
      - tags
      - value
      title: NamedPipe
    NewBulkObservableAddRequest:
      additionalProperties: {}
      example:
        observables:
        - type: cidr
          value: value
          tags:
          - tags
          - tags
          - tags
          - tags
          - tags
        - type: cidr
          value: value
          tags:
          - tags
          - tags
          - tags
          - tags
          - tags
      properties:
        observables:
          items:
            $ref: '#/components/schemas/NewObservableRequest'
          title: Observables
      required:
      - observables
      title: NewBulkObservableAddRequest
    NewDFIQRequest:
      additionalProperties: {}
      example:
        dfiq_yaml: dfiq_yaml
        update_indicators: false
        dfiq_type: scenario
      properties:
        dfiq_yaml:
          title: Dfiq Yaml
        dfiq_type:
          $ref: '#/components/schemas/DFIQType'
        update_indicators:
          default: false
          title: Update Indicators
      required:
      - dfiq_type
      - dfiq_yaml
      title: NewDFIQRequest
    NewEntityRequest:
      additionalProperties: {}
      example:
        entity:
          reference: ""
          created: 2000-01-23T04:56:07.000+00:00
          name: name
          context:
          - "{}"
          - "{}"
          description: ""
          modified: 2000-01-23T04:56:07.000+00:00
          type: investigation
        tags:
        - tags
        - tags
        - tags
        - tags
        - tags
      properties:
        entity:
          $ref: '#/components/schemas/Entity_1'
        tags:
          default: []
          items: {}
          maxItems: 50
          title: Tags
      required:
      - entity
      title: NewEntityRequest
    NewExportRequest:
      additionalProperties: {}
      example:
        export:
          status_message: ""
          fresh_tags: true
          sha256: sha256
          description: ""
          last_run: 2000-01-23T04:56:07.000+00:00
          type: export
          exclude_tags:
          - exclude_tags
          - exclude_tags
          enabled: false
          frequency: frequency
          ignore_tags:
          - ignore_tags
          - ignore_tags
          template_name: template_name
          name: name
          acts_on:
          - cidr
          - cidr
          include_tags:
          - include_tags
          - include_tags
          status: idle
      properties:
        export:
          $ref: '#/components/schemas/ExportTask-Input'
      required:
      - export
      title: NewExportRequest
    NewExtendedObservableRequest:
      additionalProperties: {}
      example:
        observable:
          created: 2000-01-23T04:56:07.000+00:00
          context:
          - "{}"
          - "{}"
          last_analysis:
            key: 2000-01-23T04:56:07.000+00:00
          type: cidr
          value: value
        tags:
        - tags
        - tags
        - tags
        - tags
        - tags
      properties:
        tags:
          default: []
          items: {}
          maxItems: 50
          title: Tags
        observable:
          $ref: '#/components/schemas/Observable_1'
      required:
      - observable
      title: NewExtendedObservableRequest
    NewIndicatorRequest:
      additionalProperties: {}
      example:
        indicator:
          created: 2000-01-23T04:56:07.000+00:00
          pattern: pattern
          description: ""
          valid_from: 2000-01-23T04:56:07.000+00:00
          relevant_tags:
          - relevant_tags
          - relevant_tags
          query_type: query_type
          type: query
          diamond: adversary
          valid_until: 2000-01-23T04:56:07.000+00:00
          target_systems:
          - target_systems
          - target_systems
          name: name
          modified: 2000-01-23T04:56:07.000+00:00
          location: ""
          kill_chain_phases:
          - kill_chain_phases
          - kill_chain_phases
      properties:
        indicator:
          $ref: '#/components/schemas/Indicator_1'
      required:
      - indicator
      title: NewIndicatorRequest
    NewObservableRequest:
      additionalProperties: {}
      example:
        type: cidr
        value: value
        tags:
        - tags
        - tags
        - tags
        - tags
        - tags
      properties:
        tags:
          default: []
          items: {}
          maxItems: 50
          title: Tags
        value:
          title: Value
        type:
          $ref: '#/components/schemas/ObservableType-Input'
      required:
      - type
      - value
      title: NewObservableRequest
    NewRequest:
      additionalProperties: {}
      example:
        default_expiration: P90D
        replaces:
        - replaces
        - replaces
        name: name
        produces:
        - produces
        - produces
      properties:
        name:
          title: Name
        default_expiration:
          default: P90D
          format: duration
          title: Default Expiration
        produces:
          default: []
          items: {}
          title: Produces
        replaces:
          default: []
          items: {}
          title: Replaces
      required:
      - name
      title: NewRequest
    NewUserRequest:
      additionalProperties: {}
      example:
        password: password
        admin: true
        username: username
      properties:
        username:
          title: Username
        password:
          title: Password
        admin:
          title: Admin
      required:
      - admin
      - password
      - username
      title: NewUserRequest
    Note-Input:
      properties:
        type:
          default: note
          enum:
          - note
          title: Type
          type: string
        name:
          minLength: 1
          title: Name
          type: string
        description:
          default: ""
          title: Description
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        created:
          format: date-time
          title: Created
          type: string
        modified:
          format: date-time
          title: Modified
          type: string
      required:
      - name
      title: Note
    Note-Output:
      properties:
        type:
          default: note
          enum:
          - note
          title: Type
          type: string
        name:
          minLength: 1
          title: Name
          type: string
        description:
          default: ""
          title: Description
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        created:
          format: date-time
          title: Created
          type: string
        modified:
          format: date-time
          title: Modified
          type: string
        id:
          readOnly: true
          title: Id
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagRelationship-Output'
          readOnly: true
          title: Tags
        root_type:
          enum:
          - entity
          readOnly: true
          title: Root Type
          type: string
        related_observables_count:
          readOnly: true
          title: Related Observables Count
          type: integer
      required:
      - id
      - name
      - related_observables_count
      - root_type
      - tags
      title: Note
    Observable:
      example:
        root_type: observable
        created: 2000-01-23T04:56:07.000+00:00
        context:
        - "{}"
        - "{}"
        last_analysis:
          key: 2000-01-23T04:56:07.000+00:00
        id: id
        type: type
        value: value
        tags:
          key:
            expires: 2000-01-23T04:56:07.000+00:00
            last_seen: 2000-01-23T04:56:07.000+00:00
            source: source
            id: id
            fresh: true
            target: target
      properties:
        value:
          minLength: 1
          title: Value
          type: string
        type:
          title: ObservableType
          type: string
        created:
          format: date-time
          title: Created
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        last_analysis:
          additionalProperties:
            format: date-time
            type: string
          default: {}
          title: Last Analysis
        id:
          readOnly: true
          title: Id
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagRelationship-Output'
          readOnly: true
          title: Tags
        root_type:
          enum:
          - observable
          readOnly: true
          title: Root Type
          type: string
      required:
      - id
      - root_type
      - tags
      - type
      - value
      title: Observable
    ObservableSearchRequest:
      additionalProperties: {}
      example:
        query:
          key: Query_value
        sorting:
        - - ""
          - ""
        - - ""
          - ""
        count: 0
        page: 6
        type: cidr
      properties:
        query:
          additionalProperties:
            $ref: '#/components/schemas/Query_value'
          default: {}
          title: Query
        type:
          $ref: '#/components/schemas/ObservableSearchRequest_type'
        sorting:
          default: []
          items:
            items: {}
            maxItems: 2
            minItems: 2
          title: Sorting
        count:
          default: 50
          title: Count
        page:
          default: 0
          title: Page
      title: ObservableSearchRequest
    ObservableSearchResponse:
      additionalProperties: {}
      example:
        observables:
        - root_type: observable
          created: 2000-01-23T04:56:07.000+00:00
          context:
          - "{}"
          - "{}"
          last_analysis:
            key: 2000-01-23T04:56:07.000+00:00
          id: id
          type: cidr
          value: value
          tags:
            key:
              expires: 2000-01-23T04:56:07.000+00:00
              last_seen: 2000-01-23T04:56:07.000+00:00
              source: source
              id: id
              fresh: true
              target: target
        - root_type: observable
          created: 2000-01-23T04:56:07.000+00:00
          context:
          - "{}"
          - "{}"
          last_analysis:
            key: 2000-01-23T04:56:07.000+00:00
          id: id
          type: cidr
          value: value
          tags:
            key:
              expires: 2000-01-23T04:56:07.000+00:00
              last_seen: 2000-01-23T04:56:07.000+00:00
              source: source
              id: id
              fresh: true
              target: target
        total: 0
      properties:
        observables:
          items:
            $ref: '#/components/schemas/Added_inner'
          title: Observables
        total:
          title: Total
      required:
      - observables
      - total
      title: ObservableSearchResponse
    ObservableTagRequest:
      additionalProperties: {}
      example:
        ids:
        - ids
        - ids
        strict: false
        tags:
        - tags
        - tags
        - tags
        - tags
        - tags
      properties:
        tags:
          default: []
          items: {}
          maxItems: 50
          title: Tags
        ids:
          items: {}
          title: Ids
        strict:
          default: false
          title: Strict
      required:
      - ids
      title: ObservableTagRequest
    ObservableTagResponse:
      additionalProperties: {}
      example:
        tagged: 0
        tags:
          key:
            key:
              expires: 2000-01-23T04:56:07.000+00:00
              last_seen: 2000-01-23T04:56:07.000+00:00
              source: source
              id: id
              fresh: true
              target: target
      properties:
        tagged:
          title: Tagged
        tags:
          additionalProperties:
            additionalProperties:
              $ref: '#/components/schemas/TagRelationship-Output'
          title: Tags
      required:
      - tagged
      - tags
      title: ObservableTagResponse
    ObservableType-Input:
      enum:
      - cidr
      - hostname
      - mac_address
      - certificate
      - ipv6
      - user_account
      - ssdeep
      - bic
      - package
      - sha256
      - docker_image
      - email
      - jarm
      - file
      - mutex
      - iban
      - command_line
      - url
      - registry_key
      - path
      - ipv4
      - tlsh
      - generic
      - sha1
      - user_agent
      - wallet
      - md5
      - imphash
      - asn
      - named_pipe
      - ja3
      - guess
      title: ObservableType
      type: string
    ObservableType-Output:
      title: ObservableType
      type: string
    OneShotTask:
      properties:
        name:
          title: Name
          type: string
        enabled:
          default: false
          title: Enabled
          type: boolean
        description:
          default: ""
          title: Description
          type: string
        status:
          $ref: '#/components/schemas/TaskStatus'
        status_message:
          default: ""
          title: Status Message
          type: string
        last_run:
          format: date-time
          nullable: true
          type: string
        frequency:
          format: duration
          nullable: true
          type: string
        type:
          default: oneshot
          enum:
          - oneshot
          title: Type
          type: string
        acts_on:
          default: []
          items:
            type: string
          type: array
        id:
          readOnly: true
          title: Id
          type: string
      required:
      - id
      - name
      title: OneShotTask
    Package-Input:
      properties:
        value:
          minLength: 1
          title: Value
          type: string
        type:
          default: package
          enum:
          - package
          title: Type
          type: string
        created:
          format: date-time
          title: Created
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        last_analysis:
          additionalProperties:
            format: date-time
            type: string
          default: {}
          title: Last Analysis
        version:
          title: Version
          type: string
        regitry_type:
          title: Regitry Type
          type: string
      required:
      - value
      title: Package
    Package-Output:
      properties:
        value:
          minLength: 1
          title: Value
          type: string
        type:
          default: package
          enum:
          - package
          title: Type
          type: string
        created:
          format: date-time
          title: Created
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        last_analysis:
          additionalProperties:
            format: date-time
            type: string
          default: {}
          title: Last Analysis
        version:
          title: Version
          type: string
        regitry_type:
          title: Regitry Type
          type: string
        id:
          readOnly: true
          title: Id
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagRelationship-Output'
          readOnly: true
          title: Tags
        root_type:
          enum:
          - observable
          readOnly: true
          title: Root Type
          type: string
      required:
      - id
      - root_type
      - tags
      - value
      title: Package
    PatchDFIQRequest:
      additionalProperties: {}
      example:
        dfiq_yaml: dfiq_yaml
        update_indicators: false
        dfiq_type: scenario
      properties:
        dfiq_yaml:
          title: Dfiq Yaml
        dfiq_type:
          $ref: '#/components/schemas/DFIQType'
        update_indicators:
          default: false
          title: Update Indicators
      required:
      - dfiq_type
      - dfiq_yaml
      title: PatchDFIQRequest
    PatchEntityRequest:
      additionalProperties: {}
      example:
        entity:
          reference: ""
          created: 2000-01-23T04:56:07.000+00:00
          name: name
          context:
          - "{}"
          - "{}"
          description: ""
          modified: 2000-01-23T04:56:07.000+00:00
          type: investigation
      properties:
        entity:
          $ref: '#/components/schemas/Entity_1'
      required:
      - entity
      title: PatchEntityRequest
    PatchExportRequest:
      additionalProperties: {}
      example:
        export:
          status_message: ""
          fresh_tags: true
          sha256: sha256
          description: ""
          last_run: 2000-01-23T04:56:07.000+00:00
          type: export
          exclude_tags:
          - exclude_tags
          - exclude_tags
          enabled: false
          frequency: frequency
          ignore_tags:
          - ignore_tags
          - ignore_tags
          template_name: template_name
          name: name
          acts_on:
          - cidr
          - cidr
          include_tags:
          - include_tags
          - include_tags
          status: idle
      properties:
        export:
          $ref: '#/components/schemas/ExportTask-Input'
      required:
      - export
      title: PatchExportRequest
    PatchIndicatorRequest:
      additionalProperties: {}
      example:
        indicator:
          created: 2000-01-23T04:56:07.000+00:00
          pattern: pattern
          description: ""
          valid_from: 2000-01-23T04:56:07.000+00:00
          relevant_tags:
          - relevant_tags
          - relevant_tags
          query_type: query_type
          type: query
          diamond: adversary
          valid_until: 2000-01-23T04:56:07.000+00:00
          target_systems:
          - target_systems
          - target_systems
          name: name
          modified: 2000-01-23T04:56:07.000+00:00
          location: ""
          kill_chain_phases:
          - kill_chain_phases
          - kill_chain_phases
      properties:
        indicator:
          $ref: '#/components/schemas/Indicator_1'
      required:
      - indicator
      title: PatchIndicatorRequest
    PatchObservableRequest:
      additionalProperties: {}
      example:
        observable:
          created: 2000-01-23T04:56:07.000+00:00
          context:
          - "{}"
          - "{}"
          last_analysis:
            key: 2000-01-23T04:56:07.000+00:00
          type: cidr
          value: value
      properties:
        observable:
          $ref: '#/components/schemas/Observable_1'
      required:
      - observable
      title: PatchObservableRequest
    Path-Input:
      properties:
        value:
          minLength: 1
          title: Value
          type: string
        type:
          default: path
          enum:
          - path
          title: Type
          type: string
        created:
          format: date-time
          title: Created
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        last_analysis:
          additionalProperties:
            format: date-time
            type: string
          default: {}
          title: Last Analysis
      required:
      - value
      title: Path
    Path-Output:
      properties:
        value:
          minLength: 1
          title: Value
          type: string
        type:
          default: path
          enum:
          - path
          title: Type
          type: string
        created:
          format: date-time
          title: Created
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        last_analysis:
          additionalProperties:
            format: date-time
            type: string
          default: {}
          title: Last Analysis
        id:
          readOnly: true
          title: Id
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagRelationship-Output'
          readOnly: true
          title: Tags
        root_type:
          enum:
          - observable
          readOnly: true
          title: Root Type
          type: string
      required:
      - id
      - root_type
      - tags
      - value
      title: Path
    Phone-Input:
      properties:
        type:
          default: phone
          enum:
          - phone
          title: Type
          type: string
        name:
          minLength: 1
          title: Name
          type: string
        description:
          default: ""
          title: Description
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        created:
          format: date-time
          title: Created
          type: string
        modified:
          format: date-time
          title: Modified
          type: string
      required:
      - name
      title: Phone
    Phone-Output:
      properties:
        type:
          default: phone
          enum:
          - phone
          title: Type
          type: string
        name:
          minLength: 1
          title: Name
          type: string
        description:
          default: ""
          title: Description
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        created:
          format: date-time
          title: Created
          type: string
        modified:
          format: date-time
          title: Modified
          type: string
        id:
          readOnly: true
          title: Id
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagRelationship-Output'
          readOnly: true
          title: Tags
        root_type:
          enum:
          - entity
          readOnly: true
          title: Root Type
          type: string
        related_observables_count:
          readOnly: true
          title: Related Observables Count
          type: integer
      required:
      - id
      - name
      - related_observables_count
      - root_type
      - tags
      title: Phone
    Query-Input:
      description: Represents a query that can be sent to another system.
      example:
        created: 2000-01-23T04:56:07.000+00:00
        pattern: pattern
        description: ""
        valid_from: 2000-01-23T04:56:07.000+00:00
        relevant_tags:
        - relevant_tags
        - relevant_tags
        query_type: query_type
        type: query
        diamond: adversary
        valid_until: 2000-01-23T04:56:07.000+00:00
        target_systems:
        - target_systems
        - target_systems
        name: name
        modified: 2000-01-23T04:56:07.000+00:00
        location: ""
        kill_chain_phases:
        - kill_chain_phases
        - kill_chain_phases
      properties:
        name:
          title: Name
          type: string
        type:
          default: query
          enum:
          - query
          title: Type
          type: string
        description:
          default: ""
          title: Description
          type: string
        created:
          format: date-time
          title: Created
          type: string
        modified:
          format: date-time
          title: Modified
          type: string
        valid_from:
          format: date-time
          title: Valid From
          type: string
        valid_until:
          format: date-time
          title: Valid Until
          type: string
        pattern:
          minLength: 1
          title: Pattern
          type: string
        location:
          default: ""
          title: Location
          type: string
        diamond:
          $ref: '#/components/schemas/DiamondModel'
        kill_chain_phases:
          default: []
          items:
            type: string
          type: array
        relevant_tags:
          default: []
          items:
            type: string
          type: array
        query_type:
          title: Query Type
          type: string
        target_systems:
          default: []
          items:
            type: string
          type: array
      required:
      - diamond
      - name
      - pattern
      - query_type
      title: Query
    Query-Output:
      description: Represents a query that can be sent to another system.
      example:
        root_type: indicator
        created: 2000-01-23T04:56:07.000+00:00
        pattern: pattern
        description: ""
        valid_from: 2000-01-23T04:56:07.000+00:00
        relevant_tags:
        - relevant_tags
        - relevant_tags
        query_type: query_type
        type: query
        tags:
          key:
            expires: 2000-01-23T04:56:07.000+00:00
            last_seen: 2000-01-23T04:56:07.000+00:00
            source: source
            id: id
            fresh: true
            target: target
        diamond: adversary
        valid_until: 2000-01-23T04:56:07.000+00:00
        target_systems:
        - target_systems
        - target_systems
        name: name
        modified: 2000-01-23T04:56:07.000+00:00
        location: ""
        kill_chain_phases:
        - kill_chain_phases
        - kill_chain_phases
        id: id
      properties:
        name:
          title: Name
          type: string
        type:
          default: query
          enum:
          - query
          title: Type
          type: string
        description:
          default: ""
          title: Description
          type: string
        created:
          format: date-time
          title: Created
          type: string
        modified:
          format: date-time
          title: Modified
          type: string
        valid_from:
          format: date-time
          title: Valid From
          type: string
        valid_until:
          format: date-time
          title: Valid Until
          type: string
        pattern:
          minLength: 1
          title: Pattern
          type: string
        location:
          default: ""
          title: Location
          type: string
        diamond:
          $ref: '#/components/schemas/DiamondModel'
        kill_chain_phases:
          default: []
          items:
            type: string
          type: array
        relevant_tags:
          default: []
          items:
            type: string
          type: array
        query_type:
          title: Query Type
          type: string
        target_systems:
          default: []
          items:
            type: string
          type: array
        id:
          readOnly: true
          title: Id
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagRelationship-Output'
          readOnly: true
          title: Tags
        root_type:
          enum:
          - indicator
          readOnly: true
          title: Root Type
          type: string
      required:
      - diamond
      - id
      - name
      - pattern
      - query_type
      - root_type
      - tags
      title: Query
    Regex-Input:
      properties:
        name:
          title: Name
          type: string
        type:
          default: regex
          enum:
          - regex
          title: Type
          type: string
        description:
          default: ""
          title: Description
          type: string
        created:
          format: date-time
          title: Created
          type: string
        modified:
          format: date-time
          title: Modified
          type: string
        valid_from:
          format: date-time
          title: Valid From
          type: string
        valid_until:
          format: date-time
          title: Valid Until
          type: string
        pattern:
          minLength: 1
          title: Pattern
          type: string
        location:
          default: ""
          title: Location
          type: string
        diamond:
          $ref: '#/components/schemas/DiamondModel'
        kill_chain_phases:
          default: []
          items:
            type: string
          type: array
        relevant_tags:
          default: []
          items:
            type: string
          type: array
      required:
      - diamond
      - name
      - pattern
      title: Regex
    Regex-Output:
      properties:
        name:
          title: Name
          type: string
        type:
          default: regex
          enum:
          - regex
          title: Type
          type: string
        description:
          default: ""
          title: Description
          type: string
        created:
          format: date-time
          title: Created
          type: string
        modified:
          format: date-time
          title: Modified
          type: string
        valid_from:
          format: date-time
          title: Valid From
          type: string
        valid_until:
          format: date-time
          title: Valid Until
          type: string
        pattern:
          minLength: 1
          title: Pattern
          type: string
        location:
          default: ""
          title: Location
          type: string
        diamond:
          $ref: '#/components/schemas/DiamondModel'
        kill_chain_phases:
          default: []
          items:
            type: string
          type: array
        relevant_tags:
          default: []
          items:
            type: string
          type: array
        id:
          readOnly: true
          title: Id
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagRelationship-Output'
          readOnly: true
          title: Tags
        root_type:
          enum:
          - indicator
          readOnly: true
          title: Root Type
          type: string
      required:
      - diamond
      - id
      - name
      - pattern
      - root_type
      - tags
      title: Regex
    RegistryHive:
      description: Registry Hive enum class.
      enum:
      - HKEY_CURRENT_CONFIG
      - HKEY_CURRENT_USER
      - HKEY_LOCAL_MACHINE_SAM
      - HKEY_LOCAL_MACHINE_Security
      - HKEY_LOCAL_MACHINE_Software
      - HKEY_LOCAL_MACHINE_System
      - HKEY_USERS_DEFAULT
      title: RegistryHive
      type: string
    RegistryKey-Input:
      description: |-
        Registry Key observable schema class.

        Attributes:
            key: The registry key name.
            value: The registry key value.
            hive: The registry hive like SYSEM, SOFTWARE, etc.
            path_file: The filesystem path to the file that contains the registry key value.
      properties:
        value:
          minLength: 1
          title: Value
          type: string
        type:
          default: registry_key
          enum:
          - registry_key
          title: Type
          type: string
        created:
          format: date-time
          title: Created
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        last_analysis:
          additionalProperties:
            format: date-time
            type: string
          default: {}
          title: Last Analysis
        key:
          title: Key
          type: string
        data:
          format: binary
          title: Data
          type: string
        hive:
          $ref: '#/components/schemas/RegistryHive'
        path_file:
          nullable: true
          type: string
      required:
      - data
      - hive
      - key
      - value
      title: RegistryKey
    RegistryKey-Output:
      description: |-
        Registry Key observable schema class.

        Attributes:
            key: The registry key name.
            value: The registry key value.
            hive: The registry hive like SYSEM, SOFTWARE, etc.
            path_file: The filesystem path to the file that contains the registry key value.
      properties:
        value:
          minLength: 1
          title: Value
          type: string
        type:
          default: registry_key
          enum:
          - registry_key
          title: Type
          type: string
        created:
          format: date-time
          title: Created
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        last_analysis:
          additionalProperties:
            format: date-time
            type: string
          default: {}
          title: Last Analysis
        key:
          title: Key
          type: string
        data:
          format: binary
          title: Data
          type: string
        hive:
          $ref: '#/components/schemas/RegistryHive'
        path_file:
          nullable: true
          type: string
        id:
          readOnly: true
          title: Id
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagRelationship-Output'
          readOnly: true
          title: Tags
        root_type:
          enum:
          - observable
          readOnly: true
          title: Root Type
          type: string
      required:
      - data
      - hive
      - id
      - key
      - root_type
      - tags
      - value
      title: RegistryKey
    Relationship:
      example:
        created: 2000-01-23T04:56:07.000+00:00
        count: 0
        description: description
        modified: 2000-01-23T04:56:07.000+00:00
        source: source
        id: id
        type: type
        target: target
      properties:
        source:
          title: Source
          type: string
        target:
          title: Target
          type: string
        type:
          title: Type
          type: string
        count:
          default: 1
          title: Count
          type: integer
        description:
          title: Description
          type: string
        created:
          format: date-time
          title: Created
          type: string
        modified:
          format: date-time
          title: Modified
          type: string
        id:
          readOnly: true
          title: Id
          type: string
      required:
      - created
      - description
      - id
      - modified
      - source
      - target
      - type
      title: Relationship
    RenderTemplateRequest:
      additionalProperties: {}
      example:
        template_name: template_name
        observable_ids:
        - observable_ids
        - observable_ids
        search_query: Search_Query
      properties:
        template_name:
          title: Template Name
        observable_ids:
          default: []
          items: {}
          title: Observable Ids
        search_query:
          $ref: '#/components/schemas/Search_Query'
      required:
      - template_name
      title: RenderTemplateRequest
    ResetApiKeyRequest:
      additionalProperties: {}
      example:
        user_id: user_id
      properties:
        user_id:
          title: User Id
      required:
      - user_id
      title: ResetApiKeyRequest
    ResetPasswordRequest:
      additionalProperties: {}
      example:
        user_id: user_id
        new_password: new_password
      properties:
        user_id:
          title: User Id
        new_password:
          title: New Password
      required:
      - new_password
      - user_id
      title: ResetPasswordRequest
    SHA1-Input:
      properties:
        value:
          minLength: 1
          title: Value
          type: string
        type:
          default: sha1
          enum:
          - sha1
          title: Type
          type: string
        created:
          format: date-time
          title: Created
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        last_analysis:
          additionalProperties:
            format: date-time
            type: string
          default: {}
          title: Last Analysis
      required:
      - value
      title: SHA1
    SHA1-Output:
      properties:
        value:
          minLength: 1
          title: Value
          type: string
        type:
          default: sha1
          enum:
          - sha1
          title: Type
          type: string
        created:
          format: date-time
          title: Created
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        last_analysis:
          additionalProperties:
            format: date-time
            type: string
          default: {}
          title: Last Analysis
        id:
          readOnly: true
          title: Id
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagRelationship-Output'
          readOnly: true
          title: Tags
        root_type:
          enum:
          - observable
          readOnly: true
          title: Root Type
          type: string
      required:
      - id
      - root_type
      - tags
      - value
      title: SHA1
    SHA256-Input:
      properties:
        value:
          minLength: 1
          title: Value
          type: string
        type:
          default: sha256
          enum:
          - sha256
          title: Type
          type: string
        created:
          format: date-time
          title: Created
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        last_analysis:
          additionalProperties:
            format: date-time
            type: string
          default: {}
          title: Last Analysis
      required:
      - value
      title: SHA256
    SHA256-Output:
      properties:
        value:
          minLength: 1
          title: Value
          type: string
        type:
          default: sha256
          enum:
          - sha256
          title: Type
          type: string
        created:
          format: date-time
          title: Created
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        last_analysis:
          additionalProperties:
            format: date-time
            type: string
          default: {}
          title: Last Analysis
        id:
          readOnly: true
          title: Id
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagRelationship-Output'
          readOnly: true
          title: Tags
        root_type:
          enum:
          - observable
          readOnly: true
          title: Root Type
          type: string
      required:
      - id
      - root_type
      - tags
      - value
      title: SHA256
    SearchUserRequest:
      additionalProperties: {}
      example:
        count: 0
        page: 6
        username: username
      properties:
        username:
          title: Username
        count:
          default: 50
          title: Count
        page:
          default: 0
          title: Page
      required:
      - username
      title: SearchUserRequest
    SearchUserResponse:
      additionalProperties: {}
      example:
        total: 0
        users:
        - api_key: api_key
          admin: false
          id: id
          enabled: true
          username: username
        - api_key: api_key
          admin: false
          id: id
          enabled: true
          username: username
      properties:
        users:
          items:
            $ref: '#/components/schemas/User'
          title: Users
        total:
          title: Total
      required:
      - total
      - users
      title: SearchUserResponse
    SeverityType:
      enum:
      - none
      - low
      - medium
      - high
      - critical
      title: SeverityType
      type: string
    Sigma-Input:
      description: |-
        Represents a Sigma rule.

        Parsing and matching is yet TODO.
      properties:
        name:
          title: Name
          type: string
        type:
          default: sigma
          enum:
          - sigma
          title: Type
          type: string
        description:
          default: ""
          title: Description
          type: string
        created:
          format: date-time
          title: Created
          type: string
        modified:
          format: date-time
          title: Modified
          type: string
        valid_from:
          format: date-time
          title: Valid From
          type: string
        valid_until:
          format: date-time
          title: Valid Until
          type: string
        pattern:
          minLength: 1
          title: Pattern
          type: string
        location:
          default: ""
          title: Location
          type: string
        diamond:
          $ref: '#/components/schemas/DiamondModel'
        kill_chain_phases:
          default: []
          items:
            type: string
          type: array
        relevant_tags:
          default: []
          items:
            type: string
          type: array
      required:
      - diamond
      - name
      - pattern
      title: Sigma
    Sigma-Output:
      description: |-
        Represents a Sigma rule.

        Parsing and matching is yet TODO.
      properties:
        name:
          title: Name
          type: string
        type:
          default: sigma
          enum:
          - sigma
          title: Type
          type: string
        description:
          default: ""
          title: Description
          type: string
        created:
          format: date-time
          title: Created
          type: string
        modified:
          format: date-time
          title: Modified
          type: string
        valid_from:
          format: date-time
          title: Valid From
          type: string
        valid_until:
          format: date-time
          title: Valid Until
          type: string
        pattern:
          minLength: 1
          title: Pattern
          type: string
        location:
          default: ""
          title: Location
          type: string
        diamond:
          $ref: '#/components/schemas/DiamondModel'
        kill_chain_phases:
          default: []
          items:
            type: string
          type: array
        relevant_tags:
          default: []
          items:
            type: string
          type: array
        id:
          readOnly: true
          title: Id
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagRelationship-Output'
          readOnly: true
          title: Tags
        root_type:
          enum:
          - indicator
          readOnly: true
          title: Root Type
          type: string
      required:
      - diamond
      - id
      - name
      - pattern
      - root_type
      - tags
      title: Sigma
    Ssdeep-Input:
      properties:
        value:
          minLength: 1
          title: Value
          type: string
        type:
          default: ssdeep
          enum:
          - ssdeep
          title: Type
          type: string
        created:
          format: date-time
          title: Created
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        last_analysis:
          additionalProperties:
            format: date-time
            type: string
          default: {}
          title: Last Analysis
      required:
      - value
      title: Ssdeep
    Ssdeep-Output:
      properties:
        value:
          minLength: 1
          title: Value
          type: string
        type:
          default: ssdeep
          enum:
          - ssdeep
          title: Type
          type: string
        created:
          format: date-time
          title: Created
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        last_analysis:
          additionalProperties:
            format: date-time
            type: string
          default: {}
          title: Last Analysis
        id:
          readOnly: true
          title: Id
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagRelationship-Output'
          readOnly: true
          title: Tags
        root_type:
          enum:
          - observable
          readOnly: true
          title: Root Type
          type: string
      required:
      - id
      - root_type
      - tags
      - value
      title: Ssdeep
    Suricata-Input:
      description: |-
        Represents a Suricata rule.

        Parsing and matching is yet TODO.
      properties:
        name:
          title: Name
          type: string
        type:
          default: suricata
          enum:
          - suricata
          title: Type
          type: string
        description:
          default: ""
          title: Description
          type: string
        created:
          format: date-time
          title: Created
          type: string
        modified:
          format: date-time
          title: Modified
          type: string
        valid_from:
          format: date-time
          title: Valid From
          type: string
        valid_until:
          format: date-time
          title: Valid Until
          type: string
        pattern:
          minLength: 1
          title: Pattern
          type: string
        location:
          default: ""
          title: Location
          type: string
        diamond:
          $ref: '#/components/schemas/DiamondModel'
        kill_chain_phases:
          default: []
          items:
            type: string
          type: array
        relevant_tags:
          default: []
          items:
            type: string
          type: array
        sid:
          default: 0
          title: Sid
          type: integer
        metadata:
          default: []
          items:
            type: string
          type: array
        references:
          default: []
          items:
            type: string
          type: array
      required:
      - diamond
      - name
      - pattern
      title: Suricata
    Suricata-Output:
      description: |-
        Represents a Suricata rule.

        Parsing and matching is yet TODO.
      example:
        metadata:
        - metadata
        - metadata
        references:
        - references
        - references
        root_type: indicator
        created: 2000-01-23T04:56:07.000+00:00
        pattern: pattern
        description: ""
        valid_from: 2000-01-23T04:56:07.000+00:00
        relevant_tags:
        - relevant_tags
        - relevant_tags
        type: suricata
        sid: 0
        tags:
          key:
            expires: 2000-01-23T04:56:07.000+00:00
            last_seen: 2000-01-23T04:56:07.000+00:00
            source: source
            id: id
            fresh: true
            target: target
        diamond: adversary
        valid_until: 2000-01-23T04:56:07.000+00:00
        name: name
        modified: 2000-01-23T04:56:07.000+00:00
        location: ""
        kill_chain_phases:
        - kill_chain_phases
        - kill_chain_phases
        id: id
      properties:
        name:
          title: Name
          type: string
        type:
          default: suricata
          enum:
          - suricata
          title: Type
          type: string
        description:
          default: ""
          title: Description
          type: string
        created:
          format: date-time
          title: Created
          type: string
        modified:
          format: date-time
          title: Modified
          type: string
        valid_from:
          format: date-time
          title: Valid From
          type: string
        valid_until:
          format: date-time
          title: Valid Until
          type: string
        pattern:
          minLength: 1
          title: Pattern
          type: string
        location:
          default: ""
          title: Location
          type: string
        diamond:
          $ref: '#/components/schemas/DiamondModel'
        kill_chain_phases:
          default: []
          items:
            type: string
          type: array
        relevant_tags:
          default: []
          items:
            type: string
          type: array
        sid:
          default: 0
          title: Sid
          type: integer
        metadata:
          default: []
          items:
            type: string
          type: array
        references:
          default: []
          items:
            type: string
          type: array
        id:
          readOnly: true
          title: Id
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagRelationship-Output'
          readOnly: true
          title: Tags
        root_type:
          enum:
          - indicator
          readOnly: true
          title: Root Type
          type: string
      required:
      - diamond
      - id
      - name
      - pattern
      - root_type
      - tags
      title: Suricata
    SystemConfigResponse:
      additionalProperties: {}
      description: System config template.
      example:
        system: "{}"
        auth: "{}"
      properties:
        auth:
          title: Auth
        system:
          title: System
      required:
      - auth
      - system
      title: SystemConfigResponse
    TLSH-Input:
      properties:
        value:
          minLength: 1
          title: Value
          type: string
        type:
          default: tlsh
          enum:
          - tlsh
          title: Type
          type: string
        created:
          format: date-time
          title: Created
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        last_analysis:
          additionalProperties:
            format: date-time
            type: string
          default: {}
          title: Last Analysis
      required:
      - value
      title: TLSH
    TLSH-Output:
      properties:
        value:
          minLength: 1
          title: Value
          type: string
        type:
          default: tlsh
          enum:
          - tlsh
          title: Type
          type: string
        created:
          format: date-time
          title: Created
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        last_analysis:
          additionalProperties:
            format: date-time
            type: string
          default: {}
          title: Last Analysis
        id:
          readOnly: true
          title: Id
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagRelationship-Output'
          readOnly: true
          title: Tags
        root_type:
          enum:
          - observable
          readOnly: true
          title: Root Type
          type: string
      required:
      - id
      - root_type
      - tags
      - value
      title: TLSH
    Tag:
      example:
        default_expiration: P90D
        created: 2000-01-23T04:56:07.000+00:00
        replaces:
        - replaces
        - replaces
        name: name
        count: 0
        produces:
        - produces
        - produces
        id: id
      properties:
        name:
          maxLength: 50
          title: Name
          type: string
        count:
          default: 0
          title: Count
          type: integer
        created:
          format: date-time
          title: Created
          type: string
        default_expiration:
          default: P90D
          format: duration
          title: Default Expiration
          type: string
        produces:
          default: []
          items:
            type: string
          type: array
        replaces:
          default: []
          items:
            type: string
          type: array
        id:
          readOnly: true
          title: Id
          type: string
      required:
      - id
      - name
      title: Tag
    TagRelationship-Input:
      properties:
        source:
          title: Source
          type: string
        target:
          title: Target
          type: string
        last_seen:
          format: date-time
          title: Last Seen
          type: string
        expires:
          format: date-time
          nullable: true
          type: string
        fresh:
          title: Fresh
          type: boolean
      required:
      - fresh
      - last_seen
      - source
      - target
      title: TagRelationship
    TagRelationship-Output:
      example:
        expires: 2000-01-23T04:56:07.000+00:00
        last_seen: 2000-01-23T04:56:07.000+00:00
        source: source
        id: id
        fresh: true
        target: target
      properties:
        source:
          title: Source
          type: string
        target:
          title: Target
          type: string
        last_seen:
          format: date-time
          title: Last Seen
          type: string
        expires:
          format: date-time
          nullable: true
          type: string
        fresh:
          title: Fresh
          type: boolean
        id:
          readOnly: true
          title: Id
          type: string
      required:
      - fresh
      - id
      - last_seen
      - source
      - target
      title: TagRelationship
    TagSearchRequest:
      additionalProperties: {}
      example:
        replaces:
        - replaces
        - replaces
        name: Name
        produces:
        - produces
        - produces
        count: 0
        page: 6
      properties:
        name:
          $ref: '#/components/schemas/Name'
        produces:
          default: []
          items: {}
          title: Produces
        replaces:
          default: []
          items: {}
          title: Replaces
        count:
          title: Count
        page:
          title: Page
      required:
      - count
      - page
      title: TagSearchRequest
    TagSearchResponse:
      additionalProperties: {}
      example:
        total: 0
        tags:
        - default_expiration: P90D
          created: 2000-01-23T04:56:07.000+00:00
          replaces:
          - replaces
          - replaces
          name: name
          count: 0
          produces:
          - produces
          - produces
          id: id
        - default_expiration: P90D
          created: 2000-01-23T04:56:07.000+00:00
          replaces:
          - replaces
          - replaces
          name: name
          count: 0
          produces:
          - produces
          - produces
          id: id
      properties:
        tags:
          items:
            $ref: '#/components/schemas/Tag'
          title: Tags
        total:
          title: Total
      required:
      - tags
      - total
      title: TagSearchResponse
    TaskParams:
      example:
        params: "{}"
      properties:
        params:
          title: Params
          type: object
      title: TaskParams
    TaskSearchRequest:
      additionalProperties: {}
      example:
        query:
          key: Query_value
        sorting:
        - - ""
          - ""
        - - ""
          - ""
        count: 0
        page: 6
        type: feed
      properties:
        query:
          additionalProperties:
            $ref: '#/components/schemas/Query_value'
          default: {}
          title: Query
        type:
          $ref: '#/components/schemas/TaskSearchRequest_type'
        sorting:
          default: []
          items:
            items: {}
            maxItems: 2
            minItems: 2
          title: Sorting
        count:
          default: 100
          title: Count
        page:
          default: 0
          title: Page
      title: TaskSearchRequest
    TaskSearchResponse:
      additionalProperties: {}
      example:
        total: 0
        tasks:
        - status_message: ""
          name: name
          description: ""
          last_run: 2000-01-23T04:56:07.000+00:00
          id: id
          type: feed
          enabled: false
          status: idle
          frequency: frequency
        - status_message: ""
          name: name
          description: ""
          last_run: 2000-01-23T04:56:07.000+00:00
          id: id
          type: feed
          enabled: false
          status: idle
          frequency: frequency
      properties:
        tasks:
          items:
            $ref: '#/components/schemas/Tasks_inner'
          title: Tasks
        total:
          title: Total
      required:
      - tasks
      - total
      title: TaskSearchResponse
    TaskStatus:
      enum:
      - idle
      - running
      - completed
      - failed
      title: TaskStatus
      type: string
    TaskType:
      enum:
      - feed
      - analytics
      - export
      - oneshot
      - inline
      title: TaskType
      type: string
    Template:
      description: A template for exporting data to an external system.
      example:
        template: template
        name: name
      properties:
        name:
          title: Name
          type: string
        template:
          title: Template
          type: string
      required:
      - name
      - template
      title: Template
    TemplateSearchRequest:
      additionalProperties: {}
      example:
        name: ""
        count: 0
        page: 6
      properties:
        name:
          default: ""
          title: Name
        count:
          default: 50
          title: Count
        page:
          default: 0
          title: Page
      title: TemplateSearchRequest
    TemplateSearchResponse:
      additionalProperties: {}
      example:
        total: 0
        templates:
        - template: template
          name: name
        - template: template
          name: name
      properties:
        templates:
          items:
            $ref: '#/components/schemas/Template'
          title: Templates
        total:
          title: Total
      required:
      - templates
      - total
      title: TemplateSearchResponse
    ThreatActor-Input:
      properties:
        type:
          default: threat-actor
          enum:
          - threat-actor
          title: Type
          type: string
        name:
          minLength: 1
          title: Name
          type: string
        description:
          default: ""
          title: Description
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        created:
          format: date-time
          title: Created
          type: string
        modified:
          format: date-time
          title: Modified
          type: string
        threat_actor_types:
          default: []
          items:
            type: string
          type: array
        aliases:
          default: []
          items:
            type: string
          type: array
        first_seen:
          format: date-time
          title: First Seen
          type: string
        last_seen:
          format: date-time
          title: Last Seen
          type: string
      required:
      - name
      title: ThreatActor
    ThreatActor-Output:
      properties:
        type:
          default: threat-actor
          enum:
          - threat-actor
          title: Type
          type: string
        name:
          minLength: 1
          title: Name
          type: string
        description:
          default: ""
          title: Description
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        created:
          format: date-time
          title: Created
          type: string
        modified:
          format: date-time
          title: Modified
          type: string
        threat_actor_types:
          default: []
          items:
            type: string
          type: array
        aliases:
          default: []
          items:
            type: string
          type: array
        first_seen:
          format: date-time
          title: First Seen
          type: string
        last_seen:
          format: date-time
          title: Last Seen
          type: string
        id:
          readOnly: true
          title: Id
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagRelationship-Output'
          readOnly: true
          title: Tags
        root_type:
          enum:
          - entity
          readOnly: true
          title: Root Type
          type: string
        related_observables_count:
          readOnly: true
          title: Related Observables Count
          type: integer
      required:
      - id
      - name
      - related_observables_count
      - root_type
      - tags
      title: ThreatActor
    ToggleUserRequest:
      additionalProperties: {}
      example:
        field: enabled
        user_id: user_id
      properties:
        user_id:
          title: User Id
        field:
          $ref: '#/components/schemas/ToggleableField'
      required:
      - field
      - user_id
      title: ToggleUserRequest
    ToggleableField:
      enum:
      - enabled
      - admin
      title: ToggleableField
      type: string
    Tool-Input:
      properties:
        type:
          default: tool
          enum:
          - tool
          title: Type
          type: string
        name:
          minLength: 1
          title: Name
          type: string
        description:
          default: ""
          title: Description
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        created:
          format: date-time
          title: Created
          type: string
        modified:
          format: date-time
          title: Modified
          type: string
        aliases:
          default: []
          items:
            type: string
          type: array
        kill_chain_phases:
          default: []
          items:
            type: string
          type: array
        tool_version:
          default: ""
          title: Tool Version
          type: string
      required:
      - name
      title: Tool
    Tool-Output:
      example:
        aliases:
        - aliases
        - aliases
        root_type: entity
        created: 2000-01-23T04:56:07.000+00:00
        description: ""
        related_observables_count: 0
        type: tool
        tags:
          key:
            expires: 2000-01-23T04:56:07.000+00:00
            last_seen: 2000-01-23T04:56:07.000+00:00
            source: source
            id: id
            fresh: true
            target: target
        tool_version: ""
        name: name
        context:
        - "{}"
        - "{}"
        modified: 2000-01-23T04:56:07.000+00:00
        kill_chain_phases:
        - kill_chain_phases
        - kill_chain_phases
        id: id
      properties:
        type:
          default: tool
          enum:
          - tool
          title: Type
          type: string
        name:
          minLength: 1
          title: Name
          type: string
        description:
          default: ""
          title: Description
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        created:
          format: date-time
          title: Created
          type: string
        modified:
          format: date-time
          title: Modified
          type: string
        aliases:
          default: []
          items:
            type: string
          type: array
        kill_chain_phases:
          default: []
          items:
            type: string
          type: array
        tool_version:
          default: ""
          title: Tool Version
          type: string
        id:
          readOnly: true
          title: Id
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagRelationship-Output'
          readOnly: true
          title: Tags
        root_type:
          enum:
          - entity
          readOnly: true
          title: Root Type
          type: string
        related_observables_count:
          readOnly: true
          title: Related Observables Count
          type: integer
      required:
      - id
      - name
      - related_observables_count
      - root_type
      - tags
      title: Tool
    UpdateRequest:
      additionalProperties: {}
      example:
        default_expiration: P90D
        replaces:
        - replaces
        - replaces
        name: name
        produces:
        - produces
        - produces
      properties:
        name:
          title: Name
        default_expiration:
          default: P90D
          format: duration
          title: Default Expiration
        produces:
          default: []
          items: {}
          title: Produces
        replaces:
          default: []
          items: {}
          title: Replaces
      required:
      - name
      title: UpdateRequest
    Url-Input:
      properties:
        value:
          minLength: 1
          title: Value
          type: string
        type:
          default: url
          enum:
          - url
          title: Type
          type: string
        created:
          format: date-time
          title: Created
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        last_analysis:
          additionalProperties:
            format: date-time
            type: string
          default: {}
          title: Last Analysis
      required:
      - value
      title: Url
    Url-Output:
      example:
        root_type: observable
        created: 2000-01-23T04:56:07.000+00:00
        context:
        - "{}"
        - "{}"
        last_analysis:
          key: 2000-01-23T04:56:07.000+00:00
        id: id
        type: url
        value: value
        tags:
          key:
            expires: 2000-01-23T04:56:07.000+00:00
            last_seen: 2000-01-23T04:56:07.000+00:00
            source: source
            id: id
            fresh: true
            target: target
      properties:
        value:
          minLength: 1
          title: Value
          type: string
        type:
          default: url
          enum:
          - url
          title: Type
          type: string
        created:
          format: date-time
          title: Created
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        last_analysis:
          additionalProperties:
            format: date-time
            type: string
          default: {}
          title: Last Analysis
        id:
          readOnly: true
          title: Id
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagRelationship-Output'
          readOnly: true
          title: Tags
        root_type:
          enum:
          - observable
          readOnly: true
          title: Root Type
          type: string
      required:
      - id
      - root_type
      - tags
      - value
      title: Url
    User:
      example:
        api_key: api_key
        admin: false
        id: id
        enabled: true
        username: username
      properties:
        username:
          title: Username
          type: string
        enabled:
          default: true
          title: Enabled
          type: boolean
        admin:
          default: false
          title: Admin
          type: boolean
        api_key:
          title: Api Key
          type: string
        id:
          readOnly: true
          title: Id
          type: string
      required:
      - id
      - username
      title: User
    UserAccount-Input:
      description: |-
        Represents a user account observable based on the Oasis schema.
        https://docs.oasis-open.org/cti/stix/v2.1/os/stix-v2.1-os.html#_azo70vgj1vm2

        account_login and account_type must be provided.
        Value should to be in the form <ACCOUNT_TYPE>:<ACCOUNT_LOGIN>.
      properties:
        value:
          minLength: 1
          title: Value
          type: string
        type:
          default: user_account
          enum:
          - user_account
          title: Type
          type: string
        created:
          format: date-time
          title: Created
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        last_analysis:
          additionalProperties:
            format: date-time
            type: string
          default: {}
          title: Last Analysis
        user_id:
          nullable: true
          type: string
        credential:
          nullable: true
          type: string
        account_login:
          nullable: true
          type: string
        account_type:
          nullable: true
          type: string
        display_name:
          nullable: true
          type: string
        is_service_account:
          nullable: true
          type: boolean
        is_privileged:
          nullable: true
          type: boolean
        can_escalate_privs:
          nullable: true
          type: boolean
        is_disabled:
          nullable: true
          type: boolean
        account_created:
          format: date-time
          nullable: true
          type: string
        account_expires:
          format: date-time
          nullable: true
          type: string
        credential_last_changed:
          format: date-time
          nullable: true
          type: string
        account_first_login:
          format: date-time
          nullable: true
          type: string
        account_last_login:
          format: date-time
          nullable: true
          type: string
      required:
      - value
      title: UserAccount
    UserAccount-Output:
      description: |-
        Represents a user account observable based on the Oasis schema.
        https://docs.oasis-open.org/cti/stix/v2.1/os/stix-v2.1-os.html#_azo70vgj1vm2

        account_login and account_type must be provided.
        Value should to be in the form <ACCOUNT_TYPE>:<ACCOUNT_LOGIN>.
      properties:
        value:
          minLength: 1
          title: Value
          type: string
        type:
          default: user_account
          enum:
          - user_account
          title: Type
          type: string
        created:
          format: date-time
          title: Created
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        last_analysis:
          additionalProperties:
            format: date-time
            type: string
          default: {}
          title: Last Analysis
        user_id:
          nullable: true
          type: string
        credential:
          nullable: true
          type: string
        account_login:
          nullable: true
          type: string
        account_type:
          nullable: true
          type: string
        display_name:
          nullable: true
          type: string
        is_service_account:
          nullable: true
          type: boolean
        is_privileged:
          nullable: true
          type: boolean
        can_escalate_privs:
          nullable: true
          type: boolean
        is_disabled:
          nullable: true
          type: boolean
        account_created:
          format: date-time
          nullable: true
          type: string
        account_expires:
          format: date-time
          nullable: true
          type: string
        credential_last_changed:
          format: date-time
          nullable: true
          type: string
        account_first_login:
          format: date-time
          nullable: true
          type: string
        account_last_login:
          format: date-time
          nullable: true
          type: string
        id:
          readOnly: true
          title: Id
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagRelationship-Output'
          readOnly: true
          title: Tags
        root_type:
          enum:
          - observable
          readOnly: true
          title: Root Type
          type: string
      required:
      - id
      - root_type
      - tags
      - value
      title: UserAccount
    UserAgent-Input:
      properties:
        value:
          minLength: 1
          title: Value
          type: string
        type:
          default: user_agent
          enum:
          - user_agent
          title: Type
          type: string
        created:
          format: date-time
          title: Created
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        last_analysis:
          additionalProperties:
            format: date-time
            type: string
          default: {}
          title: Last Analysis
      required:
      - value
      title: UserAgent
    UserAgent-Output:
      properties:
        value:
          minLength: 1
          title: Value
          type: string
        type:
          default: user_agent
          enum:
          - user_agent
          title: Type
          type: string
        created:
          format: date-time
          title: Created
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        last_analysis:
          additionalProperties:
            format: date-time
            type: string
          default: {}
          title: Last Analysis
        id:
          readOnly: true
          title: Id
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagRelationship-Output'
          readOnly: true
          title: Tags
        root_type:
          enum:
          - observable
          readOnly: true
          title: Root Type
          type: string
      required:
      - id
      - root_type
      - tags
      - value
      title: UserAgent
    ValidationError:
      example:
        msg: msg
        loc:
        - ValidationError_loc_inner
        - ValidationError_loc_inner
        type: type
      properties:
        loc:
          items:
            $ref: '#/components/schemas/ValidationError_loc_inner'
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
    Vulnerability-Input:
      description: |-
        This class represents a vulnerability in the schema.

        Attributes:
            title: title of the vulnerability.
            base_score : base score of the vulnerability obtained from CVSS metric
                         ranging from 0.0 to 10.0.
            severity: represents the severity of a vulnerability. One of none, low,
                      medium, high, critical.
      properties:
        type:
          default: vulnerability
          enum:
          - vulnerability
          title: Type
          type: string
        name:
          minLength: 1
          title: Name
          type: string
        description:
          default: ""
          title: Description
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        created:
          format: date-time
          title: Created
          type: string
        modified:
          format: date-time
          title: Modified
          type: string
        title:
          default: ""
          title: Title
          type: string
        base_score:
          default: 0.0
          maximum: 10.0
          minimum: 0.0
          title: Base Score
          type: number
        severity:
          $ref: '#/components/schemas/SeverityType'
        reference:
          default: ""
          title: Reference
          type: string
      required:
      - name
      title: Vulnerability
    Vulnerability-Output:
      description: |-
        This class represents a vulnerability in the schema.

        Attributes:
            title: title of the vulnerability.
            base_score : base score of the vulnerability obtained from CVSS metric
                         ranging from 0.0 to 10.0.
            severity: represents the severity of a vulnerability. One of none, low,
                      medium, high, critical.
      properties:
        type:
          default: vulnerability
          enum:
          - vulnerability
          title: Type
          type: string
        name:
          minLength: 1
          title: Name
          type: string
        description:
          default: ""
          title: Description
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        created:
          format: date-time
          title: Created
          type: string
        modified:
          format: date-time
          title: Modified
          type: string
        title:
          default: ""
          title: Title
          type: string
        base_score:
          default: 0.0
          maximum: 10.0
          minimum: 0.0
          title: Base Score
          type: number
        severity:
          $ref: '#/components/schemas/SeverityType'
        reference:
          default: ""
          title: Reference
          type: string
        id:
          readOnly: true
          title: Id
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagRelationship-Output'
          readOnly: true
          title: Tags
        root_type:
          enum:
          - entity
          readOnly: true
          title: Root Type
          type: string
        related_observables_count:
          readOnly: true
          title: Related Observables Count
          type: integer
      required:
      - id
      - name
      - related_observables_count
      - root_type
      - tags
      title: Vulnerability
    Wallet-Input:
      description: |-
        Represents a wallet observable.

        coin and address must be provided.
        Value should be in the form <COIN>:<ADDRESS>.
      properties:
        value:
          minLength: 1
          title: Value
          type: string
        type:
          default: wallet
          enum:
          - wallet
          title: Type
          type: string
        created:
          format: date-time
          title: Created
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        last_analysis:
          additionalProperties:
            format: date-time
            type: string
          default: {}
          title: Last Analysis
        coin:
          nullable: true
          type: string
        address:
          nullable: true
          type: string
      required:
      - value
      title: Wallet
    Wallet-Output:
      description: |-
        Represents a wallet observable.

        coin and address must be provided.
        Value should be in the form <COIN>:<ADDRESS>.
      properties:
        value:
          minLength: 1
          title: Value
          type: string
        type:
          default: wallet
          enum:
          - wallet
          title: Type
          type: string
        created:
          format: date-time
          title: Created
          type: string
        context:
          default: []
          items:
            type: object
          type: array
        last_analysis:
          additionalProperties:
            format: date-time
            type: string
          default: {}
          title: Last Analysis
        coin:
          nullable: true
          type: string
        address:
          nullable: true
          type: string
        id:
          readOnly: true
          title: Id
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagRelationship-Output'
          readOnly: true
          title: Tags
        root_type:
          enum:
          - observable
          readOnly: true
          title: Root Type
          type: string
      required:
      - id
      - root_type
      - tags
      - value
      title: Wallet
    WorkerRestartResponse:
      description: Worker restart API response.
      example:
        failures:
        - failures
        - failures
        successes:
        - successes
        - successes
      properties:
        successes:
          items:
            type: string
          type: array
          uniqueItems: true
        failures:
          items:
            type: string
          type: array
          uniqueItems: true
      required:
      - failures
      - successes
      title: WorkerRestartResponse
    WorkerStatusResponse:
      description: Worker status API response.
      example:
        registered:
          key:
          - registered
          - registered
        active:
        - - ""
          - ""
        - - ""
          - ""
      properties:
        registered:
          additionalProperties:
            items:
              type: string
          title: Registered
        active:
          items:
            items: {}
            maxItems: 2
            minItems: 2
            type: array
          type: array
      required:
      - active
      - registered
      title: WorkerStatusResponse
    Yara-Input:
      description: |-
        Represents a Yara rule.

        Parsing and matching is yet TODO.
      properties:
        name:
          title: Name
          type: string
        type:
          default: yara
          enum:
          - yara
          title: Type
          type: string
        description:
          default: ""
          title: Description
          type: string
        created:
          format: date-time
          title: Created
          type: string
        modified:
          format: date-time
          title: Modified
          type: string
        valid_from:
          format: date-time
          title: Valid From
          type: string
        valid_until:
          format: date-time
          title: Valid Until
          type: string
        pattern:
          minLength: 1
          title: Pattern
          type: string
        location:
          default: ""
          title: Location
          type: string
        diamond:
          $ref: '#/components/schemas/DiamondModel'
        kill_chain_phases:
          default: []
          items:
            type: string
          type: array
        relevant_tags:
          default: []
          items:
            type: string
          type: array
      required:
      - diamond
      - name
      - pattern
      title: Yara
    Yara-Output:
      description: |-
        Represents a Yara rule.

        Parsing and matching is yet TODO.
      properties:
        name:
          title: Name
          type: string
        type:
          default: yara
          enum:
          - yara
          title: Type
          type: string
        description:
          default: ""
          title: Description
          type: string
        created:
          format: date-time
          title: Created
          type: string
        modified:
          format: date-time
          title: Modified
          type: string
        valid_from:
          format: date-time
          title: Valid From
          type: string
        valid_until:
          format: date-time
          title: Valid Until
          type: string
        pattern:
          minLength: 1
          title: Pattern
          type: string
        location:
          default: ""
          title: Location
          type: string
        diamond:
          $ref: '#/components/schemas/DiamondModel'
        kill_chain_phases:
          default: []
          items:
            type: string
          type: array
        relevant_tags:
          default: []
          items:
            type: string
          type: array
        id:
          readOnly: true
          title: Id
          type: string
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagRelationship-Output'
          readOnly: true
          title: Tags
        root_type:
          enum:
          - indicator
          readOnly: true
          title: Root Type
          type: string
      required:
      - diamond
      - id
      - name
      - pattern
      - root_type
      - tags
      title: Yara
    Response_New_Api_V2_Observables__Post:
      anyOf:
      - $ref: '#/components/schemas/Url-Output'
      - $ref: '#/components/schemas/Imphash-Output'
      - $ref: '#/components/schemas/Certificate-Output'
      - $ref: '#/components/schemas/RegistryKey-Output'
      - $ref: '#/components/schemas/Ssdeep-Output'
      - $ref: '#/components/schemas/NamedPipe-Output'
      - $ref: '#/components/schemas/Email-Output'
      - $ref: '#/components/schemas/Mutex-Output'
      - $ref: '#/components/schemas/DockerImage-Output'
      - $ref: '#/components/schemas/UserAgent-Output'
      - $ref: '#/components/schemas/SHA256-Output'
      - $ref: '#/components/schemas/Path-Output'
      - $ref: '#/components/schemas/ASN-Output'
      - $ref: '#/components/schemas/TLSH-Output'
      - $ref: '#/components/schemas/MD5-Output'
      - $ref: '#/components/schemas/BIC-Output'
      - $ref: '#/components/schemas/IPv6-Output'
      - $ref: '#/components/schemas/CIDR-Output'
      - $ref: '#/components/schemas/Generic-Output'
      - $ref: '#/components/schemas/Hostname-Output'
      - $ref: '#/components/schemas/Package-Output'
      - $ref: '#/components/schemas/CommandLine-Output'
      - $ref: '#/components/schemas/File-Output'
      - $ref: '#/components/schemas/MacAddress-Output'
      - $ref: '#/components/schemas/JARM-Output'
      - $ref: '#/components/schemas/UserAccount-Output'
      - $ref: '#/components/schemas/IPv4-Output'
      - $ref: '#/components/schemas/JA3-Output'
      - $ref: '#/components/schemas/SHA1-Output'
      - $ref: '#/components/schemas/IBAN-Output'
      - $ref: '#/components/schemas/Wallet-Output'
      title: Response New Api V2 Observables  Post
    Response_New_Extended_Api_V2_Observables_Extended_Post:
      anyOf:
      - $ref: '#/components/schemas/Url-Output'
      - $ref: '#/components/schemas/Imphash-Output'
      - $ref: '#/components/schemas/Certificate-Output'
      - $ref: '#/components/schemas/RegistryKey-Output'
      - $ref: '#/components/schemas/Ssdeep-Output'
      - $ref: '#/components/schemas/NamedPipe-Output'
      - $ref: '#/components/schemas/Email-Output'
      - $ref: '#/components/schemas/Mutex-Output'
      - $ref: '#/components/schemas/DockerImage-Output'
      - $ref: '#/components/schemas/UserAgent-Output'
      - $ref: '#/components/schemas/SHA256-Output'
      - $ref: '#/components/schemas/Path-Output'
      - $ref: '#/components/schemas/ASN-Output'
      - $ref: '#/components/schemas/TLSH-Output'
      - $ref: '#/components/schemas/MD5-Output'
      - $ref: '#/components/schemas/BIC-Output'
      - $ref: '#/components/schemas/IPv6-Output'
      - $ref: '#/components/schemas/CIDR-Output'
      - $ref: '#/components/schemas/Generic-Output'
      - $ref: '#/components/schemas/Hostname-Output'
      - $ref: '#/components/schemas/Package-Output'
      - $ref: '#/components/schemas/CommandLine-Output'
      - $ref: '#/components/schemas/File-Output'
      - $ref: '#/components/schemas/MacAddress-Output'
      - $ref: '#/components/schemas/JARM-Output'
      - $ref: '#/components/schemas/UserAccount-Output'
      - $ref: '#/components/schemas/IPv4-Output'
      - $ref: '#/components/schemas/JA3-Output'
      - $ref: '#/components/schemas/SHA1-Output'
      - $ref: '#/components/schemas/IBAN-Output'
      - $ref: '#/components/schemas/Wallet-Output'
      title: Response New Extended Api V2 Observables Extended Post
    Response_Details_Api_V2_Observables__Observable_Id__Get:
      anyOf:
      - $ref: '#/components/schemas/Url-Output'
      - $ref: '#/components/schemas/Imphash-Output'
      - $ref: '#/components/schemas/Certificate-Output'
      - $ref: '#/components/schemas/RegistryKey-Output'
      - $ref: '#/components/schemas/Ssdeep-Output'
      - $ref: '#/components/schemas/NamedPipe-Output'
      - $ref: '#/components/schemas/Email-Output'
      - $ref: '#/components/schemas/Mutex-Output'
      - $ref: '#/components/schemas/DockerImage-Output'
      - $ref: '#/components/schemas/UserAgent-Output'
      - $ref: '#/components/schemas/SHA256-Output'
      - $ref: '#/components/schemas/Path-Output'
      - $ref: '#/components/schemas/ASN-Output'
      - $ref: '#/components/schemas/TLSH-Output'
      - $ref: '#/components/schemas/MD5-Output'
      - $ref: '#/components/schemas/BIC-Output'
      - $ref: '#/components/schemas/IPv6-Output'
      - $ref: '#/components/schemas/CIDR-Output'
      - $ref: '#/components/schemas/Generic-Output'
      - $ref: '#/components/schemas/Hostname-Output'
      - $ref: '#/components/schemas/Package-Output'
      - $ref: '#/components/schemas/CommandLine-Output'
      - $ref: '#/components/schemas/File-Output'
      - $ref: '#/components/schemas/MacAddress-Output'
      - $ref: '#/components/schemas/JARM-Output'
      - $ref: '#/components/schemas/UserAccount-Output'
      - $ref: '#/components/schemas/IPv4-Output'
      - $ref: '#/components/schemas/JA3-Output'
      - $ref: '#/components/schemas/SHA1-Output'
      - $ref: '#/components/schemas/IBAN-Output'
      - $ref: '#/components/schemas/Wallet-Output'
      title: Response Details Api V2 Observables  Observable Id  Get
    Response_Patch_Api_V2_Observables__Observable_Id__Patch:
      anyOf:
      - $ref: '#/components/schemas/Url-Output'
      - $ref: '#/components/schemas/Imphash-Output'
      - $ref: '#/components/schemas/Certificate-Output'
      - $ref: '#/components/schemas/RegistryKey-Output'
      - $ref: '#/components/schemas/Ssdeep-Output'
      - $ref: '#/components/schemas/NamedPipe-Output'
      - $ref: '#/components/schemas/Email-Output'
      - $ref: '#/components/schemas/Mutex-Output'
      - $ref: '#/components/schemas/DockerImage-Output'
      - $ref: '#/components/schemas/UserAgent-Output'
      - $ref: '#/components/schemas/SHA256-Output'
      - $ref: '#/components/schemas/Path-Output'
      - $ref: '#/components/schemas/ASN-Output'
      - $ref: '#/components/schemas/TLSH-Output'
      - $ref: '#/components/schemas/MD5-Output'
      - $ref: '#/components/schemas/BIC-Output'
      - $ref: '#/components/schemas/IPv6-Output'
      - $ref: '#/components/schemas/CIDR-Output'
      - $ref: '#/components/schemas/Generic-Output'
      - $ref: '#/components/schemas/Hostname-Output'
      - $ref: '#/components/schemas/Package-Output'
      - $ref: '#/components/schemas/CommandLine-Output'
      - $ref: '#/components/schemas/File-Output'
      - $ref: '#/components/schemas/MacAddress-Output'
      - $ref: '#/components/schemas/JARM-Output'
      - $ref: '#/components/schemas/UserAccount-Output'
      - $ref: '#/components/schemas/IPv4-Output'
      - $ref: '#/components/schemas/JA3-Output'
      - $ref: '#/components/schemas/SHA1-Output'
      - $ref: '#/components/schemas/IBAN-Output'
      - $ref: '#/components/schemas/Wallet-Output'
      title: Response Patch Api V2 Observables  Observable Id  Patch
    Response_Add_Context_Api_V2_Observables__Observable_Id__Context_Post:
      anyOf:
      - $ref: '#/components/schemas/Url-Output'
      - $ref: '#/components/schemas/Imphash-Output'
      - $ref: '#/components/schemas/Certificate-Output'
      - $ref: '#/components/schemas/RegistryKey-Output'
      - $ref: '#/components/schemas/Ssdeep-Output'
      - $ref: '#/components/schemas/NamedPipe-Output'
      - $ref: '#/components/schemas/Email-Output'
      - $ref: '#/components/schemas/Mutex-Output'
      - $ref: '#/components/schemas/DockerImage-Output'
      - $ref: '#/components/schemas/UserAgent-Output'
      - $ref: '#/components/schemas/SHA256-Output'
      - $ref: '#/components/schemas/Path-Output'
      - $ref: '#/components/schemas/ASN-Output'
      - $ref: '#/components/schemas/TLSH-Output'
      - $ref: '#/components/schemas/MD5-Output'
      - $ref: '#/components/schemas/BIC-Output'
      - $ref: '#/components/schemas/IPv6-Output'
      - $ref: '#/components/schemas/CIDR-Output'
      - $ref: '#/components/schemas/Generic-Output'
      - $ref: '#/components/schemas/Hostname-Output'
      - $ref: '#/components/schemas/Package-Output'
      - $ref: '#/components/schemas/CommandLine-Output'
      - $ref: '#/components/schemas/File-Output'
      - $ref: '#/components/schemas/MacAddress-Output'
      - $ref: '#/components/schemas/JARM-Output'
      - $ref: '#/components/schemas/UserAccount-Output'
      - $ref: '#/components/schemas/IPv4-Output'
      - $ref: '#/components/schemas/JA3-Output'
      - $ref: '#/components/schemas/SHA1-Output'
      - $ref: '#/components/schemas/IBAN-Output'
      - $ref: '#/components/schemas/Wallet-Output'
      title: Response Add Context Api V2 Observables  Observable Id  Context Post
    Response_Delete_Context_Api_V2_Observables__Observable_Id__Context_Delete_Post:
      anyOf:
      - $ref: '#/components/schemas/Url-Output'
      - $ref: '#/components/schemas/Imphash-Output'
      - $ref: '#/components/schemas/Certificate-Output'
      - $ref: '#/components/schemas/RegistryKey-Output'
      - $ref: '#/components/schemas/Ssdeep-Output'
      - $ref: '#/components/schemas/NamedPipe-Output'
      - $ref: '#/components/schemas/Email-Output'
      - $ref: '#/components/schemas/Mutex-Output'
      - $ref: '#/components/schemas/DockerImage-Output'
      - $ref: '#/components/schemas/UserAgent-Output'
      - $ref: '#/components/schemas/SHA256-Output'
      - $ref: '#/components/schemas/Path-Output'
      - $ref: '#/components/schemas/ASN-Output'
      - $ref: '#/components/schemas/TLSH-Output'
      - $ref: '#/components/schemas/MD5-Output'
      - $ref: '#/components/schemas/BIC-Output'
      - $ref: '#/components/schemas/IPv6-Output'
      - $ref: '#/components/schemas/CIDR-Output'
      - $ref: '#/components/schemas/Generic-Output'
      - $ref: '#/components/schemas/Hostname-Output'
      - $ref: '#/components/schemas/Package-Output'
      - $ref: '#/components/schemas/CommandLine-Output'
      - $ref: '#/components/schemas/File-Output'
      - $ref: '#/components/schemas/MacAddress-Output'
      - $ref: '#/components/schemas/JARM-Output'
      - $ref: '#/components/schemas/UserAccount-Output'
      - $ref: '#/components/schemas/IPv4-Output'
      - $ref: '#/components/schemas/JA3-Output'
      - $ref: '#/components/schemas/SHA1-Output'
      - $ref: '#/components/schemas/IBAN-Output'
      - $ref: '#/components/schemas/Wallet-Output'
      title: Response Delete Context Api V2 Observables  Observable Id  Context Delete
        Post
    Response_Add_Text_Api_V2_Observables_Add_Text_Post:
      anyOf:
      - $ref: '#/components/schemas/Url-Output'
      - $ref: '#/components/schemas/Imphash-Output'
      - $ref: '#/components/schemas/Certificate-Output'
      - $ref: '#/components/schemas/RegistryKey-Output'
      - $ref: '#/components/schemas/Ssdeep-Output'
      - $ref: '#/components/schemas/NamedPipe-Output'
      - $ref: '#/components/schemas/Email-Output'
      - $ref: '#/components/schemas/Mutex-Output'
      - $ref: '#/components/schemas/DockerImage-Output'
      - $ref: '#/components/schemas/UserAgent-Output'
      - $ref: '#/components/schemas/SHA256-Output'
      - $ref: '#/components/schemas/Path-Output'
      - $ref: '#/components/schemas/ASN-Output'
      - $ref: '#/components/schemas/TLSH-Output'
      - $ref: '#/components/schemas/MD5-Output'
      - $ref: '#/components/schemas/BIC-Output'
      - $ref: '#/components/schemas/IPv6-Output'
      - $ref: '#/components/schemas/CIDR-Output'
      - $ref: '#/components/schemas/Generic-Output'
      - $ref: '#/components/schemas/Hostname-Output'
      - $ref: '#/components/schemas/Package-Output'
      - $ref: '#/components/schemas/CommandLine-Output'
      - $ref: '#/components/schemas/File-Output'
      - $ref: '#/components/schemas/MacAddress-Output'
      - $ref: '#/components/schemas/JARM-Output'
      - $ref: '#/components/schemas/UserAccount-Output'
      - $ref: '#/components/schemas/IPv4-Output'
      - $ref: '#/components/schemas/JA3-Output'
      - $ref: '#/components/schemas/SHA1-Output'
      - $ref: '#/components/schemas/IBAN-Output'
      - $ref: '#/components/schemas/Wallet-Output'
      title: Response Add Text Api V2 Observables Add Text Post
    Response_New_Api_V2_Entities__Post:
      anyOf:
      - $ref: '#/components/schemas/Tool-Output'
      - $ref: '#/components/schemas/Vulnerability-Output'
      - $ref: '#/components/schemas/Malware-Output'
      - $ref: '#/components/schemas/IntrusionSet-Output'
      - $ref: '#/components/schemas/Investigation-Output'
      - $ref: '#/components/schemas/ThreatActor-Output'
      - $ref: '#/components/schemas/Identity-Output'
      - $ref: '#/components/schemas/AttackPattern-Output'
      - $ref: '#/components/schemas/Company-Output'
      - $ref: '#/components/schemas/Phone-Output'
      - $ref: '#/components/schemas/Campaign-Output'
      - $ref: '#/components/schemas/CourseOfAction-Output'
      - $ref: '#/components/schemas/Note-Output'
      title: Response New Api V2 Entities  Post
    Response_Details_Api_V2_Entities__Entity_Id__Get:
      anyOf:
      - $ref: '#/components/schemas/Tool-Output'
      - $ref: '#/components/schemas/Vulnerability-Output'
      - $ref: '#/components/schemas/Malware-Output'
      - $ref: '#/components/schemas/IntrusionSet-Output'
      - $ref: '#/components/schemas/Investigation-Output'
      - $ref: '#/components/schemas/ThreatActor-Output'
      - $ref: '#/components/schemas/Identity-Output'
      - $ref: '#/components/schemas/AttackPattern-Output'
      - $ref: '#/components/schemas/Company-Output'
      - $ref: '#/components/schemas/Phone-Output'
      - $ref: '#/components/schemas/Campaign-Output'
      - $ref: '#/components/schemas/CourseOfAction-Output'
      - $ref: '#/components/schemas/Note-Output'
      title: Response Details Api V2 Entities  Entity Id  Get
    Response_Patch_Api_V2_Entities__Entity_Id__Patch:
      anyOf:
      - $ref: '#/components/schemas/Tool-Output'
      - $ref: '#/components/schemas/Vulnerability-Output'
      - $ref: '#/components/schemas/Malware-Output'
      - $ref: '#/components/schemas/IntrusionSet-Output'
      - $ref: '#/components/schemas/Investigation-Output'
      - $ref: '#/components/schemas/ThreatActor-Output'
      - $ref: '#/components/schemas/Identity-Output'
      - $ref: '#/components/schemas/AttackPattern-Output'
      - $ref: '#/components/schemas/Company-Output'
      - $ref: '#/components/schemas/Phone-Output'
      - $ref: '#/components/schemas/Campaign-Output'
      - $ref: '#/components/schemas/CourseOfAction-Output'
      - $ref: '#/components/schemas/Note-Output'
      title: Response Patch Api V2 Entities  Entity Id  Patch
    Response_New_Api_V2_Indicators__Post:
      anyOf:
      - $ref: '#/components/schemas/Suricata-Output'
      - $ref: '#/components/schemas/Yara-Output'
      - $ref: '#/components/schemas/ForensicArtifact-Output'
      - $ref: '#/components/schemas/Regex-Output'
      - $ref: '#/components/schemas/Query-Output'
      - $ref: '#/components/schemas/Sigma-Output'
      title: Response New Api V2 Indicators  Post
    Response_Details_Api_V2_Indicators__Indicator_Id__Get:
      anyOf:
      - $ref: '#/components/schemas/Suricata-Output'
      - $ref: '#/components/schemas/Yara-Output'
      - $ref: '#/components/schemas/ForensicArtifact-Output'
      - $ref: '#/components/schemas/Regex-Output'
      - $ref: '#/components/schemas/Query-Output'
      - $ref: '#/components/schemas/Sigma-Output'
      title: Response Details Api V2 Indicators  Indicator Id  Get
    Response_Patch_Api_V2_Indicators__Indicator_Id__Patch:
      anyOf:
      - $ref: '#/components/schemas/Suricata-Output'
      - $ref: '#/components/schemas/Yara-Output'
      - $ref: '#/components/schemas/ForensicArtifact-Output'
      - $ref: '#/components/schemas/Regex-Output'
      - $ref: '#/components/schemas/Query-Output'
      - $ref: '#/components/schemas/Sigma-Output'
      title: Response Patch Api V2 Indicators  Indicator Id  Patch
    Response_New_From_Yaml_Api_V2_Dfiq_From_Yaml_Post:
      discriminator:
        mapping:
          scenario: '#/components/schemas/DFIQScenario'
          facet: '#/components/schemas/DFIQFacet'
          question: '#/components/schemas/DFIQQuestion'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/DFIQScenario'
      - $ref: '#/components/schemas/DFIQFacet'
      - $ref: '#/components/schemas/DFIQQuestion'
      title: Response New From Yaml Api V2 Dfiq From Yaml Post
    Response_Details_Api_V2_Dfiq__Dfiq_Id__Get:
      discriminator:
        mapping:
          scenario: '#/components/schemas/DFIQScenario'
          facet: '#/components/schemas/DFIQFacet'
          question: '#/components/schemas/DFIQQuestion'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/DFIQScenario'
      - $ref: '#/components/schemas/DFIQFacet'
      - $ref: '#/components/schemas/DFIQQuestion'
      title: Response Details Api V2 Dfiq  Dfiq Id  Get
    Response_Patch_Api_V2_Dfiq__Dfiq_Id__Patch:
      discriminator:
        mapping:
          scenario: '#/components/schemas/DFIQScenario'
          facet: '#/components/schemas/DFIQFacet'
          question: '#/components/schemas/DFIQQuestion'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/DFIQScenario'
      - $ref: '#/components/schemas/DFIQFacet'
      - $ref: '#/components/schemas/DFIQQuestion'
      title: Response Patch Api V2 Dfiq  Dfiq Id  Patch
    Response_Toggle_Api_V2_Tasks__Task_Name__Toggle_Post:
      anyOf:
      - $ref: '#/components/schemas/FeedTask'
      - $ref: '#/components/schemas/AnalyticsTask'
      - $ref: '#/components/schemas/OneShotTask'
      - $ref: '#/components/schemas/ExportTask-Output'
      title: Response Toggle Api V2 Tasks  Task Name  Toggle Post
    Added_inner:
      anyOf:
      - $ref: '#/components/schemas/CIDR-Output'
      - $ref: '#/components/schemas/Hostname-Output'
      - $ref: '#/components/schemas/MacAddress-Output'
      - $ref: '#/components/schemas/Certificate-Output'
      - $ref: '#/components/schemas/IPv6-Output'
      - $ref: '#/components/schemas/UserAccount-Output'
      - $ref: '#/components/schemas/Ssdeep-Output'
      - $ref: '#/components/schemas/BIC-Output'
      - $ref: '#/components/schemas/Package-Output'
      - $ref: '#/components/schemas/SHA256-Output'
      - $ref: '#/components/schemas/DockerImage-Output'
      - $ref: '#/components/schemas/Email-Output'
      - $ref: '#/components/schemas/JARM-Output'
      - $ref: '#/components/schemas/File-Output'
      - $ref: '#/components/schemas/Mutex-Output'
      - $ref: '#/components/schemas/IBAN-Output'
      - $ref: '#/components/schemas/CommandLine-Output'
      - $ref: '#/components/schemas/Url-Output'
      - $ref: '#/components/schemas/RegistryKey-Output'
      - $ref: '#/components/schemas/Path-Output'
      - $ref: '#/components/schemas/IPv4-Output'
      - $ref: '#/components/schemas/TLSH-Output'
      - $ref: '#/components/schemas/Generic-Output'
      - $ref: '#/components/schemas/SHA1-Output'
      - $ref: '#/components/schemas/UserAgent-Output'
      - $ref: '#/components/schemas/Wallet-Output'
      - $ref: '#/components/schemas/MD5-Output'
      - $ref: '#/components/schemas/Imphash-Output'
      - $ref: '#/components/schemas/ASN-Output'
      - $ref: '#/components/schemas/NamedPipe-Output'
      - $ref: '#/components/schemas/JA3-Output'
    Query_value:
      anyOf:
      - {}
      - {}
      - items: {}
    DFIQSearchRequest_type:
      anyOf:
      - $ref: '#/components/schemas/DFIQType'
      - {}
    Dfiq_inner:
      discriminator:
        mapping:
          facet: '#/components/schemas/DFIQFacet'
          question: '#/components/schemas/DFIQQuestion'
          scenario: '#/components/schemas/DFIQScenario'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/DFIQScenario'
      - $ref: '#/components/schemas/DFIQFacet'
      - $ref: '#/components/schemas/DFIQQuestion'
    Error:
      anyOf:
      - {}
      - items: {}
      default: ""
      title: Error
    EntitySearchRequest_type:
      anyOf:
      - $ref: '#/components/schemas/EntityType'
      - {}
    Entities_inner:
      anyOf:
      - $ref: '#/components/schemas/Investigation-Output'
      - $ref: '#/components/schemas/CourseOfAction-Output'
      - $ref: '#/components/schemas/Identity-Output'
      - $ref: '#/components/schemas/IntrusionSet-Output'
      - $ref: '#/components/schemas/Tool-Output'
      - $ref: '#/components/schemas/ThreatActor-Output'
      - $ref: '#/components/schemas/Campaign-Output'
      - $ref: '#/components/schemas/Company-Output'
      - $ref: '#/components/schemas/Malware-Output'
      - $ref: '#/components/schemas/Phone-Output'
      - $ref: '#/components/schemas/Note-Output'
      - $ref: '#/components/schemas/AttackPattern-Output'
      - $ref: '#/components/schemas/Vulnerability-Output'
    Hops:
      anyOf:
      - {}
      - {}
      title: Hops
    Min_Hops:
      anyOf:
      - {}
      - {}
      title: Min Hops
    Max_Hops:
      anyOf:
      - {}
      - {}
      title: Max Hops
    Vertices_value:
      anyOf:
      - $ref: '#/components/schemas/Observable'
      - $ref: '#/components/schemas/Investigation-Output'
      - $ref: '#/components/schemas/CourseOfAction-Output'
      - $ref: '#/components/schemas/Identity-Output'
      - $ref: '#/components/schemas/IntrusionSet-Output'
      - $ref: '#/components/schemas/Tool-Output'
      - $ref: '#/components/schemas/ThreatActor-Output'
      - $ref: '#/components/schemas/Campaign-Output'
      - $ref: '#/components/schemas/Company-Output'
      - $ref: '#/components/schemas/Malware-Output'
      - $ref: '#/components/schemas/Phone-Output'
      - $ref: '#/components/schemas/Note-Output'
      - $ref: '#/components/schemas/AttackPattern-Output'
      - $ref: '#/components/schemas/Vulnerability-Output'
      - $ref: '#/components/schemas/Query-Output'
      - $ref: '#/components/schemas/Sigma-Output'
      - $ref: '#/components/schemas/Regex-Output'
      - $ref: '#/components/schemas/ForensicArtifact-Output'
      - $ref: '#/components/schemas/Suricata-Output'
      - $ref: '#/components/schemas/Yara-Output'
      - $ref: '#/components/schemas/Tag'
      - $ref: '#/components/schemas/Dfiq_inner'
    Paths_inner_inner:
      anyOf:
      - $ref: '#/components/schemas/Relationship'
      - $ref: '#/components/schemas/TagRelationship-Output'
    IndicatorSearchRequest_type:
      anyOf:
      - $ref: '#/components/schemas/IndicatorType'
      - {}
    Indicators_inner:
      anyOf:
      - $ref: '#/components/schemas/Query-Output'
      - $ref: '#/components/schemas/Sigma-Output'
      - $ref: '#/components/schemas/Regex-Output'
      - $ref: '#/components/schemas/ForensicArtifact-Output'
      - $ref: '#/components/schemas/Suricata-Output'
      - $ref: '#/components/schemas/Yara-Output'
    Entity_1:
      discriminator:
        mapping:
          attack-pattern: '#/components/schemas/AttackPattern-Input'
          campaign: '#/components/schemas/Campaign-Input'
          company: '#/components/schemas/Company-Input'
          course-of-action: '#/components/schemas/CourseOfAction-Input'
          identity: '#/components/schemas/Identity-Input'
          intrusion-set: '#/components/schemas/IntrusionSet-Input'
          investigation: '#/components/schemas/Investigation-Input'
          malware: '#/components/schemas/Malware-Input'
          note: '#/components/schemas/Note-Input'
          phone: '#/components/schemas/Phone-Input'
          threat-actor: '#/components/schemas/ThreatActor-Input'
          tool: '#/components/schemas/Tool-Input'
          vulnerability: '#/components/schemas/Vulnerability-Input'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/Investigation-Input'
      - $ref: '#/components/schemas/CourseOfAction-Input'
      - $ref: '#/components/schemas/Identity-Input'
      - $ref: '#/components/schemas/IntrusionSet-Input'
      - $ref: '#/components/schemas/Tool-Input'
      - $ref: '#/components/schemas/ThreatActor-Input'
      - $ref: '#/components/schemas/Campaign-Input'
      - $ref: '#/components/schemas/Company-Input'
      - $ref: '#/components/schemas/Malware-Input'
      - $ref: '#/components/schemas/Phone-Input'
      - $ref: '#/components/schemas/Note-Input'
      - $ref: '#/components/schemas/AttackPattern-Input'
      - $ref: '#/components/schemas/Vulnerability-Input'
      title: Entity
    Observable_1:
      anyOf:
      - $ref: '#/components/schemas/CIDR-Input'
      - $ref: '#/components/schemas/Hostname-Input'
      - $ref: '#/components/schemas/MacAddress-Input'
      - $ref: '#/components/schemas/Certificate-Input'
      - $ref: '#/components/schemas/IPv6-Input'
      - $ref: '#/components/schemas/UserAccount-Input'
      - $ref: '#/components/schemas/Ssdeep-Input'
      - $ref: '#/components/schemas/BIC-Input'
      - $ref: '#/components/schemas/Package-Input'
      - $ref: '#/components/schemas/SHA256-Input'
      - $ref: '#/components/schemas/DockerImage-Input'
      - $ref: '#/components/schemas/Email-Input'
      - $ref: '#/components/schemas/JARM-Input'
      - $ref: '#/components/schemas/File-Input'
      - $ref: '#/components/schemas/Mutex-Input'
      - $ref: '#/components/schemas/IBAN-Input'
      - $ref: '#/components/schemas/CommandLine-Input'
      - $ref: '#/components/schemas/Url-Input'
      - $ref: '#/components/schemas/RegistryKey-Input'
      - $ref: '#/components/schemas/Path-Input'
      - $ref: '#/components/schemas/IPv4-Input'
      - $ref: '#/components/schemas/TLSH-Input'
      - $ref: '#/components/schemas/Generic-Input'
      - $ref: '#/components/schemas/SHA1-Input'
      - $ref: '#/components/schemas/UserAgent-Input'
      - $ref: '#/components/schemas/Wallet-Input'
      - $ref: '#/components/schemas/MD5-Input'
      - $ref: '#/components/schemas/Imphash-Input'
      - $ref: '#/components/schemas/ASN-Input'
      - $ref: '#/components/schemas/NamedPipe-Input'
      - $ref: '#/components/schemas/JA3-Input'
      title: Observable
      discriminant: type
    Indicator_1:
      discriminator:
        mapping:
          forensicartifact: '#/components/schemas/ForensicArtifact-Input'
          query: '#/components/schemas/Query-Input'
          regex: '#/components/schemas/Regex-Input'
          sigma: '#/components/schemas/Sigma-Input'
          suricata: '#/components/schemas/Suricata-Input'
          yara: '#/components/schemas/Yara-Input'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/Query-Input'
      - $ref: '#/components/schemas/Sigma-Input'
      - $ref: '#/components/schemas/Regex-Input'
      - $ref: '#/components/schemas/ForensicArtifact-Input'
      - $ref: '#/components/schemas/Suricata-Input'
      - $ref: '#/components/schemas/Yara-Input'
      title: Indicator
    ObservableSearchRequest_type:
      anyOf:
      - $ref: '#/components/schemas/ObservableType-Input'
      - {}
    Search_Query:
      anyOf:
      - {}
      - {}
      title: Search Query
    Name:
      anyOf:
      - {}
      - {}
      title: Name
    TaskSearchRequest_type:
      anyOf:
      - $ref: '#/components/schemas/TaskType'
      - {}
    Tasks_inner:
      anyOf:
      - $ref: '#/components/schemas/FeedTask'
      - $ref: '#/components/schemas/AnalyticsTask'
      - $ref: '#/components/schemas/OneShotTask'
      - $ref: '#/components/schemas/ExportTask-Output'
    ValidationError_loc_inner:
      anyOf:
      - type: string
      - type: integer
  securitySchemes:
    APIKeyHeader:
      in: header
      name: x-yeti-apikey
      type: apiKey
    OAuth2PasswordBearer:
      flows:
        password:
          scopes: {}
          tokenUrl: api/v2/auth/token
      type: oauth2
    APIKeyCookie:
      in: cookie
      name: yeti_session
      type: apiKey
