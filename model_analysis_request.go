/*
FastAPI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package goyeti

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the AnalysisRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AnalysisRequest{}

// AnalysisRequest struct for AnalysisRequest
type AnalysisRequest struct {
	Observables    []string                    `json:"observables"`
	AddTags        []string                    `json:"add_tags,omitempty"`
	RegexMatch     *bool                       `json:"regex_match,omitempty"`
	AddType        NullableObservableTypeInput `json:"add_type,omitempty"`
	FetchNeighbors *bool                       `json:"fetch_neighbors,omitempty"`
	AddUnknown     *bool                       `json:"add_unknown,omitempty"`
}

type _AnalysisRequest AnalysisRequest

// NewAnalysisRequest instantiates a new AnalysisRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAnalysisRequest(observables []string) *AnalysisRequest {
	this := AnalysisRequest{}
	this.Observables = observables
	var regexMatch bool = false
	this.RegexMatch = &regexMatch
	var fetchNeighbors bool = true
	this.FetchNeighbors = &fetchNeighbors
	var addUnknown bool = false
	this.AddUnknown = &addUnknown
	return &this
}

// NewAnalysisRequestWithDefaults instantiates a new AnalysisRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAnalysisRequestWithDefaults() *AnalysisRequest {
	this := AnalysisRequest{}
	var regexMatch bool = false
	this.RegexMatch = &regexMatch
	var fetchNeighbors bool = true
	this.FetchNeighbors = &fetchNeighbors
	var addUnknown bool = false
	this.AddUnknown = &addUnknown
	return &this
}

// GetObservables returns the Observables field value
func (o *AnalysisRequest) GetObservables() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Observables
}

// GetObservablesOk returns a tuple with the Observables field value
// and a boolean to check if the value has been set.
func (o *AnalysisRequest) GetObservablesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Observables, true
}

// SetObservables sets field value
func (o *AnalysisRequest) SetObservables(v []string) {
	o.Observables = v
}

// GetAddTags returns the AddTags field value if set, zero value otherwise.
func (o *AnalysisRequest) GetAddTags() []string {
	if o == nil || IsNil(o.AddTags) {
		var ret []string
		return ret
	}
	return o.AddTags
}

// GetAddTagsOk returns a tuple with the AddTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnalysisRequest) GetAddTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.AddTags) {
		return nil, false
	}
	return o.AddTags, true
}

// HasAddTags returns a boolean if a field has been set.
func (o *AnalysisRequest) HasAddTags() bool {
	if o != nil && !IsNil(o.AddTags) {
		return true
	}

	return false
}

// SetAddTags gets a reference to the given []string and assigns it to the AddTags field.
func (o *AnalysisRequest) SetAddTags(v []string) {
	o.AddTags = v
}

// GetRegexMatch returns the RegexMatch field value if set, zero value otherwise.
func (o *AnalysisRequest) GetRegexMatch() bool {
	if o == nil || IsNil(o.RegexMatch) {
		var ret bool
		return ret
	}
	return *o.RegexMatch
}

// GetRegexMatchOk returns a tuple with the RegexMatch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnalysisRequest) GetRegexMatchOk() (*bool, bool) {
	if o == nil || IsNil(o.RegexMatch) {
		return nil, false
	}
	return o.RegexMatch, true
}

// HasRegexMatch returns a boolean if a field has been set.
func (o *AnalysisRequest) HasRegexMatch() bool {
	if o != nil && !IsNil(o.RegexMatch) {
		return true
	}

	return false
}

// SetRegexMatch gets a reference to the given bool and assigns it to the RegexMatch field.
func (o *AnalysisRequest) SetRegexMatch(v bool) {
	o.RegexMatch = &v
}

// GetAddType returns the AddType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AnalysisRequest) GetAddType() ObservableTypeInput {
	if o == nil || IsNil(o.AddType.Get()) {
		var ret ObservableTypeInput
		return ret
	}
	return *o.AddType.Get()
}

// GetAddTypeOk returns a tuple with the AddType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AnalysisRequest) GetAddTypeOk() (*ObservableTypeInput, bool) {
	if o == nil {
		return nil, false
	}
	return o.AddType.Get(), o.AddType.IsSet()
}

// HasAddType returns a boolean if a field has been set.
func (o *AnalysisRequest) HasAddType() bool {
	if o != nil && o.AddType.IsSet() {
		return true
	}

	return false
}

// SetAddType gets a reference to the given NullableObservableTypeInput and assigns it to the AddType field.
func (o *AnalysisRequest) SetAddType(v ObservableTypeInput) {
	o.AddType.Set(&v)
}

// SetAddTypeNil sets the value for AddType to be an explicit nil
func (o *AnalysisRequest) SetAddTypeNil() {
	o.AddType.Set(nil)
}

// UnsetAddType ensures that no value is present for AddType, not even an explicit nil
func (o *AnalysisRequest) UnsetAddType() {
	o.AddType.Unset()
}

// GetFetchNeighbors returns the FetchNeighbors field value if set, zero value otherwise.
func (o *AnalysisRequest) GetFetchNeighbors() bool {
	if o == nil || IsNil(o.FetchNeighbors) {
		var ret bool
		return ret
	}
	return *o.FetchNeighbors
}

// GetFetchNeighborsOk returns a tuple with the FetchNeighbors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnalysisRequest) GetFetchNeighborsOk() (*bool, bool) {
	if o == nil || IsNil(o.FetchNeighbors) {
		return nil, false
	}
	return o.FetchNeighbors, true
}

// HasFetchNeighbors returns a boolean if a field has been set.
func (o *AnalysisRequest) HasFetchNeighbors() bool {
	if o != nil && !IsNil(o.FetchNeighbors) {
		return true
	}

	return false
}

// SetFetchNeighbors gets a reference to the given bool and assigns it to the FetchNeighbors field.
func (o *AnalysisRequest) SetFetchNeighbors(v bool) {
	o.FetchNeighbors = &v
}

// GetAddUnknown returns the AddUnknown field value if set, zero value otherwise.
func (o *AnalysisRequest) GetAddUnknown() bool {
	if o == nil || IsNil(o.AddUnknown) {
		var ret bool
		return ret
	}
	return *o.AddUnknown
}

// GetAddUnknownOk returns a tuple with the AddUnknown field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnalysisRequest) GetAddUnknownOk() (*bool, bool) {
	if o == nil || IsNil(o.AddUnknown) {
		return nil, false
	}
	return o.AddUnknown, true
}

// HasAddUnknown returns a boolean if a field has been set.
func (o *AnalysisRequest) HasAddUnknown() bool {
	if o != nil && !IsNil(o.AddUnknown) {
		return true
	}

	return false
}

// SetAddUnknown gets a reference to the given bool and assigns it to the AddUnknown field.
func (o *AnalysisRequest) SetAddUnknown(v bool) {
	o.AddUnknown = &v
}

func (o AnalysisRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AnalysisRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["observables"] = o.Observables
	if !IsNil(o.AddTags) {
		toSerialize["add_tags"] = o.AddTags
	}
	if !IsNil(o.RegexMatch) {
		toSerialize["regex_match"] = o.RegexMatch
	}
	if o.AddType.IsSet() {
		toSerialize["add_type"] = o.AddType.Get()
	}
	if !IsNil(o.FetchNeighbors) {
		toSerialize["fetch_neighbors"] = o.FetchNeighbors
	}
	if !IsNil(o.AddUnknown) {
		toSerialize["add_unknown"] = o.AddUnknown
	}
	return toSerialize, nil
}

func (o *AnalysisRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"observables",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAnalysisRequest := _AnalysisRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAnalysisRequest)

	if err != nil {
		return err
	}

	*o = AnalysisRequest(varAnalysisRequest)

	return err
}

type NullableAnalysisRequest struct {
	value *AnalysisRequest
	isSet bool
}

func (v NullableAnalysisRequest) Get() *AnalysisRequest {
	return v.value
}

func (v *NullableAnalysisRequest) Set(val *AnalysisRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAnalysisRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAnalysisRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAnalysisRequest(val *AnalysisRequest) *NullableAnalysisRequest {
	return &NullableAnalysisRequest{value: val, isSet: true}
}

func (v NullableAnalysisRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAnalysisRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
