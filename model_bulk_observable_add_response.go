/*
FastAPI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package goyeti

import (
	"encoding/json"
)

// checks if the BulkObservableAddResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BulkObservableAddResponse{}

// BulkObservableAddResponse struct for BulkObservableAddResponse
type BulkObservableAddResponse struct {
	Added                []AddedInner `json:"added,omitempty"`
	Failed               []string     `json:"failed,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _BulkObservableAddResponse BulkObservableAddResponse

// NewBulkObservableAddResponse instantiates a new BulkObservableAddResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBulkObservableAddResponse() *BulkObservableAddResponse {
	this := BulkObservableAddResponse{}
	return &this
}

// NewBulkObservableAddResponseWithDefaults instantiates a new BulkObservableAddResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBulkObservableAddResponseWithDefaults() *BulkObservableAddResponse {
	this := BulkObservableAddResponse{}
	return &this
}

// GetAdded returns the Added field value if set, zero value otherwise.
func (o *BulkObservableAddResponse) GetAdded() []AddedInner {
	if o == nil || IsNil(o.Added) {
		var ret []AddedInner
		return ret
	}
	return o.Added
}

// GetAddedOk returns a tuple with the Added field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkObservableAddResponse) GetAddedOk() ([]AddedInner, bool) {
	if o == nil || IsNil(o.Added) {
		return nil, false
	}
	return o.Added, true
}

// HasAdded returns a boolean if a field has been set.
func (o *BulkObservableAddResponse) HasAdded() bool {
	if o != nil && !IsNil(o.Added) {
		return true
	}

	return false
}

// SetAdded gets a reference to the given []AddedInner and assigns it to the Added field.
func (o *BulkObservableAddResponse) SetAdded(v []AddedInner) {
	o.Added = v
}

// GetFailed returns the Failed field value if set, zero value otherwise.
func (o *BulkObservableAddResponse) GetFailed() []string {
	if o == nil || IsNil(o.Failed) {
		var ret []string
		return ret
	}
	return o.Failed
}

// GetFailedOk returns a tuple with the Failed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkObservableAddResponse) GetFailedOk() ([]string, bool) {
	if o == nil || IsNil(o.Failed) {
		return nil, false
	}
	return o.Failed, true
}

// HasFailed returns a boolean if a field has been set.
func (o *BulkObservableAddResponse) HasFailed() bool {
	if o != nil && !IsNil(o.Failed) {
		return true
	}

	return false
}

// SetFailed gets a reference to the given []string and assigns it to the Failed field.
func (o *BulkObservableAddResponse) SetFailed(v []string) {
	o.Failed = v
}

func (o BulkObservableAddResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BulkObservableAddResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Added) {
		toSerialize["added"] = o.Added
	}
	if !IsNil(o.Failed) {
		toSerialize["failed"] = o.Failed
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BulkObservableAddResponse) UnmarshalJSON(data []byte) (err error) {
	varBulkObservableAddResponse := _BulkObservableAddResponse{}

	err = json.Unmarshal(data, &varBulkObservableAddResponse)

	if err != nil {
		return err
	}

	*o = BulkObservableAddResponse(varBulkObservableAddResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "added")
		delete(additionalProperties, "failed")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBulkObservableAddResponse struct {
	value *BulkObservableAddResponse
	isSet bool
}

func (v NullableBulkObservableAddResponse) Get() *BulkObservableAddResponse {
	return v.value
}

func (v *NullableBulkObservableAddResponse) Set(val *BulkObservableAddResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableBulkObservableAddResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableBulkObservableAddResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBulkObservableAddResponse(val *BulkObservableAddResponse) *NullableBulkObservableAddResponse {
	return &NullableBulkObservableAddResponse{value: val, isSet: true}
}

func (v NullableBulkObservableAddResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBulkObservableAddResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
