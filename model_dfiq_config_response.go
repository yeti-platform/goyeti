/*
FastAPI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package goyeti

import (
	"encoding/json"
	"fmt"
)

// checks if the DFIQConfigResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DFIQConfigResponse{}

// DFIQConfigResponse struct for DFIQConfigResponse
type DFIQConfigResponse struct {
	StageTypes           []string `json:"stage_types"`
	StepTypes            []string `json:"step_types"`
	AdditionalProperties map[string]interface{}
}

type _DFIQConfigResponse DFIQConfigResponse

// NewDFIQConfigResponse instantiates a new DFIQConfigResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDFIQConfigResponse(stageTypes []string, stepTypes []string) *DFIQConfigResponse {
	this := DFIQConfigResponse{}
	this.StageTypes = stageTypes
	this.StepTypes = stepTypes
	return &this
}

// NewDFIQConfigResponseWithDefaults instantiates a new DFIQConfigResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDFIQConfigResponseWithDefaults() *DFIQConfigResponse {
	this := DFIQConfigResponse{}
	return &this
}

// GetStageTypes returns the StageTypes field value
func (o *DFIQConfigResponse) GetStageTypes() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.StageTypes
}

// GetStageTypesOk returns a tuple with the StageTypes field value
// and a boolean to check if the value has been set.
func (o *DFIQConfigResponse) GetStageTypesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StageTypes, true
}

// SetStageTypes sets field value
func (o *DFIQConfigResponse) SetStageTypes(v []string) {
	o.StageTypes = v
}

// GetStepTypes returns the StepTypes field value
func (o *DFIQConfigResponse) GetStepTypes() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.StepTypes
}

// GetStepTypesOk returns a tuple with the StepTypes field value
// and a boolean to check if the value has been set.
func (o *DFIQConfigResponse) GetStepTypesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StepTypes, true
}

// SetStepTypes sets field value
func (o *DFIQConfigResponse) SetStepTypes(v []string) {
	o.StepTypes = v
}

func (o DFIQConfigResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DFIQConfigResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["stage_types"] = o.StageTypes
	toSerialize["step_types"] = o.StepTypes

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DFIQConfigResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"stage_types",
		"step_types",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDFIQConfigResponse := _DFIQConfigResponse{}

	err = json.Unmarshal(data, &varDFIQConfigResponse)

	if err != nil {
		return err
	}

	*o = DFIQConfigResponse(varDFIQConfigResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "stage_types")
		delete(additionalProperties, "step_types")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDFIQConfigResponse struct {
	value *DFIQConfigResponse
	isSet bool
}

func (v NullableDFIQConfigResponse) Get() *DFIQConfigResponse {
	return v.value
}

func (v *NullableDFIQConfigResponse) Set(val *DFIQConfigResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDFIQConfigResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDFIQConfigResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDFIQConfigResponse(val *DFIQConfigResponse) *NullableDFIQConfigResponse {
	return &NullableDFIQConfigResponse{value: val, isSet: true}
}

func (v NullableDFIQConfigResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDFIQConfigResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
