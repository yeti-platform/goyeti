/*
FastAPI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package goyeti

import (
	"encoding/json"
	"fmt"
)

// checks if the DFIQSearchResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DFIQSearchResponse{}

// DFIQSearchResponse struct for DFIQSearchResponse
type DFIQSearchResponse struct {
	Dfiq                 []DfiqInner `json:"dfiq"`
	Total                int32       `json:"total"`
	AdditionalProperties map[string]interface{}
}

type _DFIQSearchResponse DFIQSearchResponse

// NewDFIQSearchResponse instantiates a new DFIQSearchResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDFIQSearchResponse(dfiq []DfiqInner, total int32) *DFIQSearchResponse {
	this := DFIQSearchResponse{}
	this.Dfiq = dfiq
	this.Total = total
	return &this
}

// NewDFIQSearchResponseWithDefaults instantiates a new DFIQSearchResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDFIQSearchResponseWithDefaults() *DFIQSearchResponse {
	this := DFIQSearchResponse{}
	return &this
}

// GetDfiq returns the Dfiq field value
func (o *DFIQSearchResponse) GetDfiq() []DfiqInner {
	if o == nil {
		var ret []DfiqInner
		return ret
	}

	return o.Dfiq
}

// GetDfiqOk returns a tuple with the Dfiq field value
// and a boolean to check if the value has been set.
func (o *DFIQSearchResponse) GetDfiqOk() ([]DfiqInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Dfiq, true
}

// SetDfiq sets field value
func (o *DFIQSearchResponse) SetDfiq(v []DfiqInner) {
	o.Dfiq = v
}

// GetTotal returns the Total field value
func (o *DFIQSearchResponse) GetTotal() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Total
}

// GetTotalOk returns a tuple with the Total field value
// and a boolean to check if the value has been set.
func (o *DFIQSearchResponse) GetTotalOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Total, true
}

// SetTotal sets field value
func (o *DFIQSearchResponse) SetTotal(v int32) {
	o.Total = v
}

func (o DFIQSearchResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DFIQSearchResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["dfiq"] = o.Dfiq
	toSerialize["total"] = o.Total

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DFIQSearchResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"dfiq",
		"total",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDFIQSearchResponse := _DFIQSearchResponse{}

	err = json.Unmarshal(data, &varDFIQSearchResponse)

	if err != nil {
		return err
	}

	*o = DFIQSearchResponse(varDFIQSearchResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "dfiq")
		delete(additionalProperties, "total")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDFIQSearchResponse struct {
	value *DFIQSearchResponse
	isSet bool
}

func (v NullableDFIQSearchResponse) Get() *DFIQSearchResponse {
	return v.value
}

func (v *NullableDFIQSearchResponse) Set(val *DFIQSearchResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDFIQSearchResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDFIQSearchResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDFIQSearchResponse(val *DFIQSearchResponse) *NullableDFIQSearchResponse {
	return &NullableDFIQSearchResponse{value: val, isSet: true}
}

func (v NullableDFIQSearchResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDFIQSearchResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
