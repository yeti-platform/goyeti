/*
FastAPI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package goyeti

import (
	"encoding/json"
	"fmt"
)

// IndicatorSearchRequestType struct for IndicatorSearchRequestType
type IndicatorSearchRequestType struct {
	IndicatorType *IndicatorType
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *IndicatorSearchRequestType) UnmarshalJSON(data []byte) error {
	var err error
	// this object is nullable so check if the payload is null or empty string
	if string(data) == "" || string(data) == "{}" {
		return nil
	}

	// try to unmarshal JSON data into IndicatorType
	err = json.Unmarshal(data, &dst.IndicatorType)
	if err == nil {
		jsonIndicatorType, _ := json.Marshal(dst.IndicatorType)
		if string(jsonIndicatorType) == "{}" { // empty struct
			dst.IndicatorType = nil
		} else {
			return nil // data stored in dst.IndicatorType, return on the first match
		}
	} else {
		dst.IndicatorType = nil
	}

	return fmt.Errorf("data failed to match schemas in anyOf(IndicatorSearchRequestType)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src IndicatorSearchRequestType) MarshalJSON() ([]byte, error) {
	if src.IndicatorType != nil {
		return json.Marshal(&src.IndicatorType)
	}

	return nil, nil // no data in anyOf schemas
}

type NullableIndicatorSearchRequestType struct {
	value *IndicatorSearchRequestType
	isSet bool
}

func (v NullableIndicatorSearchRequestType) Get() *IndicatorSearchRequestType {
	return v.value
}

func (v *NullableIndicatorSearchRequestType) Set(val *IndicatorSearchRequestType) {
	v.value = val
	v.isSet = true
}

func (v NullableIndicatorSearchRequestType) IsSet() bool {
	return v.isSet
}

func (v *NullableIndicatorSearchRequestType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIndicatorSearchRequestType(val *IndicatorSearchRequestType) *NullableIndicatorSearchRequestType {
	return &NullableIndicatorSearchRequestType{value: val, isSet: true}
}

func (v NullableIndicatorSearchRequestType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIndicatorSearchRequestType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
