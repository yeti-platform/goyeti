/*
FastAPI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package goyeti

import (
	"encoding/json"
	"fmt"
)

// checks if the PatchEntityRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PatchEntityRequest{}

// PatchEntityRequest struct for PatchEntityRequest
type PatchEntityRequest struct {
	Entity               Entity1 `json:"entity"`
	AdditionalProperties map[string]interface{}
}

type _PatchEntityRequest PatchEntityRequest

// NewPatchEntityRequest instantiates a new PatchEntityRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchEntityRequest(entity Entity1) *PatchEntityRequest {
	this := PatchEntityRequest{}
	this.Entity = entity
	return &this
}

// NewPatchEntityRequestWithDefaults instantiates a new PatchEntityRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchEntityRequestWithDefaults() *PatchEntityRequest {
	this := PatchEntityRequest{}
	return &this
}

// GetEntity returns the Entity field value
func (o *PatchEntityRequest) GetEntity() Entity1 {
	if o == nil {
		var ret Entity1
		return ret
	}

	return o.Entity
}

// GetEntityOk returns a tuple with the Entity field value
// and a boolean to check if the value has been set.
func (o *PatchEntityRequest) GetEntityOk() (*Entity1, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Entity, true
}

// SetEntity sets field value
func (o *PatchEntityRequest) SetEntity(v Entity1) {
	o.Entity = v
}

func (o PatchEntityRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PatchEntityRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["entity"] = o.Entity

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PatchEntityRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"entity",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPatchEntityRequest := _PatchEntityRequest{}

	err = json.Unmarshal(data, &varPatchEntityRequest)

	if err != nil {
		return err
	}

	*o = PatchEntityRequest(varPatchEntityRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "entity")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePatchEntityRequest struct {
	value *PatchEntityRequest
	isSet bool
}

func (v NullablePatchEntityRequest) Get() *PatchEntityRequest {
	return v.value
}

func (v *NullablePatchEntityRequest) Set(val *PatchEntityRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchEntityRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchEntityRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchEntityRequest(val *PatchEntityRequest) *NullablePatchEntityRequest {
	return &NullablePatchEntityRequest{value: val, isSet: true}
}

func (v NullablePatchEntityRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchEntityRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
