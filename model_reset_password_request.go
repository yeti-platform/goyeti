/*
FastAPI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package goyeti

import (
	"encoding/json"
	"fmt"
)

// checks if the ResetPasswordRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResetPasswordRequest{}

// ResetPasswordRequest struct for ResetPasswordRequest
type ResetPasswordRequest struct {
	UserId               string `json:"user_id"`
	NewPassword          string `json:"new_password"`
	AdditionalProperties map[string]interface{}
}

type _ResetPasswordRequest ResetPasswordRequest

// NewResetPasswordRequest instantiates a new ResetPasswordRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResetPasswordRequest(userId string, newPassword string) *ResetPasswordRequest {
	this := ResetPasswordRequest{}
	this.UserId = userId
	this.NewPassword = newPassword
	return &this
}

// NewResetPasswordRequestWithDefaults instantiates a new ResetPasswordRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResetPasswordRequestWithDefaults() *ResetPasswordRequest {
	this := ResetPasswordRequest{}
	return &this
}

// GetUserId returns the UserId field value
func (o *ResetPasswordRequest) GetUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *ResetPasswordRequest) GetUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *ResetPasswordRequest) SetUserId(v string) {
	o.UserId = v
}

// GetNewPassword returns the NewPassword field value
func (o *ResetPasswordRequest) GetNewPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NewPassword
}

// GetNewPasswordOk returns a tuple with the NewPassword field value
// and a boolean to check if the value has been set.
func (o *ResetPasswordRequest) GetNewPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NewPassword, true
}

// SetNewPassword sets field value
func (o *ResetPasswordRequest) SetNewPassword(v string) {
	o.NewPassword = v
}

func (o ResetPasswordRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResetPasswordRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["user_id"] = o.UserId
	toSerialize["new_password"] = o.NewPassword

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ResetPasswordRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"user_id",
		"new_password",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varResetPasswordRequest := _ResetPasswordRequest{}

	err = json.Unmarshal(data, &varResetPasswordRequest)

	if err != nil {
		return err
	}

	*o = ResetPasswordRequest(varResetPasswordRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "user_id")
		delete(additionalProperties, "new_password")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableResetPasswordRequest struct {
	value *ResetPasswordRequest
	isSet bool
}

func (v NullableResetPasswordRequest) Get() *ResetPasswordRequest {
	return v.value
}

func (v *NullableResetPasswordRequest) Set(val *ResetPasswordRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableResetPasswordRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableResetPasswordRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResetPasswordRequest(val *ResetPasswordRequest) *NullableResetPasswordRequest {
	return &NullableResetPasswordRequest{value: val, isSet: true}
}

func (v NullableResetPasswordRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResetPasswordRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
