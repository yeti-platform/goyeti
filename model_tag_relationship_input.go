/*
FastAPI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package goyeti

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the TagRelationshipInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TagRelationshipInput{}

// TagRelationshipInput struct for TagRelationshipInput
type TagRelationshipInput struct {
	Source   string       `json:"source"`
	Target   string       `json:"target"`
	LastSeen time.Time    `json:"last_seen"`
	Expires  NullableTime `json:"expires,omitempty"`
	Fresh    bool         `json:"fresh"`
}

type _TagRelationshipInput TagRelationshipInput

// NewTagRelationshipInput instantiates a new TagRelationshipInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTagRelationshipInput(source string, target string, lastSeen time.Time, fresh bool) *TagRelationshipInput {
	this := TagRelationshipInput{}
	this.Source = source
	this.Target = target
	this.LastSeen = lastSeen
	this.Fresh = fresh
	return &this
}

// NewTagRelationshipInputWithDefaults instantiates a new TagRelationshipInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTagRelationshipInputWithDefaults() *TagRelationshipInput {
	this := TagRelationshipInput{}
	return &this
}

// GetSource returns the Source field value
func (o *TagRelationshipInput) GetSource() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Source
}

// GetSourceOk returns a tuple with the Source field value
// and a boolean to check if the value has been set.
func (o *TagRelationshipInput) GetSourceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Source, true
}

// SetSource sets field value
func (o *TagRelationshipInput) SetSource(v string) {
	o.Source = v
}

// GetTarget returns the Target field value
func (o *TagRelationshipInput) GetTarget() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Target
}

// GetTargetOk returns a tuple with the Target field value
// and a boolean to check if the value has been set.
func (o *TagRelationshipInput) GetTargetOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Target, true
}

// SetTarget sets field value
func (o *TagRelationshipInput) SetTarget(v string) {
	o.Target = v
}

// GetLastSeen returns the LastSeen field value
func (o *TagRelationshipInput) GetLastSeen() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.LastSeen
}

// GetLastSeenOk returns a tuple with the LastSeen field value
// and a boolean to check if the value has been set.
func (o *TagRelationshipInput) GetLastSeenOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastSeen, true
}

// SetLastSeen sets field value
func (o *TagRelationshipInput) SetLastSeen(v time.Time) {
	o.LastSeen = v
}

// GetExpires returns the Expires field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TagRelationshipInput) GetExpires() time.Time {
	if o == nil || IsNil(o.Expires.Get()) {
		var ret time.Time
		return ret
	}
	return *o.Expires.Get()
}

// GetExpiresOk returns a tuple with the Expires field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TagRelationshipInput) GetExpiresOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.Expires.Get(), o.Expires.IsSet()
}

// HasExpires returns a boolean if a field has been set.
func (o *TagRelationshipInput) HasExpires() bool {
	if o != nil && o.Expires.IsSet() {
		return true
	}

	return false
}

// SetExpires gets a reference to the given NullableTime and assigns it to the Expires field.
func (o *TagRelationshipInput) SetExpires(v time.Time) {
	o.Expires.Set(&v)
}

// SetExpiresNil sets the value for Expires to be an explicit nil
func (o *TagRelationshipInput) SetExpiresNil() {
	o.Expires.Set(nil)
}

// UnsetExpires ensures that no value is present for Expires, not even an explicit nil
func (o *TagRelationshipInput) UnsetExpires() {
	o.Expires.Unset()
}

// GetFresh returns the Fresh field value
func (o *TagRelationshipInput) GetFresh() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Fresh
}

// GetFreshOk returns a tuple with the Fresh field value
// and a boolean to check if the value has been set.
func (o *TagRelationshipInput) GetFreshOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Fresh, true
}

// SetFresh sets field value
func (o *TagRelationshipInput) SetFresh(v bool) {
	o.Fresh = v
}

func (o TagRelationshipInput) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TagRelationshipInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["source"] = o.Source
	toSerialize["target"] = o.Target
	toSerialize["last_seen"] = o.LastSeen
	if o.Expires.IsSet() {
		toSerialize["expires"] = o.Expires.Get()
	}
	toSerialize["fresh"] = o.Fresh
	return toSerialize, nil
}

func (o *TagRelationshipInput) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"source",
		"target",
		"last_seen",
		"fresh",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTagRelationshipInput := _TagRelationshipInput{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTagRelationshipInput)

	if err != nil {
		return err
	}

	*o = TagRelationshipInput(varTagRelationshipInput)

	return err
}

type NullableTagRelationshipInput struct {
	value *TagRelationshipInput
	isSet bool
}

func (v NullableTagRelationshipInput) Get() *TagRelationshipInput {
	return v.value
}

func (v *NullableTagRelationshipInput) Set(val *TagRelationshipInput) {
	v.value = val
	v.isSet = true
}

func (v NullableTagRelationshipInput) IsSet() bool {
	return v.isSet
}

func (v *NullableTagRelationshipInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTagRelationshipInput(val *TagRelationshipInput) *NullableTagRelationshipInput {
	return &NullableTagRelationshipInput{value: val, isSet: true}
}

func (v NullableTagRelationshipInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTagRelationshipInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
