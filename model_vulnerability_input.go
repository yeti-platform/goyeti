/*
FastAPI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package goyeti

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the VulnerabilityInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VulnerabilityInput{}

// VulnerabilityInput This class represents a vulnerability in the schema.  Attributes:     title: title of the vulnerability.     base_score : base score of the vulnerability obtained from CVSS metric                  ranging from 0.0 to 10.0.     severity: represents the severity of a vulnerability. One of none, low,               medium, high, critical.
type VulnerabilityInput struct {
	Type        *string                  `json:"type,omitempty"`
	Name        string                   `json:"name"`
	Description *string                  `json:"description,omitempty"`
	Context     []map[string]interface{} `json:"context,omitempty"`
	Created     *time.Time               `json:"created,omitempty"`
	Modified    *time.Time               `json:"modified,omitempty"`
	Title       *string                  `json:"title,omitempty"`
	BaseScore   *float32                 `json:"base_score,omitempty"`
	Severity    *SeverityType            `json:"severity,omitempty"`
	Reference   *string                  `json:"reference,omitempty"`
}

type _VulnerabilityInput VulnerabilityInput

// NewVulnerabilityInput instantiates a new VulnerabilityInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVulnerabilityInput(name string) *VulnerabilityInput {
	this := VulnerabilityInput{}
	var type_ string = "vulnerability"
	this.Type = &type_
	this.Name = name
	var description string = ""
	this.Description = &description
	var title string = ""
	this.Title = &title
	var baseScore float32 = 0.0
	this.BaseScore = &baseScore
	var reference string = ""
	this.Reference = &reference
	return &this
}

// NewVulnerabilityInputWithDefaults instantiates a new VulnerabilityInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVulnerabilityInputWithDefaults() *VulnerabilityInput {
	this := VulnerabilityInput{}
	var type_ string = "vulnerability"
	this.Type = &type_
	var description string = ""
	this.Description = &description
	var title string = ""
	this.Title = &title
	var baseScore float32 = 0.0
	this.BaseScore = &baseScore
	var reference string = ""
	this.Reference = &reference
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *VulnerabilityInput) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilityInput) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *VulnerabilityInput) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *VulnerabilityInput) SetType(v string) {
	o.Type = &v
}

// GetName returns the Name field value
func (o *VulnerabilityInput) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *VulnerabilityInput) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *VulnerabilityInput) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *VulnerabilityInput) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilityInput) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *VulnerabilityInput) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *VulnerabilityInput) SetDescription(v string) {
	o.Description = &v
}

// GetContext returns the Context field value if set, zero value otherwise.
func (o *VulnerabilityInput) GetContext() []map[string]interface{} {
	if o == nil || IsNil(o.Context) {
		var ret []map[string]interface{}
		return ret
	}
	return o.Context
}

// GetContextOk returns a tuple with the Context field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilityInput) GetContextOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Context) {
		return nil, false
	}
	return o.Context, true
}

// HasContext returns a boolean if a field has been set.
func (o *VulnerabilityInput) HasContext() bool {
	if o != nil && !IsNil(o.Context) {
		return true
	}

	return false
}

// SetContext gets a reference to the given []map[string]interface{} and assigns it to the Context field.
func (o *VulnerabilityInput) SetContext(v []map[string]interface{}) {
	o.Context = v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *VulnerabilityInput) GetCreated() time.Time {
	if o == nil || IsNil(o.Created) {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilityInput) GetCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *VulnerabilityInput) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *VulnerabilityInput) SetCreated(v time.Time) {
	o.Created = &v
}

// GetModified returns the Modified field value if set, zero value otherwise.
func (o *VulnerabilityInput) GetModified() time.Time {
	if o == nil || IsNil(o.Modified) {
		var ret time.Time
		return ret
	}
	return *o.Modified
}

// GetModifiedOk returns a tuple with the Modified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilityInput) GetModifiedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Modified) {
		return nil, false
	}
	return o.Modified, true
}

// HasModified returns a boolean if a field has been set.
func (o *VulnerabilityInput) HasModified() bool {
	if o != nil && !IsNil(o.Modified) {
		return true
	}

	return false
}

// SetModified gets a reference to the given time.Time and assigns it to the Modified field.
func (o *VulnerabilityInput) SetModified(v time.Time) {
	o.Modified = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *VulnerabilityInput) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilityInput) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *VulnerabilityInput) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *VulnerabilityInput) SetTitle(v string) {
	o.Title = &v
}

// GetBaseScore returns the BaseScore field value if set, zero value otherwise.
func (o *VulnerabilityInput) GetBaseScore() float32 {
	if o == nil || IsNil(o.BaseScore) {
		var ret float32
		return ret
	}
	return *o.BaseScore
}

// GetBaseScoreOk returns a tuple with the BaseScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilityInput) GetBaseScoreOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseScore) {
		return nil, false
	}
	return o.BaseScore, true
}

// HasBaseScore returns a boolean if a field has been set.
func (o *VulnerabilityInput) HasBaseScore() bool {
	if o != nil && !IsNil(o.BaseScore) {
		return true
	}

	return false
}

// SetBaseScore gets a reference to the given float32 and assigns it to the BaseScore field.
func (o *VulnerabilityInput) SetBaseScore(v float32) {
	o.BaseScore = &v
}

// GetSeverity returns the Severity field value if set, zero value otherwise.
func (o *VulnerabilityInput) GetSeverity() SeverityType {
	if o == nil || IsNil(o.Severity) {
		var ret SeverityType
		return ret
	}
	return *o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilityInput) GetSeverityOk() (*SeverityType, bool) {
	if o == nil || IsNil(o.Severity) {
		return nil, false
	}
	return o.Severity, true
}

// HasSeverity returns a boolean if a field has been set.
func (o *VulnerabilityInput) HasSeverity() bool {
	if o != nil && !IsNil(o.Severity) {
		return true
	}

	return false
}

// SetSeverity gets a reference to the given SeverityType and assigns it to the Severity field.
func (o *VulnerabilityInput) SetSeverity(v SeverityType) {
	o.Severity = &v
}

// GetReference returns the Reference field value if set, zero value otherwise.
func (o *VulnerabilityInput) GetReference() string {
	if o == nil || IsNil(o.Reference) {
		var ret string
		return ret
	}
	return *o.Reference
}

// GetReferenceOk returns a tuple with the Reference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VulnerabilityInput) GetReferenceOk() (*string, bool) {
	if o == nil || IsNil(o.Reference) {
		return nil, false
	}
	return o.Reference, true
}

// HasReference returns a boolean if a field has been set.
func (o *VulnerabilityInput) HasReference() bool {
	if o != nil && !IsNil(o.Reference) {
		return true
	}

	return false
}

// SetReference gets a reference to the given string and assigns it to the Reference field.
func (o *VulnerabilityInput) SetReference(v string) {
	o.Reference = &v
}

func (o VulnerabilityInput) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VulnerabilityInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Context) {
		toSerialize["context"] = o.Context
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.Modified) {
		toSerialize["modified"] = o.Modified
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.BaseScore) {
		toSerialize["base_score"] = o.BaseScore
	}
	if !IsNil(o.Severity) {
		toSerialize["severity"] = o.Severity
	}
	if !IsNil(o.Reference) {
		toSerialize["reference"] = o.Reference
	}
	return toSerialize, nil
}

func (o *VulnerabilityInput) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varVulnerabilityInput := _VulnerabilityInput{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varVulnerabilityInput)

	if err != nil {
		return err
	}

	*o = VulnerabilityInput(varVulnerabilityInput)

	return err
}

type NullableVulnerabilityInput struct {
	value *VulnerabilityInput
	isSet bool
}

func (v NullableVulnerabilityInput) Get() *VulnerabilityInput {
	return v.value
}

func (v *NullableVulnerabilityInput) Set(val *VulnerabilityInput) {
	v.value = val
	v.isSet = true
}

func (v NullableVulnerabilityInput) IsSet() bool {
	return v.isSet
}

func (v *NullableVulnerabilityInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVulnerabilityInput(val *VulnerabilityInput) *NullableVulnerabilityInput {
	return &NullableVulnerabilityInput{value: val, isSet: true}
}

func (v NullableVulnerabilityInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVulnerabilityInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
