/*
FastAPI

Testing EntitiesAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package goyeti

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	openapiclient "github.com/yeti-platform/goyeti"
	"testing"
)

func Test_goyeti_EntitiesAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test EntitiesAPIService DeleteApiV2EntitiesEntityIdDelete", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var entityId string

		resp, httpRes, err := apiClient.EntitiesAPI.DeleteApiV2EntitiesEntityIdDelete(context.Background(), entityId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test EntitiesAPIService DetailsApiV2EntitiesEntityIdGet", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var entityId interface{}

		resp, httpRes, err := apiClient.EntitiesAPI.DetailsApiV2EntitiesEntityIdGet(context.Background(), entityId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test EntitiesAPIService NewApiV2EntitiesPost", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.EntitiesAPI.NewApiV2EntitiesPost(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test EntitiesAPIService PatchApiV2EntitiesEntityIdPatch", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var entityId interface{}

		resp, httpRes, err := apiClient.EntitiesAPI.PatchApiV2EntitiesEntityIdPatch(context.Background(), entityId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test EntitiesAPIService SearchApiV2EntitiesSearchPost", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.EntitiesAPI.SearchApiV2EntitiesSearchPost(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test EntitiesAPIService TagApiV2EntitiesTagPost", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.EntitiesAPI.TagApiV2EntitiesTagPost(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
