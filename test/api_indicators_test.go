/*
FastAPI

Testing IndicatorsAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package goyeti

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	openapiclient "github.com/yeti-platform/goyeti"
	"testing"
)

func Test_goyeti_IndicatorsAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test IndicatorsAPIService DeleteApiV2IndicatorsIndicatorIdDelete", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var indicatorId string

		resp, httpRes, err := apiClient.IndicatorsAPI.DeleteApiV2IndicatorsIndicatorIdDelete(context.Background(), indicatorId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test IndicatorsAPIService DetailsApiV2IndicatorsIndicatorIdGet", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var indicatorId interface{}

		resp, httpRes, err := apiClient.IndicatorsAPI.DetailsApiV2IndicatorsIndicatorIdGet(context.Background(), indicatorId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test IndicatorsAPIService NewApiV2IndicatorsPost", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.IndicatorsAPI.NewApiV2IndicatorsPost(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test IndicatorsAPIService PatchApiV2IndicatorsIndicatorIdPatch", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var indicatorId interface{}

		resp, httpRes, err := apiClient.IndicatorsAPI.PatchApiV2IndicatorsIndicatorIdPatch(context.Background(), indicatorId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test IndicatorsAPIService SearchApiV2IndicatorsSearchPost", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.IndicatorsAPI.SearchApiV2IndicatorsSearchPost(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test IndicatorsAPIService TagApiV2IndicatorsTagPost", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.IndicatorsAPI.TagApiV2IndicatorsTagPost(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
